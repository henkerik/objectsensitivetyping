<?php
function __log__ ($var, $value, $label)  // "ln: 5, lx: 6, lxe: 7"
{
    $type = gettype ($value);// /* , Call: 10, Return: 11, Exception Return: 12, After: 8, Exception After: 9 */ function call
    $cmp = "object"; // 13
    $is_object = $type == $cmp; // 14
    $open = "["; // 15
    $close = "]"; // 16
    if ($is_object){
        $clazz = get_class ($value);// /* , Call: 20, Return: 21, Exception Return: 22, After: 18, Exception After: 19 */ function call
        $object = "object"; // 23
        $type = $object . $open; // 24
        $type = $type . $clazz; // 25
        $type = $type . $close; // 26
    }
    else {
         // "27 skip"
    }
    $cmp = "resource"; // 28
    $is_resource = $type == $cmp; // 29
    if ($is_resource){
        $resourcetype = get_resource_type ($value);// /* , Call: 33, Return: 34, Exception Return: 35, After: 31, Exception After: 32 */ function call
        $resource = "resource"; // 36
        $type = $resource . $open; // 37
        $type = $type . $resourcetype; // 38
        $type = $type . $close; // 39
    }
    else {
         // "40 skip"
    }
    $file = "log.txt"; // 41
    $newline = "\n"; // 42
    $flags = FILE_APPEND; // 43
    $colon = ":"; // 44
    $line = $label . $colon; // 45
    $line = $line . $var; // 46
    $line = $line . $colon; // 47
    $line = $line . $type; // 48
    $line = $line . $newline; // 49
    file_put_contents ($file, $line, $flags);// /* , Call: 52, Return: 53, Exception Return: 54, After: 50, Exception After: 51 */ function call
}
 // "55 skip"
class camera { // "56"
    protected $position;
    protected $direction;
    protected $angle;
    protected $up;
    protected $right;
    public function __construct ()/* Entry: 57, Exit: 58, Exception Exit: 59 */ 
                                                                               {
                                                                                   $TLE26 = 0; // 60
                                                                                   __log__ ("TLE26", $TLE26, 10);
                                                                                   $TLE27 = 0; // 61
                                                                                   __log__ ("TLE27", $TLE27, 11);
                                                                                   $TLE28 = 0; // 62
                                                                                   __log__ ("TLE28", $TLE28, 12);
                                                                                   $TLE29 = new vector ($TLE26, $TLE27, $TLE28);// /* , Call: 65, Return: 66, Exception Return: 67, After: 63, Exception After: 64 */ constructor call
                                                                                   __log__ ("TLE29", $TLE29, 13);
                                                                                   $TSNNt497 = $TLE29; // 68
                                                                                   __log__ ("TSNNt497", $TSNNt497, 18);
                                                                                   $this->position = $TSNNt497; // 69
                                                                                   $TLE30 = 0; // 70
                                                                                   __log__ ("TLE30", $TLE30, 20);
                                                                                   $TLE31 = 1; // 71
                                                                                   __log__ ("TLE31", $TLE31, 21);
                                                                                   $TLE32 = 0; // 72
                                                                                   __log__ ("TLE32", $TLE32, 22);
                                                                                   $TLE33 = new vector ($TLE30, $TLE31, $TLE32);// /* , Call: 75, Return: 76, Exception Return: 77, After: 73, Exception After: 74 */ constructor call
                                                                                   __log__ ("TLE33", $TLE33, 23);
                                                                                   $TSNNt498 = $TLE33; // 78
                                                                                   __log__ ("TSNNt498", $TSNNt498, 28);
                                                                                   $this->up = $TSNNt498; // 79
                                                                                   $TLE34 = 30; // 80
                                                                                   __log__ ("TLE34", $TLE34, 30);
                                                                                   $TLE35 = 180; // 81
                                                                                   __log__ ("TLE35", $TLE35, 31);
                                                                                   $TLE36 = $TLE34 / $TLE35; // 82
                                                                                   __log__ ("TLE36", $TLE36, 32);
                                                                                   $TLE37 = M_PI; // 83
                                                                                   __log__ ("TLE37", $TLE37, 33);
                                                                                   $TLE38 = $TLE36 * $TLE37; // 84
                                                                                   __log__ ("TLE38", $TLE38, 34);
                                                                                   $TSNNt499 = $TLE38; // 85
                                                                                   __log__ ("TSNNt499", $TSNNt499, 35);
                                                                                   $this->angle = $TSNNt499; // 86
                                                                               }
    public function getdirection ()/* Entry: 87, Exit: 88, Exception Exit: 89 */ 
                                                                                {
                                                                                    $TSNNt500 = $this->direction; // 90
                                                                                    __log__ ("TSNNt500", $TSNNt500, 40);
                                                                                    return $TSNNt500; // 91
                                                                                }
    public function getangle ()/* Entry: 92, Exit: 93, Exception Exit: 94 */ 
                                                                            {
                                                                                $TSNNt501 = $this->angle; // 95
                                                                                __log__ ("TSNNt501", $TSNNt501, 45);
                                                                                return $TSNNt501; // 96
                                                                            }
    public function getright ()/* Entry: 97, Exit: 98, Exception Exit: 99 */ 
                                                                            {
                                                                                $TSNNt502 = $this->right; // 100
                                                                                __log__ ("TSNNt502", $TSNNt502, 50);
                                                                                return $TSNNt502; // 101
                                                                            }
    public function getup ()/* Entry: 102, Exit: 103, Exception Exit: 104 */ 
                                                                            {
                                                                                $TSNNt503 = $this->up; // 105
                                                                                __log__ ("TSNNt503", $TSNNt503, 55);
                                                                                return $TSNNt503; // 106
                                                                            }
    public function setposition (vector $v)/* Entry: 107, Exit: 108, Exception Exit: 109 */ 
                                                                                           {
                                                                                               $TSNNt504 = $v; // 110
                                                                                               __log__ ("TSNNt504", $TSNNt504, 60);
                                                                                               $this->position = $TSNNt504; // 111
                                                                                               return $this; // 112
                                                                                           }
    public function getposition ()/* Entry: 113, Exit: 114, Exception Exit: 115 */ 
                                                                                  {
                                                                                      $TSNNt505 = $this->position; // 116
                                                                                      __log__ ("TSNNt505", $TSNNt505, 66);
                                                                                      return $TSNNt505; // 117
                                                                                  }
    public function setlookat (vector $v)/* Entry: 118, Exit: 119, Exception Exit: 120 */ 
                                                                                         {
                                                                                             $TLE39 = $v->klone ();// /* , Call: 123, Return: 124, Exception Return: 125, After: 121, Exception After: 122 */ method call
                                                                                             __log__ ("TLE39", $TLE39, 71);
                                                                                             $TSNNt506 = $TLE39; // 126
                                                                                             __log__ ("TSNNt506", $TSNNt506, 76);
                                                                                             $this->direction = $TSNNt506; // 127
                                                                                             $TSNNt507 = $this->direction; // 128
                                                                                             __log__ ("TSNNt507", $TSNNt507, 78);
                                                                                             $TSNNt508 = $this->position; // 129
                                                                                             __log__ ("TSNNt508", $TSNNt508, 79);
                                                                                             $TSNNt507->v_sub ($TSNNt508);// /* , Call: 132, Return: 133, Exception Return: 134, After: 130, Exception After: 131 */ method call
                                                                                             $TSNNt509 = $this->direction; // 135
                                                                                             __log__ ("TSNNt509", $TSNNt509, 85);
                                                                                             $TLE40 = $TSNNt509->isnull ();// /* , Call: 138, Return: 139, Exception Return: 140, After: 136, Exception After: 137 */ method call
                                                                                             __log__ ("TLE40", $TLE40, 86);
                                                                                             $TLE41 = !$TLE40; // 141
                                                                                             __log__ ("TLE41", $TLE41, 91);
                                                                                             $TLE42 = 'look at == position'; // 142
                                                                                             __log__ ("TLE42", $TLE42, 92);
                                                                                             my_assert ($TLE41, $TLE42);// /* , Call: 145, Return: 146, Exception Return: 147, After: 143, Exception After: 144 */ function call
                                                                                             $TSNNt510 = $this->direction; // 148
                                                                                             __log__ ("TSNNt510", $TSNNt510, 98);
                                                                                             $TSNNt510->normalize ();// /* , Call: 151, Return: 152, Exception Return: 153, After: 149, Exception After: 150 */ method call
                                                                                             $TSNNt511 = $this->up; // 154
                                                                                             __log__ ("TSNNt511", $TSNNt511, 104);
                                                                                             $TLE43 = $TSNNt511->klone ();// /* , Call: 157, Return: 158, Exception Return: 159, After: 155, Exception After: 156 */ method call
                                                                                             __log__ ("TLE43", $TLE43, 105);
                                                                                             $TSNNt512 = $TLE43; // 160
                                                                                             __log__ ("TSNNt512", $TSNNt512, 110);
                                                                                             $this->right = $TSNNt512; // 161
                                                                                             $TSNNt513 = $this->right; // 162
                                                                                             __log__ ("TSNNt513", $TSNNt513, 112);
                                                                                             $TSNNt514 = $this->direction; // 163
                                                                                             __log__ ("TSNNt514", $TSNNt514, 113);
                                                                                             $TSNNt513->v_cross ($TSNNt514);// /* , Call: 166, Return: 167, Exception Return: 168, After: 164, Exception After: 165 */ method call
                                                                                             $TSNNt515 = $this->direction; // 169
                                                                                             __log__ ("TSNNt515", $TSNNt515, 119);
                                                                                             $TLE44 = $TSNNt515->klone ();// /* , Call: 172, Return: 173, Exception Return: 174, After: 170, Exception After: 171 */ method call
                                                                                             __log__ ("TLE44", $TLE44, 120);
                                                                                             $TSNNt516 = $TLE44; // 175
                                                                                             __log__ ("TSNNt516", $TSNNt516, 125);
                                                                                             $this->up = $TSNNt516; // 176
                                                                                             $TSNNt517 = $this->up; // 177
                                                                                             __log__ ("TSNNt517", $TSNNt517, 127);
                                                                                             $TSNNt518 = $this->right; // 178
                                                                                             __log__ ("TSNNt518", $TSNNt518, 128);
                                                                                             $TSNNt517->v_cross ($TSNNt518);// /* , Call: 181, Return: 182, Exception Return: 183, After: 179, Exception After: 180 */ method call
                                                                                             return $this; // 184
                                                                                         }
}
class color extends vector { // "185"
    public static $white;
    public static $black;
    public static $red;
    public static $green;
    public static $blue;
    public function __construct ($x, $y, $z)/* Entry: 186, Exit: 187, Exception Exit: 188 */ 
                                                                                            {
                                                                                                $TLE45 = 1; // 189
                                                                                                __log__ ("TLE45", $TLE45, 139);
                                                                                                $x = min ($x, $TLE45); // "190native call"
                                                                                                __log__ ("x", $x, 140);
                                                                                                $TLE46 = 1; // 191
                                                                                                __log__ ("TLE46", $TLE46, 141);
                                                                                                $y = min ($y, $TLE46); // "192native call"
                                                                                                __log__ ("y", $y, 142);
                                                                                                $TLE47 = 1; // 193
                                                                                                __log__ ("TLE47", $TLE47, 143);
                                                                                                $z = min ($z, $TLE47); // "194native call"
                                                                                                __log__ ("z", $z, 144);
                                                                                                vector::__construct ($x, $y, $z);// /* , Call: 197, Return: 198, Exception Return: 199, After: 195, Exception After: 196 */ resolved method call
                                                                                            }
    public function klone ()/* Entry: 200, Exit: 201, Exception Exit: 202 */ 
                                                                            {
                                                                                $TSNNt519 = $this->x; // 203
                                                                                __log__ ("TSNNt519", $TSNNt519, 153);
                                                                                $TSNNt520 = $this->y; // 204
                                                                                __log__ ("TSNNt520", $TSNNt520, 154);
                                                                                $TSNNt521 = $this->z; // 205
                                                                                __log__ ("TSNNt521", $TSNNt521, 155);
                                                                                $TLE48 = new color ($TSNNt519, $TSNNt520, $TSNNt521);// /* , Call: 208, Return: 209, Exception Return: 210, After: 206, Exception After: 207 */ constructor call
                                                                                __log__ ("TLE48", $TLE48, 156);
                                                                                return $TLE48; // 211
                                                                            }
    public function toint ()/* Entry: 212, Exit: 213, Exception Exit: 214 */ 
                                                                            {
                                                                                $TLE49 = 255; // 215
                                                                                __log__ ("TLE49", $TLE49, 165);
                                                                                $TSNNt522 = $this->x; // 216
                                                                                __log__ ("TSNNt522", $TSNNt522, 166);
                                                                                $TLE50 = $TSNNt522 * $TLE49; // 217
                                                                                __log__ ("TLE50", $TLE50, 167);
                                                                                $TLE51 = 255; // 218
                                                                                __log__ ("TLE51", $TLE51, 168);
                                                                                $TLE52 = $TLE50 & $TLE51; // 219
                                                                                __log__ ("TLE52", $TLE52, 169);
                                                                                $TLE53 = 16; // 220
                                                                                __log__ ("TLE53", $TLE53, 170);
                                                                                $TLE54 = $TLE52 << $TLE53; // 221
                                                                                __log__ ("TLE54", $TLE54, 171);
                                                                                $TLE55 = 255; // 222
                                                                                __log__ ("TLE55", $TLE55, 172);
                                                                                $TSNNt523 = $this->y; // 223
                                                                                __log__ ("TSNNt523", $TSNNt523, 173);
                                                                                $TLE56 = $TSNNt523 * $TLE55; // 224
                                                                                __log__ ("TLE56", $TLE56, 174);
                                                                                $TLE57 = 255; // 225
                                                                                __log__ ("TLE57", $TLE57, 175);
                                                                                $TLE58 = $TLE56 & $TLE57; // 226
                                                                                __log__ ("TLE58", $TLE58, 176);
                                                                                $TLE59 = 8; // 227
                                                                                __log__ ("TLE59", $TLE59, 177);
                                                                                $TLE60 = $TLE58 << $TLE59; // 228
                                                                                __log__ ("TLE60", $TLE60, 178);
                                                                                $TLE61 = $TLE54 | $TLE60; // 229
                                                                                __log__ ("TLE61", $TLE61, 179);
                                                                                $TLE62 = 255; // 230
                                                                                __log__ ("TLE62", $TLE62, 180);
                                                                                $TSNNt524 = $this->z; // 231
                                                                                __log__ ("TSNNt524", $TSNNt524, 181);
                                                                                $TLE63 = $TSNNt524 * $TLE62; // 232
                                                                                __log__ ("TLE63", $TLE63, 182);
                                                                                $TLE64 = 255; // 233
                                                                                __log__ ("TLE64", $TLE64, 183);
                                                                                $TLE65 = $TLE63 & $TLE64; // 234
                                                                                __log__ ("TLE65", $TLE65, 184);
                                                                                $TLE66 = $TLE61 | $TLE65; // 235
                                                                                __log__ ("TLE66", $TLE66, 185);
                                                                                return $TLE66; // 236
                                                                            }
    public function __tostring ()/* Entry: 237, Exit: 238, Exception Exit: 239 */ 
                                                                                 {
                                                                                     $TLE67 = '%02x%02x%02x'; // 240
                                                                                     __log__ ("TLE67", $TLE67, 190);
                                                                                     $TLE68 = 255; // 241
                                                                                     __log__ ("TLE68", $TLE68, 191);
                                                                                     $TSNNt525 = $this->x; // 242
                                                                                     __log__ ("TSNNt525", $TSNNt525, 192);
                                                                                     $TLE69 = $TSNNt525 * $TLE68; // 243
                                                                                     __log__ ("TLE69", $TLE69, 193);
                                                                                     $TLE70 = 255; // 244
                                                                                     __log__ ("TLE70", $TLE70, 194);
                                                                                     $TLE71 = $TLE69 & $TLE70; // 245
                                                                                     __log__ ("TLE71", $TLE71, 195);
                                                                                     $TLE72 = 255; // 246
                                                                                     __log__ ("TLE72", $TLE72, 196);
                                                                                     $TSNNt526 = $this->y; // 247
                                                                                     __log__ ("TSNNt526", $TSNNt526, 197);
                                                                                     $TLE73 = $TSNNt526 * $TLE72; // 248
                                                                                     __log__ ("TLE73", $TLE73, 198);
                                                                                     $TLE74 = 255; // 249
                                                                                     __log__ ("TLE74", $TLE74, 199);
                                                                                     $TLE75 = $TLE73 & $TLE74; // 250
                                                                                     __log__ ("TLE75", $TLE75, 200);
                                                                                     $TLE76 = 255; // 251
                                                                                     __log__ ("TLE76", $TLE76, 201);
                                                                                     $TSNNt527 = $this->z; // 252
                                                                                     __log__ ("TSNNt527", $TSNNt527, 202);
                                                                                     $TLE77 = $TSNNt527 * $TLE76; // 253
                                                                                     __log__ ("TLE77", $TLE77, 203);
                                                                                     $TLE78 = 255; // 254
                                                                                     __log__ ("TLE78", $TLE78, 204);
                                                                                     $TLE79 = $TLE77 & $TLE78; // 255
                                                                                     __log__ ("TLE79", $TLE79, 205);
                                                                                     $TLE80 = sprintf ($TLE67, $TLE71, $TLE75, $TLE79); // "256native call"
                                                                                     __log__ ("TLE80", $TLE80, 206);
                                                                                     return $TLE80; // 257
                                                                                 }
}
$TLE81 = 1; // 258
__log__ ("TLE81", $TLE81, 208);
$TLE82 = 1; // 259
__log__ ("TLE82", $TLE82, 209);
$TLE83 = 1; // 260
__log__ ("TLE83", $TLE83, 210);
$TLE84 = new color ($TLE81, $TLE82, $TLE83);// /* , Call: 263, Return: 264, Exception Return: 265, After: 261, Exception After: 262 */ constructor call
__log__ ("TLE84", $TLE84, 211);
$TSNNt528 = $TLE84; // 266
__log__ ("TSNNt528", $TSNNt528, 216);
color::$white = $TSNNt528; // 267
$TLE85 = 0; // 268
__log__ ("TLE85", $TLE85, 218);
$TLE86 = 0; // 269
__log__ ("TLE86", $TLE86, 219);
$TLE87 = 0; // 270
__log__ ("TLE87", $TLE87, 220);
$TLE88 = new color ($TLE85, $TLE86, $TLE87);// /* , Call: 273, Return: 274, Exception Return: 275, After: 271, Exception After: 272 */ constructor call
__log__ ("TLE88", $TLE88, 221);
$TSNNt529 = $TLE88; // 276
__log__ ("TSNNt529", $TSNNt529, 226);
color::$black = $TSNNt529; // 277
$TLE89 = 1; // 278
__log__ ("TLE89", $TLE89, 228);
$TLE90 = 0; // 279
__log__ ("TLE90", $TLE90, 229);
$TLE91 = 0; // 280
__log__ ("TLE91", $TLE91, 230);
$TLE92 = new color ($TLE89, $TLE90, $TLE91);// /* , Call: 283, Return: 284, Exception Return: 285, After: 281, Exception After: 282 */ constructor call
__log__ ("TLE92", $TLE92, 231);
$TSNNt530 = $TLE92; // 286
__log__ ("TSNNt530", $TSNNt530, 236);
color::$red = $TSNNt530; // 287
$TLE93 = 0; // 288
__log__ ("TLE93", $TLE93, 238);
$TLE94 = 1; // 289
__log__ ("TLE94", $TLE94, 239);
$TLE95 = 0; // 290
__log__ ("TLE95", $TLE95, 240);
$TLE96 = new color ($TLE93, $TLE94, $TLE95);// /* , Call: 293, Return: 294, Exception Return: 295, After: 291, Exception After: 292 */ constructor call
__log__ ("TLE96", $TLE96, 241);
$TSNNt531 = $TLE96; // 296
__log__ ("TSNNt531", $TSNNt531, 246);
color::$green = $TSNNt531; // 297
$TLE97 = 0; // 298
__log__ ("TLE97", $TLE97, 248);
$TLE98 = 0; // 299
__log__ ("TLE98", $TLE98, 249);
$TLE99 = 1; // 300
__log__ ("TLE99", $TLE99, 250);
$TLE100 = new color ($TLE97, $TLE98, $TLE99);// /* , Call: 303, Return: 304, Exception Return: 305, After: 301, Exception After: 302 */ constructor call
__log__ ("TLE100", $TLE100, 251);
$TSNNt532 = $TLE100; // 306
__log__ ("TSNNt532", $TSNNt532, 256);
color::$blue = $TSNNt532; // 307
class bmpencoder extends encoder { // "308"
    protected $width;
    protected $height;
    protected $pixels = array();
    public function __construct ($width, $height)/* Entry: 310, Exit: 311, Exception Exit: 312 */ 
                                                                                                 {
                                                                                                     $TSNNt533 = $width; // 313
                                                                                                     __log__ ("TSNNt533", $TSNNt533, 263);
                                                                                                     $this->width = $TSNNt533; // 314
                                                                                                     $TSNNt534 = $height; // 315
                                                                                                     __log__ ("TSNNt534", $TSNNt534, 265);
                                                                                                     $this->height = $TSNNt534; // 316
                                                                                                     $j = 0; // 317
                                                                                                     __log__ ("j", $j, 267);
                                                                                                     $ElcfPF1 = true; // 318
                                                                                                     __log__ ("ElcfPF1", $ElcfPF1, 268);
                                                                                                     while (True){
                                                                                                         if ($ElcfPF1){
                                                                                                             $ElcfPF1 = false; // 321
                                                                                                             __log__ ("ElcfPF1", $ElcfPF1, 271);
                                                                                                         }
                                                                                                         else {
                                                                                                             ++$j; // 322
                                                                                                             __log__ ("j", $j, 272);
                                                                                                         }
                                                                                                         $TLE101 = $j < $height; // 323
                                                                                                         __log__ ("TLE101", $TLE101, 273);
                                                                                                         if ($TLE101){
                                                                                                              // "325 skip"
                                                                                                         }
                                                                                                         else {
                                                                                                             break; // 326
                                                                                                         }
                                                                                                         $i = 0; // 327
                                                                                                         __log__ ("i", $i, 277);
                                                                                                         $ElcfPF0 = true; // 328
                                                                                                         __log__ ("ElcfPF0", $ElcfPF0, 278);
                                                                                                         while (True){
                                                                                                             if ($ElcfPF0){
                                                                                                                 $ElcfPF0 = false; // 331
                                                                                                                 __log__ ("ElcfPF0", $ElcfPF0, 281);
                                                                                                             }
                                                                                                             else {
                                                                                                                 ++$i; // 332
                                                                                                                 __log__ ("i", $i, 282);
                                                                                                             }
                                                                                                             $TLE102 = $i < $width; // 333
                                                                                                             __log__ ("TLE102", $TLE102, 283);
                                                                                                             if ($TLE102){
                                                                                                                  // "335 skip"
                                                                                                             }
                                                                                                             else {
                                                                                                                 break; // 336
                                                                                                             }
                                                                                                             $TSNNt535 = color::$black; // 337
                                                                                                             __log__ ("TSNNt535", $TSNNt535, 287);
                                                                                                             $this->setpixel ($i, $j, $TSNNt535);// /* , Call: 340, Return: 341, Exception Return: 342, After: 338, Exception After: 339 */ method call
                                                                                                         }
                                                                                                     }
                                                                                                 }
    public function setpixel ($x, $y, color $color)/* Entry: 343, Exit: 344, Exception Exit: 345 */ 
                                                                                                   {
                                                                                                       $TSNNt536 = $this->width; // 346
                                                                                                       __log__ ("TSNNt536", $TSNNt536, 296);
                                                                                                       $TLE103 = $y * $TSNNt536; // 347
                                                                                                       __log__ ("TLE103", $TLE103, 297);
                                                                                                       $TLE104 = $x + $TLE103; // 348
                                                                                                       __log__ ("TLE104", $TLE104, 298);
                                                                                                       $TSNNt537 = $this->pixels; // 349
                                                                                                       __log__ ("TSNNt537", $TSNNt537, 299);
                                                                                                       $TSNNt537[$TLE104] = $color; // 350
                                                                                                       $this->pixels = $TSNNt537; // 351
                                                                                                   }
    public function writefile ($file)/* Entry: 352, Exit: 353, Exception Exit: 354 */ 
                                                                                     {
                                                                                         $TLE105 = '.bmp'; // 355
                                                                                         __log__ ("TLE105", $TLE105, 305);
                                                                                         $file = $file . $TLE105; // 356
                                                                                         __log__ ("file", $file, 306);
                                                                                         $TLE106 = 'w'; // 357
                                                                                         __log__ ("TLE106", $TLE106, 307);
                                                                                         $fh = fopen ($file, $TLE106); // "358native call"
                                                                                         __log__ ("fh", $fh, 308);
                                                                                         $TLE107 = !$fh; // 359
                                                                                         __log__ ("TLE107", $TLE107, 309);
                                                                                         if ($TLE107){
                                                                                             $TLE108 = 'Failed to write to '; // 361
                                                                                             __log__ ("TLE108", $TLE108, 311);
                                                                                             print ($TLE108); // "362native call"
                                                                                             $TSNNt538 = $this->file; // 363
                                                                                             __log__ ("TSNNt538", $TSNNt538, 313);
                                                                                             print ($TSNNt538); // "364native call"
                                                                                             $TLE109 = "\n"; // 365
                                                                                             __log__ ("TLE109", $TLE109, 315);
                                                                                             print ($TLE109); // "366native call"
                                                                                             $TLE110 = null; // 367
                                                                                             __log__ ("TLE110", $TLE110, 317);
                                                                                             return $TLE110; // 368
                                                                                         }
                                                                                         else {
                                                                                              // "369 skip"
                                                                                         }
                                                                                         $TLE111 = 'c*'; // 370
                                                                                         __log__ ("TLE111", $TLE111, 320);
                                                                                         $TLE112 = 66; // 371
                                                                                         __log__ ("TLE112", $TLE112, 321);
                                                                                         $TLE113 = 77; // 372
                                                                                         __log__ ("TLE113", $TLE113, 322);
                                                                                         $TLE114 = pack ($TLE111, $TLE112, $TLE113); // "373native call"
                                                                                         __log__ ("TLE114", $TLE114, 323);
                                                                                         fwrite ($fh, $TLE114); // "374native call"
                                                                                         $TLE115 = 'V*'; // 375
                                                                                         __log__ ("TLE115", $TLE115, 325);
                                                                                         $TSNNt539 = $this->width; // 376
                                                                                         __log__ ("TSNNt539", $TSNNt539, 326);
                                                                                         $TSNNt540 = $this->height; // 377
                                                                                         __log__ ("TSNNt540", $TSNNt540, 327);
                                                                                         $TLE116 = $TSNNt539 * $TSNNt540; // 378
                                                                                         __log__ ("TLE116", $TLE116, 328);
                                                                                         $TLE117 = 3; // 379
                                                                                         __log__ ("TLE117", $TLE117, 329);
                                                                                         $TLE118 = $TLE116 * $TLE117; // 380
                                                                                         __log__ ("TLE118", $TLE118, 330);
                                                                                         $TLE119 = 54; // 381
                                                                                         __log__ ("TLE119", $TLE119, 331);
                                                                                         $TLE120 = $TLE118 + $TLE119; // 382
                                                                                         __log__ ("TLE120", $TLE120, 332);
                                                                                         $TLE121 = pack ($TLE115, $TLE120); // "383native call"
                                                                                         __log__ ("TLE121", $TLE121, 333);
                                                                                         fwrite ($fh, $TLE121); // "384native call"
                                                                                         $TLE122 = 'c*'; // 385
                                                                                         __log__ ("TLE122", $TLE122, 335);
                                                                                         $TLE123 = 0; // 386
                                                                                         __log__ ("TLE123", $TLE123, 336);
                                                                                         $TLE124 = 0; // 387
                                                                                         __log__ ("TLE124", $TLE124, 337);
                                                                                         $TLE125 = 0; // 388
                                                                                         __log__ ("TLE125", $TLE125, 338);
                                                                                         $TLE126 = 0; // 389
                                                                                         __log__ ("TLE126", $TLE126, 339);
                                                                                         $TLE127 = 54; // 390
                                                                                         __log__ ("TLE127", $TLE127, 340);
                                                                                         $TLE128 = 0; // 391
                                                                                         __log__ ("TLE128", $TLE128, 341);
                                                                                         $TLE129 = 0; // 392
                                                                                         __log__ ("TLE129", $TLE129, 342);
                                                                                         $TLE130 = 0; // 393
                                                                                         __log__ ("TLE130", $TLE130, 343);
                                                                                         $TLE131 = 40; // 394
                                                                                         __log__ ("TLE131", $TLE131, 344);
                                                                                         $TLE132 = 0; // 395
                                                                                         __log__ ("TLE132", $TLE132, 345);
                                                                                         $TLE133 = 0; // 396
                                                                                         __log__ ("TLE133", $TLE133, 346);
                                                                                         $TLE134 = 0; // 397
                                                                                         __log__ ("TLE134", $TLE134, 347);
                                                                                         $TLE135 = pack ($TLE122, $TLE123, $TLE124, $TLE125, $TLE126, $TLE127, $TLE128, $TLE129, $TLE130, $TLE131, $TLE132, $TLE133, $TLE134); // "398native call"
                                                                                         __log__ ("TLE135", $TLE135, 348);
                                                                                         fwrite ($fh, $TLE135); // "399native call"
                                                                                         $TLE136 = 'V*'; // 400
                                                                                         __log__ ("TLE136", $TLE136, 350);
                                                                                         $TSNNt541 = $this->width; // 401
                                                                                         __log__ ("TSNNt541", $TSNNt541, 351);
                                                                                         $TSNNt542 = $this->height; // 402
                                                                                         __log__ ("TSNNt542", $TSNNt542, 352);
                                                                                         $TLE137 = pack ($TLE136, $TSNNt541, $TSNNt542); // "403native call"
                                                                                         __log__ ("TLE137", $TLE137, 353);
                                                                                         fwrite ($fh, $TLE137); // "404native call"
                                                                                         $TLE138 = 'c*'; // 405
                                                                                         __log__ ("TLE138", $TLE138, 355);
                                                                                         $TLE139 = 1; // 406
                                                                                         __log__ ("TLE139", $TLE139, 356);
                                                                                         $TLE140 = 0; // 407
                                                                                         __log__ ("TLE140", $TLE140, 357);
                                                                                         $TLE141 = 24; // 408
                                                                                         __log__ ("TLE141", $TLE141, 358);
                                                                                         $TLE142 = 0; // 409
                                                                                         __log__ ("TLE142", $TLE142, 359);
                                                                                         $TLE143 = 0; // 410
                                                                                         __log__ ("TLE143", $TLE143, 360);
                                                                                         $TLE144 = 0; // 411
                                                                                         __log__ ("TLE144", $TLE144, 361);
                                                                                         $TLE145 = 0; // 412
                                                                                         __log__ ("TLE145", $TLE145, 362);
                                                                                         $TLE146 = 0; // 413
                                                                                         __log__ ("TLE146", $TLE146, 363);
                                                                                         $TLE147 = pack ($TLE138, $TLE139, $TLE140, $TLE141, $TLE142, $TLE143, $TLE144, $TLE145, $TLE146); // "414native call"
                                                                                         __log__ ("TLE147", $TLE147, 364);
                                                                                         fwrite ($fh, $TLE147); // "415native call"
                                                                                         $TLE148 = 'V*'; // 416
                                                                                         __log__ ("TLE148", $TLE148, 366);
                                                                                         $TSNNt543 = $this->width; // 417
                                                                                         __log__ ("TSNNt543", $TSNNt543, 367);
                                                                                         $TSNNt544 = $this->height; // 418
                                                                                         __log__ ("TSNNt544", $TSNNt544, 368);
                                                                                         $TLE149 = $TSNNt543 * $TSNNt544; // 419
                                                                                         __log__ ("TLE149", $TLE149, 369);
                                                                                         $TLE150 = 3; // 420
                                                                                         __log__ ("TLE150", $TLE150, 370);
                                                                                         $TLE151 = $TLE149 * $TLE150; // 421
                                                                                         __log__ ("TLE151", $TLE151, 371);
                                                                                         $TLE152 = pack ($TLE148, $TLE151); // "422native call"
                                                                                         __log__ ("TLE152", $TLE152, 372);
                                                                                         fwrite ($fh, $TLE152); // "423native call"
                                                                                         $TLE153 = 'c*'; // 424
                                                                                         __log__ ("TLE153", $TLE153, 374);
                                                                                         $TLE154 = 0; // 425
                                                                                         __log__ ("TLE154", $TLE154, 375);
                                                                                         $TLE155 = 0; // 426
                                                                                         __log__ ("TLE155", $TLE155, 376);
                                                                                         $TLE156 = 0; // 427
                                                                                         __log__ ("TLE156", $TLE156, 377);
                                                                                         $TLE157 = 0; // 428
                                                                                         __log__ ("TLE157", $TLE157, 378);
                                                                                         $TLE158 = 0; // 429
                                                                                         __log__ ("TLE158", $TLE158, 379);
                                                                                         $TLE159 = 0; // 430
                                                                                         __log__ ("TLE159", $TLE159, 380);
                                                                                         $TLE160 = 0; // 431
                                                                                         __log__ ("TLE160", $TLE160, 381);
                                                                                         $TLE161 = 0; // 432
                                                                                         __log__ ("TLE161", $TLE161, 382);
                                                                                         $TLE162 = 0; // 433
                                                                                         __log__ ("TLE162", $TLE162, 383);
                                                                                         $TLE163 = 0; // 434
                                                                                         __log__ ("TLE163", $TLE163, 384);
                                                                                         $TLE164 = 0; // 435
                                                                                         __log__ ("TLE164", $TLE164, 385);
                                                                                         $TLE165 = 0; // 436
                                                                                         __log__ ("TLE165", $TLE165, 386);
                                                                                         $TLE166 = 0; // 437
                                                                                         __log__ ("TLE166", $TLE166, 387);
                                                                                         $TLE167 = 0; // 438
                                                                                         __log__ ("TLE167", $TLE167, 388);
                                                                                         $TLE168 = 0; // 439
                                                                                         __log__ ("TLE168", $TLE168, 389);
                                                                                         $TLE169 = 0; // 440
                                                                                         __log__ ("TLE169", $TLE169, 390);
                                                                                         $TLE170 = pack ($TLE153, $TLE154, $TLE155, $TLE156, $TLE157, $TLE158, $TLE159, $TLE160, $TLE161, $TLE162, $TLE163, $TLE164, $TLE165, $TLE166, $TLE167, $TLE168, $TLE169); // "441native call"
                                                                                         __log__ ("TLE170", $TLE170, 391);
                                                                                         fwrite ($fh, $TLE170); // "442native call"
                                                                                         $TLE171 = 1; // 443
                                                                                         __log__ ("TLE171", $TLE171, 393);
                                                                                         $TSNNt545 = $this->height; // 444
                                                                                         __log__ ("TSNNt545", $TSNNt545, 394);
                                                                                         $j = $TSNNt545 - $TLE171; // 445
                                                                                         __log__ ("j", $j, 395);
                                                                                         $ElcfPF3 = true; // 446
                                                                                         __log__ ("ElcfPF3", $ElcfPF3, 396);
                                                                                         while (True){
                                                                                             if ($ElcfPF3){
                                                                                                 $ElcfPF3 = false; // 449
                                                                                                 __log__ ("ElcfPF3", $ElcfPF3, 399);
                                                                                             }
                                                                                             else {
                                                                                                 --$j; // 450
                                                                                                 __log__ ("j", $j, 400);
                                                                                             }
                                                                                             $TLE172 = 0; // 451
                                                                                             __log__ ("TLE172", $TLE172, 401);
                                                                                             $TLE173 = $TLE172 <= $j; // 452
                                                                                             __log__ ("TLE173", $TLE173, 402);
                                                                                             if ($TLE173){
                                                                                                  // "454 skip"
                                                                                             }
                                                                                             else {
                                                                                                 break; // 455
                                                                                             }
                                                                                             $i = 0; // 456
                                                                                             __log__ ("i", $i, 406);
                                                                                             $ElcfPF2 = true; // 457
                                                                                             __log__ ("ElcfPF2", $ElcfPF2, 407);
                                                                                             while (True){
                                                                                                 if ($ElcfPF2){
                                                                                                     $ElcfPF2 = false; // 460
                                                                                                     __log__ ("ElcfPF2", $ElcfPF2, 410);
                                                                                                 }
                                                                                                 else {
                                                                                                     ++$i; // 461
                                                                                                     __log__ ("i", $i, 411);
                                                                                                 }
                                                                                                 $TSNNt546 = $this->width; // 462
                                                                                                 __log__ ("TSNNt546", $TSNNt546, 412);
                                                                                                 $TLE174 = $i < $TSNNt546; // 463
                                                                                                 __log__ ("TLE174", $TLE174, 413);
                                                                                                 if ($TLE174){
                                                                                                      // "465 skip"
                                                                                                 }
                                                                                                 else {
                                                                                                     break; // 466
                                                                                                 }
                                                                                                 $TSNNt547 = $this->width; // 467
                                                                                                 __log__ ("TSNNt547", $TSNNt547, 417);
                                                                                                 $TLE175 = $j * $TSNNt547; // 468
                                                                                                 __log__ ("TLE175", $TLE175, 418);
                                                                                                 $TLE176 = $i + $TLE175; // 469
                                                                                                 __log__ ("TLE176", $TLE176, 419);
                                                                                                 $TSNNt548 = $this->pixels; // 470
                                                                                                 __log__ ("TSNNt548", $TSNNt548, 420);
                                                                                                 $TSNNi549 = $TSNNt548[$TLE176]; // 471
                                                                                                 __log__ ("TSNNi549", $TSNNi549, 421);
                                                                                                 $c = $TSNNi549; // 472
                                                                                                 __log__ ("c", $c, 422);
                                                                                                 $TSNNt548[$TLE176] = $TSNNi549; // 473
                                                                                                 $this->pixels = $TSNNt548; // 474
                                                                                                 $TLE177 = 'c*'; // 475
                                                                                                 __log__ ("TLE177", $TLE177, 425);
                                                                                                 $TLE178 = 255; // 476
                                                                                                 __log__ ("TLE178", $TLE178, 426);
                                                                                                 $TSNNt550 = $c->z; // 477
                                                                                                 __log__ ("TSNNt550", $TSNNt550, 427);
                                                                                                 $TLE179 = $TSNNt550 * $TLE178; // 478
                                                                                                 __log__ ("TLE179", $TLE179, 428);
                                                                                                 $TLE180 = 255; // 479
                                                                                                 __log__ ("TLE180", $TLE180, 429);
                                                                                                 $TSNNt551 = $c->y; // 480
                                                                                                 __log__ ("TSNNt551", $TSNNt551, 430);
                                                                                                 $TLE181 = $TSNNt551 * $TLE180; // 481
                                                                                                 __log__ ("TLE181", $TLE181, 431);
                                                                                                 $TLE182 = 255; // 482
                                                                                                 __log__ ("TLE182", $TLE182, 432);
                                                                                                 $TSNNt552 = $c->x; // 483
                                                                                                 __log__ ("TSNNt552", $TSNNt552, 433);
                                                                                                 $TLE183 = $TSNNt552 * $TLE182; // 484
                                                                                                 __log__ ("TLE183", $TLE183, 434);
                                                                                                 $TLE184 = pack ($TLE177, $TLE179, $TLE181, $TLE183); // "485native call"
                                                                                                 __log__ ("TLE184", $TLE184, 435);
                                                                                                 fwrite ($fh, $TLE184); // "486native call"
                                                                                             }
                                                                                         }
                                                                                         fclose ($fh); // "487native call"
                                                                                         $TLE185 = 'wrote '; // 488
                                                                                         __log__ ("TLE185", $TLE185, 438);
                                                                                         print ($TLE185); // "489native call"
                                                                                         print ($file); // "490native call"
                                                                                         $TLE186 = "\n"; // 491
                                                                                         __log__ ("TLE186", $TLE186, 441);
                                                                                         print ($TLE186); // "492native call"
                                                                                     }
}
abstract class encoder { // "493"
    public abstract function __construct ($width, $height)/* Entry: 494, Exit: 495, Exception Exit: 496 */;
    public abstract function setpixel ($x, $y, color $color)/* Entry: 497, Exit: 498, Exception Exit: 499 */;
    public abstract function writefile ($file)/* Entry: 500, Exit: 501, Exception Exit: 502 */;
}
class gdencoder extends encoder { // "503"
    protected $img = null;
    public function __construct ($width, $height)/* Entry: 504, Exit: 505, Exception Exit: 506 */ 
                                                                                                 {
                                                                                                     $TLE187 = imagecreatetruecolor ($width, $height); // "507native call"
                                                                                                     __log__ ("TLE187", $TLE187, 457);
                                                                                                     $TSNNt553 = $TLE187; // 508
                                                                                                     __log__ ("TSNNt553", $TSNNt553, 458);
                                                                                                     $this->img = $TSNNt553; // 509
                                                                                                 }
    public function setpixel ($x, $y, color $color)/* Entry: 510, Exit: 511, Exception Exit: 512 */ 
                                                                                                   {
                                                                                                       $TLE188 = $color->toint ();// /* , Call: 515, Return: 516, Exception Return: 517, After: 513, Exception After: 514 */ method call
                                                                                                       __log__ ("TLE188", $TLE188, 463);
                                                                                                       $TSNNt554 = $this->img; // 518
                                                                                                       __log__ ("TSNNt554", $TSNNt554, 468);
                                                                                                       imagesetpixel ($TSNNt554, $x, $y, $TLE188); // "519native call"
                                                                                                   }
    public function writefile ($file)/* Entry: 520, Exit: 521, Exception Exit: 522 */ 
                                                                                     {
                                                                                         $TLE189 = '.png'; // 523
                                                                                         __log__ ("TLE189", $TLE189, 473);
                                                                                         $file = $file . $TLE189; // 524
                                                                                         __log__ ("file", $file, 474);
                                                                                         $TSNNt555 = $this->img; // 525
                                                                                         __log__ ("TSNNt555", $TSNNt555, 475);
                                                                                         imagepng ($TSNNt555, $file); // "526native call"
                                                                                         $TLE190 = 'wrote '; // 527
                                                                                         __log__ ("TLE190", $TLE190, 477);
                                                                                         print ($TLE190); // "528native call"
                                                                                         print ($file); // "529native call"
                                                                                         $TLE191 = "\n"; // 530
                                                                                         __log__ ("TLE191", $TLE191, 480);
                                                                                         print ($TLE191); // "531native call"
                                                                                     }
}
abstract class light { // "532"
}
class pointlight extends light { // "533"
    protected $position;
    public function __construct ()/* Entry: 534, Exit: 535, Exception Exit: 536 */ 
                                                                                  {
                                                                                      $TLE192 = 0; // 537
                                                                                      __log__ ("TLE192", $TLE192, 487);
                                                                                      $TLE193 = 0; // 538
                                                                                      __log__ ("TLE193", $TLE193, 488);
                                                                                      $TLE194 = 0; // 539
                                                                                      __log__ ("TLE194", $TLE194, 489);
                                                                                      $TLE195 = new vector ($TLE192, $TLE193, $TLE194);// /* , Call: 542, Return: 543, Exception Return: 544, After: 540, Exception After: 541 */ constructor call
                                                                                      __log__ ("TLE195", $TLE195, 490);
                                                                                      $TSNNt556 = $TLE195; // 545
                                                                                      __log__ ("TSNNt556", $TSNNt556, 495);
                                                                                      $this->position = $TSNNt556; // 546
                                                                                  }
    public function setposition (vector $v)/* Entry: 547, Exit: 548, Exception Exit: 549 */ 
                                                                                           {
                                                                                               $TSNNt557 = $v; // 550
                                                                                               __log__ ("TSNNt557", $TSNNt557, 500);
                                                                                               $this->position = $TSNNt557; // 551
                                                                                               return $this; // 552
                                                                                           }
    public function getposition ()/* Entry: 553, Exit: 554, Exception Exit: 555 */ 
                                                                                  {
                                                                                      $TSNNt558 = $this->position; // 556
                                                                                      __log__ ("TSNNt558", $TSNNt558, 506);
                                                                                      return $TSNNt558; // 557
                                                                                  }
}
abstract class object { // "558"
    protected $name;
    protected $position;
    protected $color;
    public function __construct ($name)/* Entry: 559, Exit: 560, Exception Exit: 561 */ 
                                                                                       {
                                                                                           $TSNNt559 = $name; // 562
                                                                                           __log__ ("TSNNt559", $TSNNt559, 512);
                                                                                           $this->name = $TSNNt559; // 563
                                                                                           $TLE196 = 0; // 564
                                                                                           __log__ ("TLE196", $TLE196, 514);
                                                                                           $TLE197 = 0; // 565
                                                                                           __log__ ("TLE197", $TLE197, 515);
                                                                                           $TLE198 = 0; // 566
                                                                                           __log__ ("TLE198", $TLE198, 516);
                                                                                           $TLE199 = new vector ($TLE196, $TLE197, $TLE198);// /* , Call: 569, Return: 570, Exception Return: 571, After: 567, Exception After: 568 */ constructor call
                                                                                           __log__ ("TLE199", $TLE199, 517);
                                                                                           $TSNNt560 = $TLE199; // 572
                                                                                           __log__ ("TSNNt560", $TSNNt560, 522);
                                                                                           $this->position = $TSNNt560; // 573
                                                                                           $TSNNt562 = color::$white; // 574
                                                                                           __log__ ("TSNNt562", $TSNNt562, 524);
                                                                                           $TSNNt561 = $TSNNt562; // 575
                                                                                           __log__ ("TSNNt561", $TSNNt561, 525);
                                                                                           $this->color = $TSNNt561; // 576
                                                                                       }
    public function getname ()/* Entry: 577, Exit: 578, Exception Exit: 579 */ 
                                                                              {
                                                                                  $TSNNt563 = $this->name; // 580
                                                                                  __log__ ("TSNNt563", $TSNNt563, 530);
                                                                                  return $TSNNt563; // 581
                                                                              }
    public function setposition (vector $v)/* Entry: 582, Exit: 583, Exception Exit: 584 */ 
                                                                                           {
                                                                                               $TSNNt564 = $v; // 585
                                                                                               __log__ ("TSNNt564", $TSNNt564, 535);
                                                                                               $this->position = $TSNNt564; // 586
                                                                                               return $this; // 587
                                                                                           }
    public function getposition ()/* Entry: 588, Exit: 589, Exception Exit: 590 */ 
                                                                                  {
                                                                                      $TSNNt565 = $this->position; // 591
                                                                                      __log__ ("TSNNt565", $TSNNt565, 541);
                                                                                      return $TSNNt565; // 592
                                                                                  }
    public function setcolor (color $c)/* Entry: 593, Exit: 594, Exception Exit: 595 */ 
                                                                                       {
                                                                                           $TSNNt566 = $c; // 596
                                                                                           __log__ ("TSNNt566", $TSNNt566, 546);
                                                                                           $this->color = $TSNNt566; // 597
                                                                                           return $this; // 598
                                                                                       }
    public function getcolor ()/* Entry: 599, Exit: 600, Exception Exit: 601 */ 
                                                                               {
                                                                                   $TSNNt567 = $this->color; // 602
                                                                                   __log__ ("TSNNt567", $TSNNt567, 552);
                                                                                   return $TSNNt567; // 603
                                                                               }
    public abstract function intersect (ray $r, $compute_point, $compute_normal)/* Entry: 604, Exit: 605, Exception Exit: 606 */;
}
class plane extends object { // "607"
    protected $normal;
    public function setnormal (vector $n)/* Entry: 608, Exit: 609, Exception Exit: 610 */ 
                                                                                         {
                                                                                             $TLE200 = $n->klone ();// /* , Call: 613, Return: 614, Exception Return: 615, After: 611, Exception After: 612 */ method call
                                                                                             __log__ ("TLE200", $TLE200, 561);
                                                                                             $TSNNt568 = $TLE200; // 616
                                                                                             __log__ ("TSNNt568", $TSNNt568, 566);
                                                                                             $this->normal = $TSNNt568; // 617
                                                                                             $TSNNt569 = $this->normal; // 618
                                                                                             __log__ ("TSNNt569", $TSNNt569, 568);
                                                                                             $TSNNt569->normalize ();// /* , Call: 621, Return: 622, Exception Return: 623, After: 619, Exception After: 620 */ method call
                                                                                             return $this; // 624
                                                                                         }
    public function intersect (ray $ray, $compute_point, $compute_normal)/* Entry: 625, Exit: 626, Exception Exit: 627 */ 
                                                                                                                         {
                                                                                                                             $TLE201 = 0; // 628
                                                                                                                             __log__ ("TLE201", $TLE201, 578);
                                                                                                                             $TSNNt570 = $this->position; // 629
                                                                                                                             __log__ ("TSNNt570", $TSNNt570, 579);
                                                                                                                             $TSNNt571 = $this->normal; // 630
                                                                                                                             __log__ ("TSNNt571", $TSNNt571, 580);
                                                                                                                             $TLE202 = vector::dot ($TSNNt570, $TSNNt571);// /* , Call: 633, Return: 634, Exception Return: 635, After: 631, Exception After: 632 */ static method call
                                                                                                                             __log__ ("TLE202", $TLE202, 581);
                                                                                                                             $d = $TLE201 - $TLE202; // 636
                                                                                                                             __log__ ("d", $d, 586);
                                                                                                                             $TLE203 = $ray->getdirection ();// /* , Call: 639, Return: 640, Exception Return: 641, After: 637, Exception After: 638 */ method call
                                                                                                                             __log__ ("TLE203", $TLE203, 587);
                                                                                                                             $TSNNt572 = $this->normal; // 642
                                                                                                                             __log__ ("TSNNt572", $TSNNt572, 592);
                                                                                                                             $denom = vector::dot ($TSNNt572, $TLE203);// /* , Call: 645, Return: 646, Exception Return: 647, After: 643, Exception After: 644 */ static method call
                                                                                                                             __log__ ("denom", $denom, 593);
                                                                                                                             $TLE204 = 0; // 648
                                                                                                                             __log__ ("TLE204", $TLE204, 598);
                                                                                                                             $TLE205 = $denom == $TLE204; // 649
                                                                                                                             __log__ ("TLE205", $TLE205, 599);
                                                                                                                             if ($TLE205){
                                                                                                                                 $TLE206 = null; // 651
                                                                                                                                 __log__ ("TLE206", $TLE206, 601);
                                                                                                                                 return $TLE206; // 652
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                  // "653 skip"
                                                                                                                             }
                                                                                                                             $TLE207 = 0; // 654
                                                                                                                             __log__ ("TLE207", $TLE207, 604);
                                                                                                                             $TLE208 = $TLE207 - $d; // 655
                                                                                                                             __log__ ("TLE208", $TLE208, 605);
                                                                                                                             $TLE209 = $ray->getorigin ();// /* , Call: 658, Return: 659, Exception Return: 660, After: 656, Exception After: 657 */ method call
                                                                                                                             __log__ ("TLE209", $TLE209, 606);
                                                                                                                             $TSNNt573 = $this->normal; // 661
                                                                                                                             __log__ ("TSNNt573", $TSNNt573, 611);
                                                                                                                             $TLE210 = vector::dot ($TSNNt573, $TLE209);// /* , Call: 664, Return: 665, Exception Return: 666, After: 662, Exception After: 663 */ static method call
                                                                                                                             __log__ ("TLE210", $TLE210, 612);
                                                                                                                             $num = $TLE208 - $TLE210; // 667
                                                                                                                             __log__ ("num", $num, 617);
                                                                                                                             $t = $num / $denom; // 668
                                                                                                                             __log__ ("t", $t, 618);
                                                                                                                             $TLE211 = 0; // 669
                                                                                                                             __log__ ("TLE211", $TLE211, 619);
                                                                                                                             $TLE212 = $t < $TLE211; // 670
                                                                                                                             __log__ ("TLE212", $TLE212, 620);
                                                                                                                             if ($TLE212){
                                                                                                                                 $TLE213 = null; // 672
                                                                                                                                 __log__ ("TLE213", $TLE213, 622);
                                                                                                                                 return $TLE213; // 673
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                  // "674 skip"
                                                                                                                             }
                                                                                                                             $TLE214 = 'd'; // 675
                                                                                                                             __log__ ("TLE214", $TLE214, 625);
                                                                                                                             unset ($TSa215); // 676
                                                                                                                             $TSa215 = (array) $TSa215; // 677
                                                                                                                             __log__ ("TSa215", $TSa215, 627);
                                                                                                                             $TSNNi574 = $t; // 678
                                                                                                                             __log__ ("TSNNi574", $TSNNi574, 628);
                                                                                                                             $TSa215[$TLE214] = $TSNNi574; // 679
                                                                                                                             $r = $TSa215; // 680
                                                                                                                             __log__ ("r", $r, 630);
                                                                                                                             $TLE6 = $compute_point; // 681
                                                                                                                             __log__ ("TLE6", $TLE6, 631);
                                                                                                                             if ($TLE6){
                                                                                                                                 $TEF7 = $TLE6; // 683
                                                                                                                                 __log__ ("TEF7", $TEF7, 633);
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                 $TEF7 = $compute_normal; // 684
                                                                                                                                 __log__ ("TEF7", $TEF7, 634);
                                                                                                                             }
                                                                                                                             $TLE216 = (bool) $TEF7; // 685
                                                                                                                             __log__ ("TLE216", $TLE216, 635);
                                                                                                                             if ($TLE216){
                                                                                                                                 $TLE217 = $ray->getdirection ();// /* , Call: 689, Return: 690, Exception Return: 691, After: 687, Exception After: 688 */ method call
                                                                                                                                 __log__ ("TLE217", $TLE217, 637);
                                                                                                                                 $t2 = $TLE217->klone ();// /* , Call: 694, Return: 695, Exception Return: 696, After: 692, Exception After: 693 */ method call
                                                                                                                                 __log__ ("t2", $t2, 642);
                                                                                                                                 $t2->k_mul ($t);// /* , Call: 699, Return: 700, Exception Return: 701, After: 697, Exception After: 698 */ method call
                                                                                                                                 $TLE218 = $ray->getorigin ();// /* , Call: 704, Return: 705, Exception Return: 706, After: 702, Exception After: 703 */ method call
                                                                                                                                 __log__ ("TLE218", $TLE218, 652);
                                                                                                                                 $t2->v_add ($TLE218);// /* , Call: 709, Return: 710, Exception Return: 711, After: 707, Exception After: 708 */ method call
                                                                                                                                 $TLE219 = 'p'; // 712
                                                                                                                                 __log__ ("TLE219", $TLE219, 662);
                                                                                                                                 $r[$TLE219] = $t2; // 713
                                                                                                                                 $TLE220 = 'n'; // 714
                                                                                                                                 __log__ ("TLE220", $TLE220, 664);
                                                                                                                                 $TSNNt575 = $this->normal; // 715
                                                                                                                                 __log__ ("TSNNt575", $TSNNt575, 665);
                                                                                                                                 $r[$TLE220] = $TSNNt575; // 716
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                  // "717 skip"
                                                                                                                             }
                                                                                                                             return $r; // 718
                                                                                                                         }
}
class sphere extends object { // "719"
    protected $radius = 1;
    public function intersect (ray $ray, $compute_point, $compute_normal)/* Entry: 720, Exit: 721, Exception Exit: 722 */ 
                                                                                                                         {
                                                                                                                             $TLE221 = $ray->getorigin ();// /* , Call: 725, Return: 726, Exception Return: 727, After: 723, Exception After: 724 */ method call
                                                                                                                             __log__ ("TLE221", $TLE221, 673);
                                                                                                                             $dst = $TLE221->klone ();// /* , Call: 730, Return: 731, Exception Return: 732, After: 728, Exception After: 729 */ method call
                                                                                                                             __log__ ("dst", $dst, 678);
                                                                                                                             $TSNNt576 = $this->position; // 733
                                                                                                                             __log__ ("TSNNt576", $TSNNt576, 683);
                                                                                                                             $dst->v_sub ($TSNNt576);// /* , Call: 736, Return: 737, Exception Return: 738, After: 734, Exception After: 735 */ method call
                                                                                                                             $TLE222 = $ray->getdirection ();// /* , Call: 741, Return: 742, Exception Return: 743, After: 739, Exception After: 740 */ method call
                                                                                                                             __log__ ("TLE222", $TLE222, 689);
                                                                                                                             $b = vector::dot ($dst, $TLE222);// /* , Call: 746, Return: 747, Exception Return: 748, After: 744, Exception After: 745 */ static method call
                                                                                                                             __log__ ("b", $b, 694);
                                                                                                                             $TLE223 = vector::dot ($dst, $dst);// /* , Call: 751, Return: 752, Exception Return: 753, After: 749, Exception After: 750 */ static method call
                                                                                                                             __log__ ("TLE223", $TLE223, 699);
                                                                                                                             $TSNNt577 = $this->radius; // 754
                                                                                                                             __log__ ("TSNNt577", $TSNNt577, 704);
                                                                                                                             $TSNNt578 = $this->radius; // 755
                                                                                                                             __log__ ("TSNNt578", $TSNNt578, 705);
                                                                                                                             $TLE224 = $TSNNt577 * $TSNNt578; // 756
                                                                                                                             __log__ ("TLE224", $TLE224, 706);
                                                                                                                             $c = $TLE223 - $TLE224; // 757
                                                                                                                             __log__ ("c", $c, 707);
                                                                                                                             $TLE225 = $b * $b; // 758
                                                                                                                             __log__ ("TLE225", $TLE225, 708);
                                                                                                                             $d = $TLE225 - $c; // 759
                                                                                                                             __log__ ("d", $d, 709);
                                                                                                                             $TLE226 = 0; // 760
                                                                                                                             __log__ ("TLE226", $TLE226, 710);
                                                                                                                             $TLE227 = $d < $TLE226; // 761
                                                                                                                             __log__ ("TLE227", $TLE227, 711);
                                                                                                                             if ($TLE227){
                                                                                                                                 $TLE228 = null; // 763
                                                                                                                                 __log__ ("TLE228", $TLE228, 713);
                                                                                                                                 return $TLE228; // 764
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                  // "765 skip"
                                                                                                                             }
                                                                                                                             $TLE229 = 0; // 766
                                                                                                                             __log__ ("TLE229", $TLE229, 716);
                                                                                                                             $TLE230 = $TLE229 - $b; // 767
                                                                                                                             __log__ ("TLE230", $TLE230, 717);
                                                                                                                             $TLE231 = sqrt ($d); // "768native call"
                                                                                                                             __log__ ("TLE231", $TLE231, 718);
                                                                                                                             $t = $TLE230 - $TLE231; // 769
                                                                                                                             __log__ ("t", $t, 719);
                                                                                                                             $TLE232 = 0; // 770
                                                                                                                             __log__ ("TLE232", $TLE232, 720);
                                                                                                                             $TLE233 = $t < $TLE232; // 771
                                                                                                                             __log__ ("TLE233", $TLE233, 721);
                                                                                                                             if ($TLE233){
                                                                                                                                 $TLE234 = null; // 773
                                                                                                                                 __log__ ("TLE234", $TLE234, 723);
                                                                                                                                 return $TLE234; // 774
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                  // "775 skip"
                                                                                                                             }
                                                                                                                             $TLE235 = 'd'; // 776
                                                                                                                             __log__ ("TLE235", $TLE235, 726);
                                                                                                                             unset ($TSa236); // 777
                                                                                                                             $TSa236 = (array) $TSa236; // 778
                                                                                                                             __log__ ("TSa236", $TSa236, 728);
                                                                                                                             $TSNNi579 = $t; // 779
                                                                                                                             __log__ ("TSNNi579", $TSNNi579, 729);
                                                                                                                             $TSa236[$TLE235] = $TSNNi579; // 780
                                                                                                                             $r = $TSa236; // 781
                                                                                                                             __log__ ("r", $r, 731);
                                                                                                                             $TLE8 = $compute_point; // 782
                                                                                                                             __log__ ("TLE8", $TLE8, 732);
                                                                                                                             if ($TLE8){
                                                                                                                                 $TEF9 = $TLE8; // 784
                                                                                                                                 __log__ ("TEF9", $TEF9, 734);
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                 $TEF9 = $compute_normal; // 785
                                                                                                                                 __log__ ("TEF9", $TEF9, 735);
                                                                                                                             }
                                                                                                                             $TLE237 = (bool) $TEF9; // 786
                                                                                                                             __log__ ("TLE237", $TLE237, 736);
                                                                                                                             if ($TLE237){
                                                                                                                                 $TLE238 = $ray->getdirection ();// /* , Call: 790, Return: 791, Exception Return: 792, After: 788, Exception After: 789 */ method call
                                                                                                                                 __log__ ("TLE238", $TLE238, 738);
                                                                                                                                 $t2 = $TLE238->klone ();// /* , Call: 795, Return: 796, Exception Return: 797, After: 793, Exception After: 794 */ method call
                                                                                                                                 __log__ ("t2", $t2, 743);
                                                                                                                                 $t2->k_mul ($t);// /* , Call: 800, Return: 801, Exception Return: 802, After: 798, Exception After: 799 */ method call
                                                                                                                                 $TLE239 = $ray->getorigin ();// /* , Call: 805, Return: 806, Exception Return: 807, After: 803, Exception After: 804 */ method call
                                                                                                                                 __log__ ("TLE239", $TLE239, 753);
                                                                                                                                 $t2->v_add ($TLE239);// /* , Call: 810, Return: 811, Exception Return: 812, After: 808, Exception After: 809 */ method call
                                                                                                                                 $TLE240 = 'p'; // 813
                                                                                                                                 __log__ ("TLE240", $TLE240, 763);
                                                                                                                                 $r[$TLE240] = $t2; // 814
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                  // "815 skip"
                                                                                                                             }
                                                                                                                             if ($compute_normal){
                                                                                                                                 $TSNNt580 = $this->position; // 817
                                                                                                                                 __log__ ("TSNNt580", $TSNNt580, 767);
                                                                                                                                 $n = $TSNNt580->klone ();// /* , Call: 820, Return: 821, Exception Return: 822, After: 818, Exception After: 819 */ method call
                                                                                                                                 __log__ ("n", $n, 768);
                                                                                                                                 $n->neg ();// /* , Call: 825, Return: 826, Exception Return: 827, After: 823, Exception After: 824 */ method call
                                                                                                                                 $n->v_add ($t2);// /* , Call: 830, Return: 831, Exception Return: 832, After: 828, Exception After: 829 */ method call
                                                                                                                                 $n->normalize ();// /* , Call: 835, Return: 836, Exception Return: 837, After: 833, Exception After: 834 */ method call
                                                                                                                                 $TLE241 = 'n'; // 838
                                                                                                                                 __log__ ("TLE241", $TLE241, 788);
                                                                                                                                 $r[$TLE241] = $n; // 839
                                                                                                                             }
                                                                                                                             else {
                                                                                                                                  // "840 skip"
                                                                                                                             }
                                                                                                                             return $r; // 841
                                                                                                                         }
    public function setradius ($r)/* Entry: 842, Exit: 843, Exception Exit: 844 */ 
                                                                                  {
                                                                                      $TLE242 = (real) $r; // 845
                                                                                      __log__ ("TLE242", $TLE242, 795);
                                                                                      $TSNNt581 = $TLE242; // 846
                                                                                      __log__ ("TSNNt581", $TSNNt581, 796);
                                                                                      $this->radius = $TSNNt581; // 847
                                                                                      return $this; // 848
                                                                                  }
}
class ray { // "849"
    protected $origin;
    protected $direction;
    public function setorigin (vector $v)/* Entry: 850, Exit: 851, Exception Exit: 852 */ 
                                                                                         {
                                                                                             $TSNNt582 = $v; // 853
                                                                                             __log__ ("TSNNt582", $TSNNt582, 803);
                                                                                             $this->origin = $TSNNt582; // 854
                                                                                             return $this; // 855
                                                                                         }
    public function getorigin ()/* Entry: 856, Exit: 857, Exception Exit: 858 */ 
                                                                                {
                                                                                    $TSNNt583 = $this->origin; // 859
                                                                                    __log__ ("TSNNt583", $TSNNt583, 809);
                                                                                    return $TSNNt583; // 860
                                                                                }
    public function setdirection (vector $v)/* Entry: 861, Exit: 862, Exception Exit: 863 */ 
                                                                                            {
                                                                                                $TLE243 = $v->klone ();// /* , Call: 866, Return: 867, Exception Return: 868, After: 864, Exception After: 865 */ method call
                                                                                                __log__ ("TLE243", $TLE243, 814);
                                                                                                $TSNNt584 = $TLE243; // 869
                                                                                                __log__ ("TSNNt584", $TSNNt584, 819);
                                                                                                $this->direction = $TSNNt584; // 870
                                                                                                $TSNNt585 = $this->direction; // 871
                                                                                                __log__ ("TSNNt585", $TSNNt585, 821);
                                                                                                $TSNNt585->normalize ();// /* , Call: 874, Return: 875, Exception Return: 876, After: 872, Exception After: 873 */ method call
                                                                                                return $this; // 877
                                                                                            }
    public function getdirection ()/* Entry: 878, Exit: 879, Exception Exit: 880 */ 
                                                                                   {
                                                                                       $TSNNt586 = $this->direction; // 881
                                                                                       __log__ ("TSNNt586", $TSNNt586, 831);
                                                                                       return $TSNNt586; // 882
                                                                                   }
    public static function reflectedray (ray $i, vector $n, vector $p)/* Entry: 883, Exit: 884, Exception Exit: 885 */ 
                                                                                                                      {
                                                                                                                          $r = new ray ();// /* , Call: 888, Return: 889, Exception Return: 890, After: 886, Exception After: 887 */ constructor call
                                                                                                                          __log__ ("r", $r, 836);
                                                                                                                          $TSNNt587 = $p; // 891
                                                                                                                          __log__ ("TSNNt587", $TSNNt587, 841);
                                                                                                                          $r->origin = $TSNNt587; // 892
                                                                                                                          $TLE244 = $i->getdirection ();// /* , Call: 895, Return: 896, Exception Return: 897, After: 893, Exception After: 894 */ method call
                                                                                                                          __log__ ("TLE244", $TLE244, 843);
                                                                                                                          $TLE245 = vector::reflectedvector ($TLE244, $n);// /* , Call: 900, Return: 901, Exception Return: 902, After: 898, Exception After: 899 */ static method call
                                                                                                                          __log__ ("TLE245", $TLE245, 848);
                                                                                                                          $TSNNt588 = $TLE245; // 903
                                                                                                                          __log__ ("TSNNt588", $TSNNt588, 853);
                                                                                                                          $r->direction = $TSNNt588; // 904
                                                                                                                          return $r; // 905
                                                                                                                      }
    public static function dot (ray $r1, ray $r2)/* Entry: 906, Exit: 907, Exception Exit: 908 */ 
                                                                                                 {
                                                                                                     $TLE246 = $r1->getdirection ();// /* , Call: 911, Return: 912, Exception Return: 913, After: 909, Exception After: 910 */ method call
                                                                                                     __log__ ("TLE246", $TLE246, 859);
                                                                                                     $TLE247 = $r2->getdirection ();// /* , Call: 916, Return: 917, Exception Return: 918, After: 914, Exception After: 915 */ method call
                                                                                                     __log__ ("TLE247", $TLE247, 864);
                                                                                                     $TLE248 = vector::dot ($TLE246, $TLE247);// /* , Call: 921, Return: 922, Exception Return: 923, After: 919, Exception After: 920 */ static method call
                                                                                                     __log__ ("TLE248", $TLE248, 869);
                                                                                                     return $TLE248; // 924
                                                                                                 }
}
class diffuserenderer extends renderer { // "925"
    protected function render_ray (world $world, ray $ray, $ignore, $recursion)/* Entry: 926, Exit: 927, Exception Exit: 928 */ 
                                                                                                                               {
                                                                                                                                   $TLE249 = true; // 929
                                                                                                                                   __log__ ("TLE249", $TLE249, 879);
                                                                                                                                   $TLE250 = true; // 930
                                                                                                                                   __log__ ("TLE250", $TLE250, 880);
                                                                                                                                   $r = $this->rayintersection ($world, $ray, $ignore, $TLE249, $TLE250);// /* , Call: 933, Return: 934, Exception Return: 935, After: 931, Exception After: 932 */ method call
                                                                                                                                   __log__ ("r", $r, 881);
                                                                                                                                   $TLE251 = !$r; // 936
                                                                                                                                   __log__ ("TLE251", $TLE251, 886);
                                                                                                                                   if ($TLE251){
                                                                                                                                       $TLE252 = null; // 938
                                                                                                                                       __log__ ("TLE252", $TLE252, 888);
                                                                                                                                       return $TLE252; // 939
                                                                                                                                   }
                                                                                                                                   else {
                                                                                                                                        // "940 skip"
                                                                                                                                   }
                                                                                                                                   $TLE253 = 'p'; // 941
                                                                                                                                   __log__ ("TLE253", $TLE253, 891);
                                                                                                                                   $TLE254 = 'o'; // 942
                                                                                                                                   __log__ ("TLE254", $TLE254, 892);
                                                                                                                                   $TSNNi589 = $r[$TLE253]; // 943
                                                                                                                                   __log__ ("TSNNi589", $TSNNi589, 893);
                                                                                                                                   $TSNNi590 = $r[$TLE254]; // 944
                                                                                                                                   __log__ ("TSNNi590", $TSNNi590, 894);
                                                                                                                                   $light_ray = $this->pointlight ($world, $TSNNi589, $TSNNi590);// /* , Call: 947, Return: 948, Exception Return: 949, After: 945, Exception After: 946 */ method call
                                                                                                                                   __log__ ("light_ray", $light_ray, 895);
                                                                                                                                   $TLE255 = !$light_ray; // 950
                                                                                                                                   __log__ ("TLE255", $TLE255, 900);
                                                                                                                                   if ($TLE255){
                                                                                                                                       $TLE256 = null; // 952
                                                                                                                                       __log__ ("TLE256", $TLE256, 902);
                                                                                                                                       return $TLE256; // 953
                                                                                                                                   }
                                                                                                                                   else {
                                                                                                                                        // "954 skip"
                                                                                                                                   }
                                                                                                                                   $TLE257 = $light_ray->getdirection ();// /* , Call: 957, Return: 958, Exception Return: 959, After: 955, Exception After: 956 */ method call
                                                                                                                                   __log__ ("TLE257", $TLE257, 905);
                                                                                                                                   $TLE258 = 'n'; // 960
                                                                                                                                   __log__ ("TLE258", $TLE258, 910);
                                                                                                                                   $TSNNi591 = $r[$TLE258]; // 961
                                                                                                                                   __log__ ("TSNNi591", $TSNNi591, 911);
                                                                                                                                   $TLE259 = vector::dot ($TLE257, $TSNNi591);// /* , Call: 964, Return: 965, Exception Return: 966, After: 962, Exception After: 963 */ static method call
                                                                                                                                   __log__ ("TLE259", $TLE259, 912);
                                                                                                                                   $TLE260 = 0; // 967
                                                                                                                                   __log__ ("TLE260", $TLE260, 917);
                                                                                                                                   $shading = max ($TLE259, $TLE260); // "968native call"
                                                                                                                                   __log__ ("shading", $shading, 918);
                                                                                                                                   $TLE261 = 'o'; // 969
                                                                                                                                   __log__ ("TLE261", $TLE261, 919);
                                                                                                                                   $TSNNi592 = $r[$TLE261]; // 970
                                                                                                                                   __log__ ("TSNNi592", $TSNNi592, 920);
                                                                                                                                   $TLE262 = $TSNNi592->getcolor ();// /* , Call: 973, Return: 974, Exception Return: 975, After: 971, Exception After: 972 */ method call
                                                                                                                                   __log__ ("TLE262", $TLE262, 921);
                                                                                                                                   $c = $TLE262->klone ();// /* , Call: 978, Return: 979, Exception Return: 980, After: 976, Exception After: 977 */ method call
                                                                                                                                   __log__ ("c", $c, 926);
                                                                                                                                   $c->k_mul ($shading);// /* , Call: 983, Return: 984, Exception Return: 985, After: 981, Exception After: 982 */ method call
                                                                                                                                   return $c; // 986
                                                                                                                               }
}
class flatrenderer extends renderer { // "987"
    protected function render_ray (world $world, ray $ray, $ignore, $recursion)/* Entry: 988, Exit: 989, Exception Exit: 990 */ 
                                                                                                                               {
                                                                                                                                   $TLE263 = true; // 991
                                                                                                                                   __log__ ("TLE263", $TLE263, 941);
                                                                                                                                   $TLE264 = false; // 992
                                                                                                                                   __log__ ("TLE264", $TLE264, 942);
                                                                                                                                   $r = $this->rayintersection ($world, $ray, $ignore, $TLE263, $TLE264);// /* , Call: 995, Return: 996, Exception Return: 997, After: 993, Exception After: 994 */ method call
                                                                                                                                   __log__ ("r", $r, 943);
                                                                                                                                   $TLE265 = !$r; // 998
                                                                                                                                   __log__ ("TLE265", $TLE265, 948);
                                                                                                                                   if ($TLE265){
                                                                                                                                       $TLE266 = null; // 1000
                                                                                                                                       __log__ ("TLE266", $TLE266, 950);
                                                                                                                                       return $TLE266; // 1001
                                                                                                                                   }
                                                                                                                                   else {
                                                                                                                                        // "1002 skip"
                                                                                                                                   }
                                                                                                                                   $TLE267 = 'p'; // 1003
                                                                                                                                   __log__ ("TLE267", $TLE267, 953);
                                                                                                                                   $TLE268 = 'o'; // 1004
                                                                                                                                   __log__ ("TLE268", $TLE268, 954);
                                                                                                                                   $TSNNi593 = $r[$TLE267]; // 1005
                                                                                                                                   __log__ ("TSNNi593", $TSNNi593, 955);
                                                                                                                                   $TSNNi594 = $r[$TLE268]; // 1006
                                                                                                                                   __log__ ("TSNNi594", $TSNNi594, 956);
                                                                                                                                   $light_ray = $this->pointlight ($world, $TSNNi593, $TSNNi594);// /* , Call: 1009, Return: 1010, Exception Return: 1011, After: 1007, Exception After: 1008 */ method call
                                                                                                                                   __log__ ("light_ray", $light_ray, 957);
                                                                                                                                   $TLE269 = !$light_ray; // 1012
                                                                                                                                   __log__ ("TLE269", $TLE269, 962);
                                                                                                                                   if ($TLE269){
                                                                                                                                       $TLE270 = null; // 1014
                                                                                                                                       __log__ ("TLE270", $TLE270, 964);
                                                                                                                                       return $TLE270; // 1015
                                                                                                                                   }
                                                                                                                                   else {
                                                                                                                                        // "1016 skip"
                                                                                                                                   }
                                                                                                                                   $TLE271 = 'o'; // 1017
                                                                                                                                   __log__ ("TLE271", $TLE271, 967);
                                                                                                                                   $TSNNi595 = $r[$TLE271]; // 1018
                                                                                                                                   __log__ ("TSNNi595", $TSNNi595, 968);
                                                                                                                                   $TLE272 = $TSNNi595->getcolor ();// /* , Call: 1021, Return: 1022, Exception Return: 1023, After: 1019, Exception After: 1020 */ method call
                                                                                                                                   __log__ ("TLE272", $TLE272, 969);
                                                                                                                                   return $TLE272; // 1024
                                                                                                                               }
}
class phongrenderer extends renderer { // "1025"
    protected function render_ray (world $world, ray $ray, $ignore, $recursion)/* Entry: 1026, Exit: 1027, Exception Exit: 1028 */ 
                                                                                                                                  {
                                                                                                                                      $TLE273 = true; // 1029
                                                                                                                                      __log__ ("TLE273", $TLE273, 979);
                                                                                                                                      $TLE274 = true; // 1030
                                                                                                                                      __log__ ("TLE274", $TLE274, 980);
                                                                                                                                      $r = $this->rayintersection ($world, $ray, $ignore, $TLE273, $TLE274);// /* , Call: 1033, Return: 1034, Exception Return: 1035, After: 1031, Exception After: 1032 */ method call
                                                                                                                                      __log__ ("r", $r, 981);
                                                                                                                                      $TLE275 = !$r; // 1036
                                                                                                                                      __log__ ("TLE275", $TLE275, 986);
                                                                                                                                      if ($TLE275){
                                                                                                                                          $TLE276 = null; // 1038
                                                                                                                                          __log__ ("TLE276", $TLE276, 988);
                                                                                                                                          return $TLE276; // 1039
                                                                                                                                      }
                                                                                                                                      else {
                                                                                                                                           // "1040 skip"
                                                                                                                                      }
                                                                                                                                      $TLE277 = 'p'; // 1041
                                                                                                                                      __log__ ("TLE277", $TLE277, 991);
                                                                                                                                      $TLE278 = 'o'; // 1042
                                                                                                                                      __log__ ("TLE278", $TLE278, 992);
                                                                                                                                      $TSNNi596 = $r[$TLE277]; // 1043
                                                                                                                                      __log__ ("TSNNi596", $TSNNi596, 993);
                                                                                                                                      $TSNNi597 = $r[$TLE278]; // 1044
                                                                                                                                      __log__ ("TSNNi597", $TSNNi597, 994);
                                                                                                                                      $light_ray = $this->pointlight ($world, $TSNNi596, $TSNNi597);// /* , Call: 1047, Return: 1048, Exception Return: 1049, After: 1045, Exception After: 1046 */ method call
                                                                                                                                      __log__ ("light_ray", $light_ray, 995);
                                                                                                                                      $TLE279 = !$light_ray; // 1050
                                                                                                                                      __log__ ("TLE279", $TLE279, 1000);
                                                                                                                                      if ($TLE279){
                                                                                                                                          $TLE280 = null; // 1052
                                                                                                                                          __log__ ("TLE280", $TLE280, 1002);
                                                                                                                                          return $TLE280; // 1053
                                                                                                                                      }
                                                                                                                                      else {
                                                                                                                                           // "1054 skip"
                                                                                                                                      }
                                                                                                                                      $TLE281 = $light_ray->getdirection ();// /* , Call: 1057, Return: 1058, Exception Return: 1059, After: 1055, Exception After: 1056 */ method call
                                                                                                                                      __log__ ("TLE281", $TLE281, 1005);
                                                                                                                                      $TLE282 = 'n'; // 1060
                                                                                                                                      __log__ ("TLE282", $TLE282, 1010);
                                                                                                                                      $TSNNi598 = $r[$TLE282]; // 1061
                                                                                                                                      __log__ ("TSNNi598", $TSNNi598, 1011);
                                                                                                                                      $TLE283 = vector::dot ($TLE281, $TSNNi598);// /* , Call: 1064, Return: 1065, Exception Return: 1066, After: 1062, Exception After: 1063 */ static method call
                                                                                                                                      __log__ ("TLE283", $TLE283, 1012);
                                                                                                                                      $TLE284 = 0; // 1067
                                                                                                                                      __log__ ("TLE284", $TLE284, 1017);
                                                                                                                                      $diffuse_shading = max ($TLE283, $TLE284); // "1068native call"
                                                                                                                                      __log__ ("diffuse_shading", $diffuse_shading, 1018);
                                                                                                                                      $TLE285 = 'n'; // 1069
                                                                                                                                      __log__ ("TLE285", $TLE285, 1019);
                                                                                                                                      $TLE286 = 'p'; // 1070
                                                                                                                                      __log__ ("TLE286", $TLE286, 1020);
                                                                                                                                      $TSNNi599 = $r[$TLE285]; // 1071
                                                                                                                                      __log__ ("TSNNi599", $TSNNi599, 1021);
                                                                                                                                      $TSNNi600 = $r[$TLE286]; // 1072
                                                                                                                                      __log__ ("TSNNi600", $TSNNi600, 1022);
                                                                                                                                      $reflected_ray = ray::reflectedray ($ray, $TSNNi599, $TSNNi600);// /* , Call: 1075, Return: 1076, Exception Return: 1077, After: 1073, Exception After: 1074 */ static method call
                                                                                                                                      __log__ ("reflected_ray", $reflected_ray, 1023);
                                                                                                                                      $TLE287 = ray::dot ($light_ray, $reflected_ray);// /* , Call: 1080, Return: 1081, Exception Return: 1082, After: 1078, Exception After: 1079 */ static method call
                                                                                                                                      __log__ ("TLE287", $TLE287, 1028);
                                                                                                                                      $TLE288 = 0; // 1083
                                                                                                                                      __log__ ("TLE288", $TLE288, 1033);
                                                                                                                                      $specular_shading = max ($TLE287, $TLE288); // "1084native call"
                                                                                                                                      __log__ ("specular_shading", $specular_shading, 1034);
                                                                                                                                      $TLE289 = 16; // 1085
                                                                                                                                      __log__ ("TLE289", $TLE289, 1035);
                                                                                                                                      $specular_shading = pow ($specular_shading, $TLE289); // "1086native call"
                                                                                                                                      __log__ ("specular_shading", $specular_shading, 1036);
                                                                                                                                      $reflection_shading = null; // 1087
                                                                                                                                      __log__ ("reflection_shading", $reflection_shading, 1037);
                                                                                                                                      $TSNNt601 = $this->reflections; // 1088
                                                                                                                                      __log__ ("TSNNt601", $TSNNt601, 1038);
                                                                                                                                      $TLE10 = $TSNNt601; // 1089
                                                                                                                                      __log__ ("TLE10", $TLE10, 1039);
                                                                                                                                      if ($TLE10){
                                                                                                                                          $TLE290 = 3; // 1091
                                                                                                                                          __log__ ("TLE290", $TLE290, 1041);
                                                                                                                                          $TEF11 = $recursion < $TLE290; // 1092
                                                                                                                                          __log__ ("TEF11", $TEF11, 1042);
                                                                                                                                      }
                                                                                                                                      else {
                                                                                                                                          $TEF11 = $TLE10; // 1093
                                                                                                                                          __log__ ("TEF11", $TEF11, 1043);
                                                                                                                                      }
                                                                                                                                      $TLE291 = (bool) $TEF11; // 1094
                                                                                                                                      __log__ ("TLE291", $TLE291, 1044);
                                                                                                                                      if ($TLE291){
                                                                                                                                          $TLE292 = 'o'; // 1096
                                                                                                                                          __log__ ("TLE292", $TLE292, 1046);
                                                                                                                                          $TSNNi602 = $r[$TLE292]; // 1097
                                                                                                                                          __log__ ("TSNNi602", $TSNNi602, 1047);
                                                                                                                                          $TLE293 = $TSNNi602->getname ();// /* , Call: 1100, Return: 1101, Exception Return: 1102, After: 1098, Exception After: 1099 */ method call
                                                                                                                                          __log__ ("TLE293", $TLE293, 1048);
                                                                                                                                          $TLE294 = 'white sphere'; // 1103
                                                                                                                                          __log__ ("TLE294", $TLE294, 1053);
                                                                                                                                          $TLE295 = $TLE293 == $TLE294; // 1104
                                                                                                                                          __log__ ("TLE295", $TLE295, 1054);
                                                                                                                                          if ($TLE295){
                                                                                                                                              $TLE296 = 'o'; // 1106
                                                                                                                                              __log__ ("TLE296", $TLE296, 1056);
                                                                                                                                              $TLE297 = 1; // 1107
                                                                                                                                              __log__ ("TLE297", $TLE297, 1057);
                                                                                                                                              $TLE298 = $recursion + $TLE297; // 1108
                                                                                                                                              __log__ ("TLE298", $TLE298, 1058);
                                                                                                                                              $TSNNi603 = $r[$TLE296]; // 1109
                                                                                                                                              __log__ ("TSNNi603", $TSNNi603, 1059);
                                                                                                                                              $reflection_shading = $this->render_ray ($world, $reflected_ray, $TSNNi603, $TLE298);// /* , Call: 1112, Return: 1113, Exception Return: 1114, After: 1110, Exception After: 1111 */ method call
                                                                                                                                              __log__ ("reflection_shading", $reflection_shading, 1060);
                                                                                                                                          }
                                                                                                                                          else {
                                                                                                                                               // "1115 skip"
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                      else {
                                                                                                                                           // "1116 skip"
                                                                                                                                      }
                                                                                                                                      $TLE299 = 0.7; // 1117
                                                                                                                                      __log__ ("TLE299", $TLE299, 1067);
                                                                                                                                      $TLE300 = $TLE299 * $diffuse_shading; // 1118
                                                                                                                                      __log__ ("TLE300", $TLE300, 1068);
                                                                                                                                      $TLE301 = 0.3; // 1119
                                                                                                                                      __log__ ("TLE301", $TLE301, 1069);
                                                                                                                                      $TLE302 = $TLE301 * $specular_shading; // 1120
                                                                                                                                      __log__ ("TLE302", $TLE302, 1070);
                                                                                                                                      $total = $TLE300 + $TLE302; // 1121
                                                                                                                                      __log__ ("total", $total, 1071);
                                                                                                                                      $TLE303 = 'o'; // 1122
                                                                                                                                      __log__ ("TLE303", $TLE303, 1072);
                                                                                                                                      $TSNNi604 = $r[$TLE303]; // 1123
                                                                                                                                      __log__ ("TSNNi604", $TSNNi604, 1073);
                                                                                                                                      $TLE304 = $TSNNi604->getcolor ();// /* , Call: 1126, Return: 1127, Exception Return: 1128, After: 1124, Exception After: 1125 */ method call
                                                                                                                                      __log__ ("TLE304", $TLE304, 1074);
                                                                                                                                      $c = $TLE304->klone ();// /* , Call: 1131, Return: 1132, Exception Return: 1133, After: 1129, Exception After: 1130 */ method call
                                                                                                                                      __log__ ("c", $c, 1079);
                                                                                                                                      $TLE305 = 1; // 1134
                                                                                                                                      __log__ ("TLE305", $TLE305, 1084);
                                                                                                                                      $TLE306 = min ($total, $TLE305); // "1135native call"
                                                                                                                                      __log__ ("TLE306", $TLE306, 1085);
                                                                                                                                      $c->k_mul ($TLE306);// /* , Call: 1138, Return: 1139, Exception Return: 1140, After: 1136, Exception After: 1137 */ method call
                                                                                                                                      $TLE307 = 1; // 1141
                                                                                                                                      __log__ ("TLE307", $TLE307, 1091);
                                                                                                                                      $TLE12 = $recursion == $TLE307; // 1142
                                                                                                                                      __log__ ("TLE12", $TLE12, 1092);
                                                                                                                                      if ($TLE12){
                                                                                                                                          $TEF13 = $reflection_shading; // 1144
                                                                                                                                          __log__ ("TEF13", $TEF13, 1094);
                                                                                                                                      }
                                                                                                                                      else {
                                                                                                                                          $TEF13 = $TLE12; // 1145
                                                                                                                                          __log__ ("TEF13", $TEF13, 1095);
                                                                                                                                      }
                                                                                                                                      $TLE308 = (bool) $TEF13; // 1146
                                                                                                                                      __log__ ("TLE308", $TLE308, 1096);
                                                                                                                                      if ($TLE308){
                                                                                                                                          $TLE309 = 0.2; // 1148
                                                                                                                                          __log__ ("TLE309", $TLE309, 1098);
                                                                                                                                          $c->k_mul ($TLE309);// /* , Call: 1151, Return: 1152, Exception Return: 1153, After: 1149, Exception After: 1150 */ method call
                                                                                                                                          $c2 = $reflection_shading->klone ();// /* , Call: 1156, Return: 1157, Exception Return: 1158, After: 1154, Exception After: 1155 */ method call
                                                                                                                                          __log__ ("c2", $c2, 1104);
                                                                                                                                          $TLE310 = 0.8; // 1159
                                                                                                                                          __log__ ("TLE310", $TLE310, 1109);
                                                                                                                                          $c2->k_mul ($TLE310);// /* , Call: 1162, Return: 1163, Exception Return: 1164, After: 1160, Exception After: 1161 */ method call
                                                                                                                                          $c->v_add ($c2);// /* , Call: 1167, Return: 1168, Exception Return: 1169, After: 1165, Exception After: 1166 */ method call
                                                                                                                                          return $c; // 1170
                                                                                                                                      }
                                                                                                                                      else {
                                                                                                                                          return $c; // 1171
                                                                                                                                      }
                                                                                                                                  }
}
abstract class renderer { // "1172"
    protected $anti_alias = false;
    protected $reflections = false;
    public function setantialias ($bool)/* Entry: 1173, Exit: 1174, Exception Exit: 1175 */ 
                                                                                           {
                                                                                               $TSNNt605 = $bool; // 1176
                                                                                               __log__ ("TSNNt605", $TSNNt605, 1126);
                                                                                               $this->anti_alias = $TSNNt605; // 1177
                                                                                               return $this; // 1178
                                                                                           }
    public function setreflection ($bool)/* Entry: 1179, Exit: 1180, Exception Exit: 1181 */ 
                                                                                            {
                                                                                                $TSNNt606 = $bool; // 1182
                                                                                                __log__ ("TSNNt606", $TSNNt606, 1132);
                                                                                                $this->reflections = $TSNNt606; // 1183
                                                                                                return $this; // 1184
                                                                                            }
    protected function rayintersection (world $world, ray $ray, $ignore, $compute_point, $compute_normal)/* Entry: 1185, Exit: 1186, Exception Exit: 1187 */ 
                                                                                                                                                            {
                                                                                                                                                                $result = null; // 1188
                                                                                                                                                                __log__ ("result", $result, 1138);
                                                                                                                                                                $TLE311 = $world->getobjects ();// /* , Call: 1191, Return: 1192, Exception Return: 1193, After: 1189, Exception After: 1190 */ method call
                                                                                                                                                                __log__ ("TLE311", $TLE311, 1139);
                                                                                                                                                                foreach ($TLE311 as $obj) {
                                                                                                                                                                    $TLE312 = $obj === $ignore; // 1195
                                                                                                                                                                    __log__ ("TLE312", $TLE312, 1145);
                                                                                                                                                                    if ($TLE312){
                                                                                                                                                                        continue; // 1197
                                                                                                                                                                    }
                                                                                                                                                                    else {
                                                                                                                                                                         // "1198 skip"
                                                                                                                                                                    }
                                                                                                                                                                    $t = $obj->intersect ($ray, $compute_point, $compute_normal);// /* , Call: 1201, Return: 1202, Exception Return: 1203, After: 1199, Exception After: 1200 */ method call
                                                                                                                                                                    __log__ ("t", $t, 1149);
                                                                                                                                                                    $TLE313 = null; // 1204
                                                                                                                                                                    __log__ ("TLE313", $TLE313, 1154);
                                                                                                                                                                    $TLE314 = $t === $TLE313; // 1205
                                                                                                                                                                    __log__ ("TLE314", $TLE314, 1155);
                                                                                                                                                                    if ($TLE314){
                                                                                                                                                                        continue; // 1207
                                                                                                                                                                    }
                                                                                                                                                                    else {
                                                                                                                                                                         // "1208 skip"
                                                                                                                                                                    }
                                                                                                                                                                    $TLE14 = !$result; // 1209
                                                                                                                                                                    __log__ ("TLE14", $TLE14, 1159);
                                                                                                                                                                    if ($TLE14){
                                                                                                                                                                        $TEF15 = $TLE14; // 1211
                                                                                                                                                                        __log__ ("TEF15", $TEF15, 1161);
                                                                                                                                                                    }
                                                                                                                                                                    else {
                                                                                                                                                                        $TLE315 = 'd'; // 1212
                                                                                                                                                                        __log__ ("TLE315", $TLE315, 1162);
                                                                                                                                                                        $TLE316 = 'd'; // 1213
                                                                                                                                                                        __log__ ("TLE316", $TLE316, 1163);
                                                                                                                                                                        $TSNNi607 = $t[$TLE315]; // 1214
                                                                                                                                                                        __log__ ("TSNNi607", $TSNNi607, 1164);
                                                                                                                                                                        $TSNNi608 = $result[$TLE316]; // 1215
                                                                                                                                                                        __log__ ("TSNNi608", $TSNNi608, 1165);
                                                                                                                                                                        $TEF15 = $TSNNi607 < $TSNNi608; // 1216
                                                                                                                                                                        __log__ ("TEF15", $TEF15, 1166);
                                                                                                                                                                    }
                                                                                                                                                                    $TLE317 = (bool) $TEF15; // 1217
                                                                                                                                                                    __log__ ("TLE317", $TLE317, 1167);
                                                                                                                                                                    if ($TLE317){
                                                                                                                                                                        $result = $t; // 1219
                                                                                                                                                                        __log__ ("result", $result, 1169);
                                                                                                                                                                        $TLE318 = 'o'; // 1220
                                                                                                                                                                        __log__ ("TLE318", $TLE318, 1170);
                                                                                                                                                                        $result[$TLE318] = $obj; // 1221
                                                                                                                                                                    }
                                                                                                                                                                    else {
                                                                                                                                                                         // "1222 skip"
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                return $result; // 1223
                                                                                                                                                            }
    protected function pointlight (world $world, vector $point, object $ignore)/* Entry: 1224, Exit: 1225, Exception Exit: 1226 */ 
                                                                                                                                  {
                                                                                                                                      $ray = new ray ();// /* , Call: 1229, Return: 1230, Exception Return: 1231, After: 1227, Exception After: 1228 */ constructor call
                                                                                                                                      __log__ ("ray", $ray, 1177);
                                                                                                                                      $ray->setorigin ($point);// /* , Call: 1234, Return: 1235, Exception Return: 1236, After: 1232, Exception After: 1233 */ method call
                                                                                                                                      $TLE319 = $world->getlights ();// /* , Call: 1239, Return: 1240, Exception Return: 1241, After: 1237, Exception After: 1238 */ method call
                                                                                                                                      __log__ ("TLE319", $TLE319, 1187);
                                                                                                                                      foreach ($TLE319 as $light) {
                                                                                                                                          $TLE320 = $light->getposition ();// /* , Call: 1245, Return: 1246, Exception Return: 1247, After: 1243, Exception After: 1244 */ method call
                                                                                                                                          __log__ ("TLE320", $TLE320, 1193);
                                                                                                                                          $TLE321 = vector::fromatob ($point, $TLE320);// /* , Call: 1250, Return: 1251, Exception Return: 1252, After: 1248, Exception After: 1249 */ static method call
                                                                                                                                          __log__ ("TLE321", $TLE321, 1198);
                                                                                                                                          $ray->setdirection ($TLE321);// /* , Call: 1255, Return: 1256, Exception Return: 1257, After: 1253, Exception After: 1254 */ method call
                                                                                                                                          $hits_light = false; // 1258
                                                                                                                                          __log__ ("hits_light", $hits_light, 1208);
                                                                                                                                          $TLE322 = $world->getobjects ();// /* , Call: 1261, Return: 1262, Exception Return: 1263, After: 1259, Exception After: 1260 */ method call
                                                                                                                                          __log__ ("TLE322", $TLE322, 1209);
                                                                                                                                          foreach ($TLE322 as $obj) {
                                                                                                                                              $TLE323 = $obj === $ignore; // 1265
                                                                                                                                              __log__ ("TLE323", $TLE323, 1215);
                                                                                                                                              if ($TLE323){
                                                                                                                                                  continue; // 1267
                                                                                                                                              }
                                                                                                                                              else {
                                                                                                                                                   // "1268 skip"
                                                                                                                                              }
                                                                                                                                              $TLE324 = false; // 1269
                                                                                                                                              __log__ ("TLE324", $TLE324, 1219);
                                                                                                                                              $TLE325 = false; // 1270
                                                                                                                                              __log__ ("TLE325", $TLE325, 1220);
                                                                                                                                              $TLE326 = $obj->intersect ($ray, $TLE324, $TLE325);// /* , Call: 1273, Return: 1274, Exception Return: 1275, After: 1271, Exception After: 1272 */ method call
                                                                                                                                              __log__ ("TLE326", $TLE326, 1221);
                                                                                                                                              $TLE327 = null; // 1276
                                                                                                                                              __log__ ("TLE327", $TLE327, 1226);
                                                                                                                                              $TLE328 = $TLE326 !== $TLE327; // 1277
                                                                                                                                              __log__ ("TLE328", $TLE328, 1227);
                                                                                                                                              if ($TLE328){
                                                                                                                                                  $hits_light = true; // 1279
                                                                                                                                                  __log__ ("hits_light", $hits_light, 1229);
                                                                                                                                                  break; // 1280
                                                                                                                                              }
                                                                                                                                              else {
                                                                                                                                                   // "1281 skip"
                                                                                                                                              }
                                                                                                                                          }
                                                                                                                                          $TLE329 = !$hits_light; // 1282
                                                                                                                                          __log__ ("TLE329", $TLE329, 1232);
                                                                                                                                          if ($TLE329){
                                                                                                                                              return $ray; // 1284
                                                                                                                                          }
                                                                                                                                          else {
                                                                                                                                               // "1285 skip"
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                      $TLE330 = null; // 1286
                                                                                                                                      __log__ ("TLE330", $TLE330, 1236);
                                                                                                                                      return $TLE330; // 1287
                                                                                                                                  }
    public function render (world $world, encoder $img, $width, $height)/* Entry: 1288, Exit: 1289, Exception Exit: 1290 */ 
                                                                                                                           {
                                                                                                                               $camera = $world->getcamera ();// /* , Call: 1293, Return: 1294, Exception Return: 1295, After: 1291, Exception After: 1292 */ method call
                                                                                                                               __log__ ("camera", $camera, 1241);
                                                                                                                               $TLE331 = $camera->getdirection ();// /* , Call: 1298, Return: 1299, Exception Return: 1300, After: 1296, Exception After: 1297 */ method call
                                                                                                                               __log__ ("TLE331", $TLE331, 1246);
                                                                                                                               $camera_z = $TLE331->klone ();// /* , Call: 1303, Return: 1304, Exception Return: 1305, After: 1301, Exception After: 1302 */ method call
                                                                                                                               __log__ ("camera_z", $camera_z, 1251);
                                                                                                                               $TLE332 = 2; // 1306
                                                                                                                               __log__ ("TLE332", $TLE332, 1256);
                                                                                                                               $TLE333 = $width / $TLE332; // 1307
                                                                                                                               __log__ ("TLE333", $TLE333, 1257);
                                                                                                                               $TLE334 = $camera->getangle ();// /* , Call: 1310, Return: 1311, Exception Return: 1312, After: 1308, Exception After: 1309 */ method call
                                                                                                                               __log__ ("TLE334", $TLE334, 1258);
                                                                                                                               $TLE335 = tan ($TLE334); // "1313native call"
                                                                                                                               __log__ ("TLE335", $TLE335, 1263);
                                                                                                                               $TLE336 = $TLE333 / $TLE335; // 1314
                                                                                                                               __log__ ("TLE336", $TLE336, 1264);
                                                                                                                               $camera_z->k_mul ($TLE336);// /* , Call: 1317, Return: 1318, Exception Return: 1319, After: 1315, Exception After: 1316 */ method call
                                                                                                                               $j = 0; // 1320
                                                                                                                               __log__ ("j", $j, 1270);
                                                                                                                               $ElcfPF5 = true; // 1321
                                                                                                                               __log__ ("ElcfPF5", $ElcfPF5, 1271);
                                                                                                                               while (True){
                                                                                                                                   if ($ElcfPF5){
                                                                                                                                       $ElcfPF5 = false; // 1324
                                                                                                                                       __log__ ("ElcfPF5", $ElcfPF5, 1274);
                                                                                                                                   }
                                                                                                                                   else {
                                                                                                                                       ++$j; // 1325
                                                                                                                                       __log__ ("j", $j, 1275);
                                                                                                                                   }
                                                                                                                                   $TLE337 = $j < $height; // 1326
                                                                                                                                   __log__ ("TLE337", $TLE337, 1276);
                                                                                                                                   if ($TLE337){
                                                                                                                                        // "1328 skip"
                                                                                                                                   }
                                                                                                                                   else {
                                                                                                                                       break; // 1329
                                                                                                                                   }
                                                                                                                                   $i = 0; // 1330
                                                                                                                                   __log__ ("i", $i, 1280);
                                                                                                                                   $ElcfPF4 = true; // 1331
                                                                                                                                   __log__ ("ElcfPF4", $ElcfPF4, 1281);
                                                                                                                                   while (True){
                                                                                                                                       if ($ElcfPF4){
                                                                                                                                           $ElcfPF4 = false; // 1334
                                                                                                                                           __log__ ("ElcfPF4", $ElcfPF4, 1284);
                                                                                                                                       }
                                                                                                                                       else {
                                                                                                                                           ++$i; // 1335
                                                                                                                                           __log__ ("i", $i, 1285);
                                                                                                                                       }
                                                                                                                                       $TLE338 = $i < $width; // 1336
                                                                                                                                       __log__ ("TLE338", $TLE338, 1286);
                                                                                                                                       if ($TLE338){
                                                                                                                                            // "1338 skip"
                                                                                                                                       }
                                                                                                                                       else {
                                                                                                                                           break; // 1339
                                                                                                                                       }
                                                                                                                                       $r = $camera_z->klone ();// /* , Call: 1342, Return: 1343, Exception Return: 1344, After: 1340, Exception After: 1341 */ method call
                                                                                                                                       __log__ ("r", $r, 1290);
                                                                                                                                       $new_i = $i; // 1345
                                                                                                                                       __log__ ("new_i", $new_i, 1295);
                                                                                                                                       $new_j = $j; // 1346
                                                                                                                                       __log__ ("new_j", $new_j, 1296);
                                                                                                                                       $TSNNt609 = $this->anti_alias; // 1347
                                                                                                                                       __log__ ("TSNNt609", $TSNNt609, 1297);
                                                                                                                                       if ($TSNNt609){
                                                                                                                                           $TLE339 = mt_rand (); // "1349native call"
                                                                                                                                           __log__ ("TLE339", $TLE339, 1299);
                                                                                                                                           $TLE340 = mt_getrandmax (); // "1350native call"
                                                                                                                                           __log__ ("TLE340", $TLE340, 1300);
                                                                                                                                           $TLE341 = $TLE339 / $TLE340; // 1351
                                                                                                                                           __log__ ("TLE341", $TLE341, 1301);
                                                                                                                                           $new_i = $new_i + $TLE341; // 1352
                                                                                                                                           __log__ ("new_i", $new_i, 1302);
                                                                                                                                           $TLE342 = mt_rand (); // "1353native call"
                                                                                                                                           __log__ ("TLE342", $TLE342, 1303);
                                                                                                                                           $TLE343 = mt_getrandmax (); // "1354native call"
                                                                                                                                           __log__ ("TLE343", $TLE343, 1304);
                                                                                                                                           $TLE344 = $TLE342 / $TLE343; // 1355
                                                                                                                                           __log__ ("TLE344", $TLE344, 1305);
                                                                                                                                           $new_j = $new_j + $TLE344; // 1356
                                                                                                                                           __log__ ("new_j", $new_j, 1306);
                                                                                                                                       }
                                                                                                                                       else {
                                                                                                                                            // "1357 skip"
                                                                                                                                       }
                                                                                                                                       $TLE345 = $camera->getright ();// /* , Call: 1360, Return: 1361, Exception Return: 1362, After: 1358, Exception After: 1359 */ method call
                                                                                                                                       __log__ ("TLE345", $TLE345, 1308);
                                                                                                                                       $t = $TLE345->klone ();// /* , Call: 1365, Return: 1366, Exception Return: 1367, After: 1363, Exception After: 1364 */ method call
                                                                                                                                       __log__ ("t", $t, 1313);
                                                                                                                                       $TLE346 = 2; // 1368
                                                                                                                                       __log__ ("TLE346", $TLE346, 1318);
                                                                                                                                       $TLE347 = $width / $TLE346; // 1369
                                                                                                                                       __log__ ("TLE347", $TLE347, 1319);
                                                                                                                                       $TLE348 = $new_i - $TLE347; // 1370
                                                                                                                                       __log__ ("TLE348", $TLE348, 1320);
                                                                                                                                       $t->k_mul ($TLE348);// /* , Call: 1373, Return: 1374, Exception Return: 1375, After: 1371, Exception After: 1372 */ method call
                                                                                                                                       $r->v_add ($t);// /* , Call: 1378, Return: 1379, Exception Return: 1380, After: 1376, Exception After: 1377 */ method call
                                                                                                                                       $TLE349 = $camera->getup ();// /* , Call: 1383, Return: 1384, Exception Return: 1385, After: 1381, Exception After: 1382 */ method call
                                                                                                                                       __log__ ("TLE349", $TLE349, 1331);
                                                                                                                                       $t = $TLE349->klone ();// /* , Call: 1388, Return: 1389, Exception Return: 1390, After: 1386, Exception After: 1387 */ method call
                                                                                                                                       __log__ ("t", $t, 1336);
                                                                                                                                       $TLE350 = 2; // 1391
                                                                                                                                       __log__ ("TLE350", $TLE350, 1341);
                                                                                                                                       $TLE351 = $height / $TLE350; // 1392
                                                                                                                                       __log__ ("TLE351", $TLE351, 1342);
                                                                                                                                       $TLE352 = $TLE351 - $new_j; // 1393
                                                                                                                                       __log__ ("TLE352", $TLE352, 1343);
                                                                                                                                       $t->k_mul ($TLE352);// /* , Call: 1396, Return: 1397, Exception Return: 1398, After: 1394, Exception After: 1395 */ method call
                                                                                                                                       $r->v_add ($t);// /* , Call: 1401, Return: 1402, Exception Return: 1403, After: 1399, Exception After: 1400 */ method call
                                                                                                                                       $ray = new ray ();// /* , Call: 1406, Return: 1407, Exception Return: 1408, After: 1404, Exception After: 1405 */ constructor call
                                                                                                                                       __log__ ("ray", $ray, 1354);
                                                                                                                                       $TLE353 = $camera->getposition ();// /* , Call: 1411, Return: 1412, Exception Return: 1413, After: 1409, Exception After: 1410 */ method call
                                                                                                                                       __log__ ("TLE353", $TLE353, 1359);
                                                                                                                                       $ray->setorigin ($TLE353);// /* , Call: 1416, Return: 1417, Exception Return: 1418, After: 1414, Exception After: 1415 */ method call
                                                                                                                                       $ray->setdirection ($r);// /* , Call: 1421, Return: 1422, Exception Return: 1423, After: 1419, Exception After: 1420 */ method call
                                                                                                                                       $TLE354 = null; // 1424
                                                                                                                                       __log__ ("TLE354", $TLE354, 1374);
                                                                                                                                       $TLE355 = 1; // 1425
                                                                                                                                       __log__ ("TLE355", $TLE355, 1375);
                                                                                                                                       $c = $this->render_ray ($world, $ray, $TLE354, $TLE355);// /* , Call: 1428, Return: 1429, Exception Return: 1430, After: 1426, Exception After: 1427 */ method call
                                                                                                                                       __log__ ("c", $c, 1376);
                                                                                                                                       if ($c){
                                                                                                                                           $img->setpixel ($i, $j, $c);// /* , Call: 1434, Return: 1435, Exception Return: 1436, After: 1432, Exception After: 1433 */ method call
                                                                                                                                       }
                                                                                                                                       else {
                                                                                                                                            // "1437 skip"
                                                                                                                                       }
                                                                                                                                   }
                                                                                                                               }
                                                                                                                           }
    protected abstract function render_ray (world $world, ray $ray, $ignore, $recursion)/* Entry: 1438, Exit: 1439, Exception Exit: 1440 */;
}
class simplerenderer extends renderer { // "1441"
    protected function render_ray (world $world, ray $ray, $ignore, $recursion)/* Entry: 1442, Exit: 1443, Exception Exit: 1444 */ 
                                                                                                                                  {
                                                                                                                                      $TLE356 = false; // 1445
                                                                                                                                      __log__ ("TLE356", $TLE356, 1395);
                                                                                                                                      $TLE357 = false; // 1446
                                                                                                                                      __log__ ("TLE357", $TLE357, 1396);
                                                                                                                                      $r = $this->rayintersection ($world, $ray, $ignore, $TLE356, $TLE357);// /* , Call: 1449, Return: 1450, Exception Return: 1451, After: 1447, Exception After: 1448 */ method call
                                                                                                                                      __log__ ("r", $r, 1397);
                                                                                                                                      $TLE358 = !$r; // 1452
                                                                                                                                      __log__ ("TLE358", $TLE358, 1402);
                                                                                                                                      if ($TLE358){
                                                                                                                                          $TLE359 = null; // 1454
                                                                                                                                          __log__ ("TLE359", $TLE359, 1404);
                                                                                                                                          return $TLE359; // 1455
                                                                                                                                      }
                                                                                                                                      else {
                                                                                                                                           // "1456 skip"
                                                                                                                                      }
                                                                                                                                      $TLE360 = 'o'; // 1457
                                                                                                                                      __log__ ("TLE360", $TLE360, 1407);
                                                                                                                                      $TSNNi610 = $r[$TLE360]; // 1458
                                                                                                                                      __log__ ("TSNNi610", $TSNNi610, 1408);
                                                                                                                                      $TLE361 = $TSNNi610->getcolor ();// /* , Call: 1461, Return: 1462, Exception Return: 1463, After: 1459, Exception After: 1460 */ method call
                                                                                                                                      __log__ ("TLE361", $TLE361, 1409);
                                                                                                                                      return $TLE361; // 1464
                                                                                                                                  }
}
function my_assert ($bool, $message = '')  // "ln: 1465, lx: 1466, lxe: 1467"
{
    $TLE362 = !$bool; // 1468
    __log__ ("TLE362", $TLE362, 1418);
    if ($TLE362){
        exit ($message); // 1470
    }
    else {
         // "1471 skip"
    }
}
function id ($obj)  // "ln: 1472, lx: 1473, lxe: 1474"
{
    return $obj; // 1475
}
class vector { // "1476"
    public $x;
    public $y;
    public $z;
    public function __construct ($x, $y, $z)/* Entry: 1477, Exit: 1478, Exception Exit: 1479 */ 
                                                                                               {
                                                                                                   $TLE363 = (real) $x; // 1480
                                                                                                   __log__ ("TLE363", $TLE363, 1430);
                                                                                                   $TSNNt611 = $TLE363; // 1481
                                                                                                   __log__ ("TSNNt611", $TSNNt611, 1431);
                                                                                                   $this->x = $TSNNt611; // 1482
                                                                                                   $TLE364 = (real) $y; // 1483
                                                                                                   __log__ ("TLE364", $TLE364, 1433);
                                                                                                   $TSNNt612 = $TLE364; // 1484
                                                                                                   __log__ ("TSNNt612", $TSNNt612, 1434);
                                                                                                   $this->y = $TSNNt612; // 1485
                                                                                                   $TLE365 = (real) $z; // 1486
                                                                                                   __log__ ("TLE365", $TLE365, 1436);
                                                                                                   $TSNNt613 = $TLE365; // 1487
                                                                                                   __log__ ("TSNNt613", $TSNNt613, 1437);
                                                                                                   $this->z = $TSNNt613; // 1488
                                                                                               }
    public function klone ()/* Entry: 1489, Exit: 1490, Exception Exit: 1491 */ 
                                                                               {
                                                                                   $TSNNt614 = $this->x; // 1492
                                                                                   __log__ ("TSNNt614", $TSNNt614, 1442);
                                                                                   $TSNNt615 = $this->y; // 1493
                                                                                   __log__ ("TSNNt615", $TSNNt615, 1443);
                                                                                   $TSNNt616 = $this->z; // 1494
                                                                                   __log__ ("TSNNt616", $TSNNt616, 1444);
                                                                                   $TLE366 = new vector ($TSNNt614, $TSNNt615, $TSNNt616);// /* , Call: 1497, Return: 1498, Exception Return: 1499, After: 1495, Exception After: 1496 */ constructor call
                                                                                   __log__ ("TLE366", $TLE366, 1445);
                                                                                   return $TLE366; // 1500
                                                                               }
    public static function fromatob (vector $a, vector $b)/* Entry: 1501, Exit: 1502, Exception Exit: 1503 */ 
                                                                                                             {
                                                                                                                 $r = $b->klone ();// /* , Call: 1506, Return: 1507, Exception Return: 1508, After: 1504, Exception After: 1505 */ method call
                                                                                                                 __log__ ("r", $r, 1454);
                                                                                                                 $r->v_sub ($a);// /* , Call: 1511, Return: 1512, Exception Return: 1513, After: 1509, Exception After: 1510 */ method call
                                                                                                                 return $r; // 1514
                                                                                                             }
    public function equals (vector $v2)/* Entry: 1515, Exit: 1516, Exception Exit: 1517 */ 
                                                                                          {
                                                                                              $TSNNt617 = $this->x; // 1518
                                                                                              __log__ ("TSNNt617", $TSNNt617, 1468);
                                                                                              $TSNNt618 = $v2->x; // 1519
                                                                                              __log__ ("TSNNt618", $TSNNt618, 1469);
                                                                                              $TLE16 = $TSNNt617 == $TSNNt618; // 1520
                                                                                              __log__ ("TLE16", $TLE16, 1470);
                                                                                              if ($TLE16){
                                                                                                  $TSNNt619 = $this->y; // 1522
                                                                                                  __log__ ("TSNNt619", $TSNNt619, 1472);
                                                                                                  $TSNNt620 = $v2->y; // 1523
                                                                                                  __log__ ("TSNNt620", $TSNNt620, 1473);
                                                                                                  $TEF17 = $TSNNt619 == $TSNNt620; // 1524
                                                                                                  __log__ ("TEF17", $TEF17, 1474);
                                                                                              }
                                                                                              else {
                                                                                                  $TEF17 = $TLE16; // 1525
                                                                                                  __log__ ("TEF17", $TEF17, 1475);
                                                                                              }
                                                                                              $TLE18 = (bool) $TEF17; // 1526
                                                                                              __log__ ("TLE18", $TLE18, 1476);
                                                                                              if ($TLE18){
                                                                                                  $TSNNt621 = $this->z; // 1528
                                                                                                  __log__ ("TSNNt621", $TSNNt621, 1478);
                                                                                                  $TSNNt622 = $v2->z; // 1529
                                                                                                  __log__ ("TSNNt622", $TSNNt622, 1479);
                                                                                                  $TEF19 = $TSNNt621 == $TSNNt622; // 1530
                                                                                                  __log__ ("TEF19", $TEF19, 1480);
                                                                                              }
                                                                                              else {
                                                                                                  $TEF19 = $TLE18; // 1531
                                                                                                  __log__ ("TEF19", $TEF19, 1481);
                                                                                              }
                                                                                              $TLE367 = (bool) $TEF19; // 1532
                                                                                              __log__ ("TLE367", $TLE367, 1482);
                                                                                              return $TLE367; // 1533
                                                                                          }
    public function length ()/* Entry: 1534, Exit: 1535, Exception Exit: 1536 */ 
                                                                                {
                                                                                    $TSNNt623 = $this->x; // 1537
                                                                                    __log__ ("TSNNt623", $TSNNt623, 1487);
                                                                                    $TSNNt624 = $this->x; // 1538
                                                                                    __log__ ("TSNNt624", $TSNNt624, 1488);
                                                                                    $TLE368 = $TSNNt623 * $TSNNt624; // 1539
                                                                                    __log__ ("TLE368", $TLE368, 1489);
                                                                                    $TSNNt625 = $this->y; // 1540
                                                                                    __log__ ("TSNNt625", $TSNNt625, 1490);
                                                                                    $TSNNt626 = $this->y; // 1541
                                                                                    __log__ ("TSNNt626", $TSNNt626, 1491);
                                                                                    $TLE369 = $TSNNt625 * $TSNNt626; // 1542
                                                                                    __log__ ("TLE369", $TLE369, 1492);
                                                                                    $TLE370 = $TLE368 + $TLE369; // 1543
                                                                                    __log__ ("TLE370", $TLE370, 1493);
                                                                                    $TSNNt627 = $this->z; // 1544
                                                                                    __log__ ("TSNNt627", $TSNNt627, 1494);
                                                                                    $TSNNt628 = $this->z; // 1545
                                                                                    __log__ ("TSNNt628", $TSNNt628, 1495);
                                                                                    $TLE371 = $TSNNt627 * $TSNNt628; // 1546
                                                                                    __log__ ("TLE371", $TLE371, 1496);
                                                                                    $TLE372 = $TLE370 + $TLE371; // 1547
                                                                                    __log__ ("TLE372", $TLE372, 1497);
                                                                                    $TLE373 = sqrt ($TLE372); // "1548native call"
                                                                                    __log__ ("TLE373", $TLE373, 1498);
                                                                                    return $TLE373; // 1549
                                                                                }
    public function normalize ()/* Entry: 1550, Exit: 1551, Exception Exit: 1552 */ 
                                                                                   {
                                                                                       $TLE374 = $this->length ();// /* , Call: 1555, Return: 1556, Exception Return: 1557, After: 1553, Exception After: 1554 */ method call
                                                                                       __log__ ("TLE374", $TLE374, 1503);
                                                                                       $this->k_div ($TLE374);// /* , Call: 1560, Return: 1561, Exception Return: 1562, After: 1558, Exception After: 1559 */ method call
                                                                                   }
    public function assertnormalized ()/* Entry: 1563, Exit: 1564, Exception Exit: 1565 */ 
                                                                                          {
                                                                                              $l = $this->length ();// /* , Call: 1568, Return: 1569, Exception Return: 1570, After: 1566, Exception After: 1567 */ method call
                                                                                              __log__ ("l", $l, 1516);
                                                                                              $TLE375 = 0.99; // 1571
                                                                                              __log__ ("TLE375", $TLE375, 1521);
                                                                                              $TLE20 = $TLE375 <= $l; // 1572
                                                                                              __log__ ("TLE20", $TLE20, 1522);
                                                                                              if ($TLE20){
                                                                                                  $TLE376 = 1.01; // 1574
                                                                                                  __log__ ("TLE376", $TLE376, 1524);
                                                                                                  $TEF21 = $l <= $TLE376; // 1575
                                                                                                  __log__ ("TEF21", $TEF21, 1525);
                                                                                              }
                                                                                              else {
                                                                                                  $TEF21 = $TLE20; // 1576
                                                                                                  __log__ ("TEF21", $TEF21, 1526);
                                                                                              }
                                                                                              $TLE377 = (bool) $TEF21; // 1577
                                                                                              __log__ ("TLE377", $TLE377, 1527);
                                                                                              assert ($TLE377); // "1578native call"
                                                                                          }
    public function neg ()/* Entry: 1579, Exit: 1580, Exception Exit: 1581 */ 
                                                                             {
                                                                                 $TLE378 = 0; // 1582
                                                                                 __log__ ("TLE378", $TLE378, 1532);
                                                                                 $TSNNt629 = $this->x; // 1583
                                                                                 __log__ ("TSNNt629", $TSNNt629, 1533);
                                                                                 $TLE379 = $TLE378 - $TSNNt629; // 1584
                                                                                 __log__ ("TLE379", $TLE379, 1534);
                                                                                 $TSNNt630 = $TLE379; // 1585
                                                                                 __log__ ("TSNNt630", $TSNNt630, 1535);
                                                                                 $this->x = $TSNNt630; // 1586
                                                                                 $TLE380 = 0; // 1587
                                                                                 __log__ ("TLE380", $TLE380, 1537);
                                                                                 $TSNNt631 = $this->y; // 1588
                                                                                 __log__ ("TSNNt631", $TSNNt631, 1538);
                                                                                 $TLE381 = $TLE380 - $TSNNt631; // 1589
                                                                                 __log__ ("TLE381", $TLE381, 1539);
                                                                                 $TSNNt632 = $TLE381; // 1590
                                                                                 __log__ ("TSNNt632", $TSNNt632, 1540);
                                                                                 $this->y = $TSNNt632; // 1591
                                                                                 $TLE382 = 0; // 1592
                                                                                 __log__ ("TLE382", $TLE382, 1542);
                                                                                 $TSNNt633 = $this->z; // 1593
                                                                                 __log__ ("TSNNt633", $TSNNt633, 1543);
                                                                                 $TLE383 = $TLE382 - $TSNNt633; // 1594
                                                                                 __log__ ("TLE383", $TLE383, 1544);
                                                                                 $TSNNt634 = $TLE383; // 1595
                                                                                 __log__ ("TSNNt634", $TSNNt634, 1545);
                                                                                 $this->z = $TSNNt634; // 1596
                                                                             }
    public function v_add (vector $v2)/* Entry: 1597, Exit: 1598, Exception Exit: 1599 */ 
                                                                                         {
                                                                                             $TSNNt635 = $this->x; // 1600
                                                                                             __log__ ("TSNNt635", $TSNNt635, 1550);
                                                                                             $TSNNt636 = $v2->x; // 1601
                                                                                             __log__ ("TSNNt636", $TSNNt636, 1551);
                                                                                             $TLE384 = $TSNNt635 + $TSNNt636; // 1602
                                                                                             __log__ ("TLE384", $TLE384, 1552);
                                                                                             $TSNNt637 = $TLE384; // 1603
                                                                                             __log__ ("TSNNt637", $TSNNt637, 1553);
                                                                                             $this->x = $TSNNt637; // 1604
                                                                                             $TSNNt638 = $this->y; // 1605
                                                                                             __log__ ("TSNNt638", $TSNNt638, 1555);
                                                                                             $TSNNt639 = $v2->y; // 1606
                                                                                             __log__ ("TSNNt639", $TSNNt639, 1556);
                                                                                             $TLE385 = $TSNNt638 + $TSNNt639; // 1607
                                                                                             __log__ ("TLE385", $TLE385, 1557);
                                                                                             $TSNNt640 = $TLE385; // 1608
                                                                                             __log__ ("TSNNt640", $TSNNt640, 1558);
                                                                                             $this->y = $TSNNt640; // 1609
                                                                                             $TSNNt641 = $this->z; // 1610
                                                                                             __log__ ("TSNNt641", $TSNNt641, 1560);
                                                                                             $TSNNt642 = $v2->z; // 1611
                                                                                             __log__ ("TSNNt642", $TSNNt642, 1561);
                                                                                             $TLE386 = $TSNNt641 + $TSNNt642; // 1612
                                                                                             __log__ ("TLE386", $TLE386, 1562);
                                                                                             $TSNNt643 = $TLE386; // 1613
                                                                                             __log__ ("TSNNt643", $TSNNt643, 1563);
                                                                                             $this->z = $TSNNt643; // 1614
                                                                                             return $this; // 1615
                                                                                         }
    public function v_sub (vector $v2)/* Entry: 1616, Exit: 1617, Exception Exit: 1618 */ 
                                                                                         {
                                                                                             $TSNNt644 = $this->x; // 1619
                                                                                             __log__ ("TSNNt644", $TSNNt644, 1569);
                                                                                             $TSNNt645 = $v2->x; // 1620
                                                                                             __log__ ("TSNNt645", $TSNNt645, 1570);
                                                                                             $TLE387 = $TSNNt644 - $TSNNt645; // 1621
                                                                                             __log__ ("TLE387", $TLE387, 1571);
                                                                                             $TSNNt646 = $TLE387; // 1622
                                                                                             __log__ ("TSNNt646", $TSNNt646, 1572);
                                                                                             $this->x = $TSNNt646; // 1623
                                                                                             $TSNNt647 = $this->y; // 1624
                                                                                             __log__ ("TSNNt647", $TSNNt647, 1574);
                                                                                             $TSNNt648 = $v2->y; // 1625
                                                                                             __log__ ("TSNNt648", $TSNNt648, 1575);
                                                                                             $TLE388 = $TSNNt647 - $TSNNt648; // 1626
                                                                                             __log__ ("TLE388", $TLE388, 1576);
                                                                                             $TSNNt649 = $TLE388; // 1627
                                                                                             __log__ ("TSNNt649", $TSNNt649, 1577);
                                                                                             $this->y = $TSNNt649; // 1628
                                                                                             $TSNNt650 = $this->z; // 1629
                                                                                             __log__ ("TSNNt650", $TSNNt650, 1579);
                                                                                             $TSNNt651 = $v2->z; // 1630
                                                                                             __log__ ("TSNNt651", $TSNNt651, 1580);
                                                                                             $TLE389 = $TSNNt650 - $TSNNt651; // 1631
                                                                                             __log__ ("TLE389", $TLE389, 1581);
                                                                                             $TSNNt652 = $TLE389; // 1632
                                                                                             __log__ ("TSNNt652", $TSNNt652, 1582);
                                                                                             $this->z = $TSNNt652; // 1633
                                                                                             return $this; // 1634
                                                                                         }
    public static function dot (vector $v1, vector $v2)/* Entry: 1635, Exit: 1636, Exception Exit: 1637 */ 
                                                                                                          {
                                                                                                              $TSNNt653 = $v1->x; // 1638
                                                                                                              __log__ ("TSNNt653", $TSNNt653, 1588);
                                                                                                              $TSNNt654 = $v2->x; // 1639
                                                                                                              __log__ ("TSNNt654", $TSNNt654, 1589);
                                                                                                              $TLE390 = $TSNNt653 * $TSNNt654; // 1640
                                                                                                              __log__ ("TLE390", $TLE390, 1590);
                                                                                                              $TSNNt655 = $v1->y; // 1641
                                                                                                              __log__ ("TSNNt655", $TSNNt655, 1591);
                                                                                                              $TSNNt656 = $v2->y; // 1642
                                                                                                              __log__ ("TSNNt656", $TSNNt656, 1592);
                                                                                                              $TLE391 = $TSNNt655 * $TSNNt656; // 1643
                                                                                                              __log__ ("TLE391", $TLE391, 1593);
                                                                                                              $TLE392 = $TLE390 + $TLE391; // 1644
                                                                                                              __log__ ("TLE392", $TLE392, 1594);
                                                                                                              $TSNNt657 = $v1->z; // 1645
                                                                                                              __log__ ("TSNNt657", $TSNNt657, 1595);
                                                                                                              $TSNNt658 = $v2->z; // 1646
                                                                                                              __log__ ("TSNNt658", $TSNNt658, 1596);
                                                                                                              $TLE393 = $TSNNt657 * $TSNNt658; // 1647
                                                                                                              __log__ ("TLE393", $TLE393, 1597);
                                                                                                              $TLE394 = $TLE392 + $TLE393; // 1648
                                                                                                              __log__ ("TLE394", $TLE394, 1598);
                                                                                                              return $TLE394; // 1649
                                                                                                          }
    public function v_cross (vector $v2)/* Entry: 1650, Exit: 1651, Exception Exit: 1652 */ 
                                                                                           {
                                                                                               $TSNNt659 = $this->y; // 1653
                                                                                               __log__ ("TSNNt659", $TSNNt659, 1603);
                                                                                               $TSNNt660 = $v2->z; // 1654
                                                                                               __log__ ("TSNNt660", $TSNNt660, 1604);
                                                                                               $TLE395 = $TSNNt659 * $TSNNt660; // 1655
                                                                                               __log__ ("TLE395", $TLE395, 1605);
                                                                                               $TSNNt661 = $this->z; // 1656
                                                                                               __log__ ("TSNNt661", $TSNNt661, 1606);
                                                                                               $TSNNt662 = $v2->y; // 1657
                                                                                               __log__ ("TSNNt662", $TSNNt662, 1607);
                                                                                               $TLE396 = $TSNNt661 * $TSNNt662; // 1658
                                                                                               __log__ ("TLE396", $TLE396, 1608);
                                                                                               $i = $TLE395 - $TLE396; // 1659
                                                                                               __log__ ("i", $i, 1609);
                                                                                               $TSNNt663 = $this->z; // 1660
                                                                                               __log__ ("TSNNt663", $TSNNt663, 1610);
                                                                                               $TSNNt664 = $v2->x; // 1661
                                                                                               __log__ ("TSNNt664", $TSNNt664, 1611);
                                                                                               $TLE397 = $TSNNt663 * $TSNNt664; // 1662
                                                                                               __log__ ("TLE397", $TLE397, 1612);
                                                                                               $TSNNt665 = $this->x; // 1663
                                                                                               __log__ ("TSNNt665", $TSNNt665, 1613);
                                                                                               $TSNNt666 = $v2->z; // 1664
                                                                                               __log__ ("TSNNt666", $TSNNt666, 1614);
                                                                                               $TLE398 = $TSNNt665 * $TSNNt666; // 1665
                                                                                               __log__ ("TLE398", $TLE398, 1615);
                                                                                               $j = $TLE397 - $TLE398; // 1666
                                                                                               __log__ ("j", $j, 1616);
                                                                                               $TSNNt667 = $this->x; // 1667
                                                                                               __log__ ("TSNNt667", $TSNNt667, 1617);
                                                                                               $TSNNt668 = $v2->y; // 1668
                                                                                               __log__ ("TSNNt668", $TSNNt668, 1618);
                                                                                               $TLE399 = $TSNNt667 * $TSNNt668; // 1669
                                                                                               __log__ ("TLE399", $TLE399, 1619);
                                                                                               $TSNNt669 = $this->y; // 1670
                                                                                               __log__ ("TSNNt669", $TSNNt669, 1620);
                                                                                               $TSNNt670 = $v2->x; // 1671
                                                                                               __log__ ("TSNNt670", $TSNNt670, 1621);
                                                                                               $TLE400 = $TSNNt669 * $TSNNt670; // 1672
                                                                                               __log__ ("TLE400", $TLE400, 1622);
                                                                                               $z = $TLE399 - $TLE400; // 1673
                                                                                               __log__ ("z", $z, 1623);
                                                                                               $TSNNt671 = $i; // 1674
                                                                                               __log__ ("TSNNt671", $TSNNt671, 1624);
                                                                                               $this->x = $TSNNt671; // 1675
                                                                                               $TSNNt672 = $j; // 1676
                                                                                               __log__ ("TSNNt672", $TSNNt672, 1626);
                                                                                               $this->y = $TSNNt672; // 1677
                                                                                               $TSNNt673 = $z; // 1678
                                                                                               __log__ ("TSNNt673", $TSNNt673, 1628);
                                                                                               $this->z = $TSNNt673; // 1679
                                                                                               return $this; // 1680
                                                                                           }
    public function k_mul ($k)/* Entry: 1681, Exit: 1682, Exception Exit: 1683 */ 
                                                                                 {
                                                                                     $TSNNt674 = $this->x; // 1684
                                                                                     __log__ ("TSNNt674", $TSNNt674, 1634);
                                                                                     $TLE401 = $TSNNt674 * $k; // 1685
                                                                                     __log__ ("TLE401", $TLE401, 1635);
                                                                                     $TSNNt675 = $TLE401; // 1686
                                                                                     __log__ ("TSNNt675", $TSNNt675, 1636);
                                                                                     $this->x = $TSNNt675; // 1687
                                                                                     $TSNNt676 = $this->y; // 1688
                                                                                     __log__ ("TSNNt676", $TSNNt676, 1638);
                                                                                     $TLE402 = $TSNNt676 * $k; // 1689
                                                                                     __log__ ("TLE402", $TLE402, 1639);
                                                                                     $TSNNt677 = $TLE402; // 1690
                                                                                     __log__ ("TSNNt677", $TSNNt677, 1640);
                                                                                     $this->y = $TSNNt677; // 1691
                                                                                     $TSNNt678 = $this->z; // 1692
                                                                                     __log__ ("TSNNt678", $TSNNt678, 1642);
                                                                                     $TLE403 = $TSNNt678 * $k; // 1693
                                                                                     __log__ ("TLE403", $TLE403, 1643);
                                                                                     $TSNNt679 = $TLE403; // 1694
                                                                                     __log__ ("TSNNt679", $TSNNt679, 1644);
                                                                                     $this->z = $TSNNt679; // 1695
                                                                                     return $this; // 1696
                                                                                 }
    public function k_div ($k)/* Entry: 1697, Exit: 1698, Exception Exit: 1699 */ 
                                                                                 {
                                                                                     $TSNNt680 = $this->x; // 1700
                                                                                     __log__ ("TSNNt680", $TSNNt680, 1650);
                                                                                     $TLE404 = $TSNNt680 / $k; // 1701
                                                                                     __log__ ("TLE404", $TLE404, 1651);
                                                                                     $TSNNt681 = $TLE404; // 1702
                                                                                     __log__ ("TSNNt681", $TSNNt681, 1652);
                                                                                     $this->x = $TSNNt681; // 1703
                                                                                     $TSNNt682 = $this->y; // 1704
                                                                                     __log__ ("TSNNt682", $TSNNt682, 1654);
                                                                                     $TLE405 = $TSNNt682 / $k; // 1705
                                                                                     __log__ ("TLE405", $TLE405, 1655);
                                                                                     $TSNNt683 = $TLE405; // 1706
                                                                                     __log__ ("TSNNt683", $TSNNt683, 1656);
                                                                                     $this->y = $TSNNt683; // 1707
                                                                                     $TSNNt684 = $this->z; // 1708
                                                                                     __log__ ("TSNNt684", $TSNNt684, 1658);
                                                                                     $TLE406 = $TSNNt684 / $k; // 1709
                                                                                     __log__ ("TLE406", $TLE406, 1659);
                                                                                     $TSNNt685 = $TLE406; // 1710
                                                                                     __log__ ("TSNNt685", $TSNNt685, 1660);
                                                                                     $this->z = $TSNNt685; // 1711
                                                                                     return $this; // 1712
                                                                                 }
    public function isnull ()/* Entry: 1713, Exit: 1714, Exception Exit: 1715 */ 
                                                                                {
                                                                                    $TLE407 = 0; // 1716
                                                                                    __log__ ("TLE407", $TLE407, 1666);
                                                                                    $TSNNt686 = $this->x; // 1717
                                                                                    __log__ ("TSNNt686", $TSNNt686, 1667);
                                                                                    $TLE22 = $TSNNt686 == $TLE407; // 1718
                                                                                    __log__ ("TLE22", $TLE22, 1668);
                                                                                    if ($TLE22){
                                                                                        $TLE408 = 0; // 1720
                                                                                        __log__ ("TLE408", $TLE408, 1670);
                                                                                        $TSNNt687 = $this->y; // 1721
                                                                                        __log__ ("TSNNt687", $TSNNt687, 1671);
                                                                                        $TEF23 = $TSNNt687 == $TLE408; // 1722
                                                                                        __log__ ("TEF23", $TEF23, 1672);
                                                                                    }
                                                                                    else {
                                                                                        $TEF23 = $TLE22; // 1723
                                                                                        __log__ ("TEF23", $TEF23, 1673);
                                                                                    }
                                                                                    $TLE24 = (bool) $TEF23; // 1724
                                                                                    __log__ ("TLE24", $TLE24, 1674);
                                                                                    if ($TLE24){
                                                                                        $TLE409 = 0; // 1726
                                                                                        __log__ ("TLE409", $TLE409, 1676);
                                                                                        $TSNNt688 = $this->z; // 1727
                                                                                        __log__ ("TSNNt688", $TSNNt688, 1677);
                                                                                        $TEF25 = $TSNNt688 == $TLE409; // 1728
                                                                                        __log__ ("TEF25", $TEF25, 1678);
                                                                                    }
                                                                                    else {
                                                                                        $TEF25 = $TLE24; // 1729
                                                                                        __log__ ("TEF25", $TEF25, 1679);
                                                                                    }
                                                                                    $TLE410 = (bool) $TEF25; // 1730
                                                                                    __log__ ("TLE410", $TLE410, 1680);
                                                                                    return $TLE410; // 1731
                                                                                }
    public static function reflectedvector (vector $i, vector $n)/* Entry: 1732, Exit: 1733, Exception Exit: 1734 */ 
                                                                                                                    {
                                                                                                                        $i->assertnormalized ();// /* , Call: 1737, Return: 1738, Exception Return: 1739, After: 1735, Exception After: 1736 */ method call
                                                                                                                        $n->assertnormalized ();// /* , Call: 1742, Return: 1743, Exception Return: 1744, After: 1740, Exception After: 1741 */ method call
                                                                                                                        $r = $i->klone ();// /* , Call: 1747, Return: 1748, Exception Return: 1749, After: 1745, Exception After: 1746 */ method call
                                                                                                                        __log__ ("r", $r, 1695);
                                                                                                                        $t = $n->klone ();// /* , Call: 1752, Return: 1753, Exception Return: 1754, After: 1750, Exception After: 1751 */ method call
                                                                                                                        __log__ ("t", $t, 1700);
                                                                                                                        $TLE411 = 0; // 1755
                                                                                                                        __log__ ("TLE411", $TLE411, 1705);
                                                                                                                        $TLE412 = 2; // 1756
                                                                                                                        __log__ ("TLE412", $TLE412, 1706);
                                                                                                                        $TLE413 = vector::dot ($r, $t);// /* , Call: 1759, Return: 1760, Exception Return: 1761, After: 1757, Exception After: 1758 */ static method call
                                                                                                                        __log__ ("TLE413", $TLE413, 1707);
                                                                                                                        $TLE414 = $TLE412 * $TLE413; // 1762
                                                                                                                        __log__ ("TLE414", $TLE414, 1712);
                                                                                                                        $TLE415 = $TLE411 - $TLE414; // 1763
                                                                                                                        __log__ ("TLE415", $TLE415, 1713);
                                                                                                                        $t->k_mul ($TLE415);// /* , Call: 1766, Return: 1767, Exception Return: 1768, After: 1764, Exception After: 1765 */ method call
                                                                                                                        $r->v_add ($t);// /* , Call: 1771, Return: 1772, Exception Return: 1773, After: 1769, Exception After: 1770 */ method call
                                                                                                                        $r->assertnormalized ();// /* , Call: 1776, Return: 1777, Exception Return: 1778, After: 1774, Exception After: 1775 */ method call
                                                                                                                        return $r; // 1779
                                                                                                                    }
}
class world { // "1780"
    protected $camera = null;
    protected $lights = array();
    protected $objects = array();
    protected $renderer = null;
    public function __construct ()/* Entry: 1783, Exit: 1784, Exception Exit: 1785 */ 
                                                                                     {
                                                                                         $TLE416 = 'memory_limit'; // 1786
                                                                                         __log__ ("TLE416", $TLE416, 1736);
                                                                                         $TLE417 = '2000M'; // 1787
                                                                                         __log__ ("TLE417", $TLE417, 1737);
                                                                                         ini_set ($TLE416, $TLE417); // "1788native call"
                                                                                         $TLE418 = 0; // 1789
                                                                                         __log__ ("TLE418", $TLE418, 1739);
                                                                                         mt_srand ($TLE418); // "1790native call"
                                                                                     }
    public function setcamera (camera $camera)/* Entry: 1791, Exit: 1792, Exception Exit: 1793 */ 
                                                                                                 {
                                                                                                     $TSNNt689 = $this->camera; // 1794
                                                                                                     __log__ ("TSNNt689", $TSNNt689, 1744);
                                                                                                     if ($TSNNt689){
                                                                                                         $TLE419 = 'Camera already set'; // 1796
                                                                                                         __log__ ("TLE419", $TLE419, 1746);
                                                                                                         $TLE420 = new exception ($TLE419);// /* , Call: 1799, Return: 1800, Exception Return: 1801, After: 1797, Exception After: 1798 */ constructor call
                                                                                                         __log__ ("TLE420", $TLE420, 1747);
                                                                                                         throw $TLE420; // 1802
                                                                                                     }
                                                                                                     else {
                                                                                                          // "1803 skip"
                                                                                                     }
                                                                                                     $TSNNt690 = $camera; // 1804
                                                                                                     __log__ ("TSNNt690", $TSNNt690, 1754);
                                                                                                     $this->camera = $TSNNt690; // 1805
                                                                                                     return $this; // 1806
                                                                                                 }
    public function getcamera ()/* Entry: 1807, Exit: 1808, Exception Exit: 1809 */ 
                                                                                   {
                                                                                       $TSNNt691 = $this->camera; // 1810
                                                                                       __log__ ("TSNNt691", $TSNNt691, 1760);
                                                                                       return $TSNNt691; // 1811
                                                                                   }
    public function setrenderer (renderer $renderer)/* Entry: 1812, Exit: 1813, Exception Exit: 1814 */ 
                                                                                                       {
                                                                                                           $TSNNt692 = $this->renderer; // 1815
                                                                                                           __log__ ("TSNNt692", $TSNNt692, 1765);
                                                                                                           if ($TSNNt692){
                                                                                                               $TLE421 = 'Renderer already set'; // 1817
                                                                                                               __log__ ("TLE421", $TLE421, 1767);
                                                                                                               $TLE422 = new exception ($TLE421);// /* , Call: 1820, Return: 1821, Exception Return: 1822, After: 1818, Exception After: 1819 */ constructor call
                                                                                                               __log__ ("TLE422", $TLE422, 1768);
                                                                                                               throw $TLE422; // 1823
                                                                                                           }
                                                                                                           else {
                                                                                                                // "1824 skip"
                                                                                                           }
                                                                                                           $TSNNt693 = $renderer; // 1825
                                                                                                           __log__ ("TSNNt693", $TSNNt693, 1775);
                                                                                                           $this->renderer = $TSNNt693; // 1826
                                                                                                           return $this; // 1827
                                                                                                       }
    public function addlight (light $light)/* Entry: 1828, Exit: 1829, Exception Exit: 1830 */ 
                                                                                              {
                                                                                                  $TSNNt694 = $this->lights; // 1831
                                                                                                  __log__ ("TSNNt694", $TSNNt694, 1781);
                                                                                                  $TSNNt694[] = $light; // 1832
                                                                                                  $this->lights = $TSNNt694; // 1833
                                                                                                  return $this; // 1834
                                                                                              }
    public function getlights ()/* Entry: 1835, Exit: 1836, Exception Exit: 1837 */ 
                                                                                   {
                                                                                       $TSNNt695 = $this->lights; // 1838
                                                                                       __log__ ("TSNNt695", $TSNNt695, 1788);
                                                                                       return $TSNNt695; // 1839
                                                                                   }
    public function addobject (object $obj)/* Entry: 1840, Exit: 1841, Exception Exit: 1842 */ 
                                                                                              {
                                                                                                  $TSNNt696 = $this->objects; // 1843
                                                                                                  __log__ ("TSNNt696", $TSNNt696, 1793);
                                                                                                  $TSNNt696[] = $obj; // 1844
                                                                                                  $this->objects = $TSNNt696; // 1845
                                                                                                  return $this; // 1846
                                                                                              }
    public function getobjects ()/* Entry: 1847, Exit: 1848, Exception Exit: 1849 */ 
                                                                                    {
                                                                                        $TSNNt697 = $this->objects; // 1850
                                                                                        __log__ ("TSNNt697", $TSNNt697, 1800);
                                                                                        return $TSNNt697; // 1851
                                                                                    }
    public function render ($file, $width = 400, $height = 225)/* Entry: 1852, Exit: 1853, Exception Exit: 1854 */ 
                                                                                                                  {
                                                                                                                      $TSNNt698 = $this->camera; // 1855
                                                                                                                      __log__ ("TSNNt698", $TSNNt698, 1805);
                                                                                                                      $TLE423 = !$TSNNt698; // 1856
                                                                                                                      __log__ ("TLE423", $TLE423, 1806);
                                                                                                                      if ($TLE423){
                                                                                                                          $TLE424 = 'You need to set a Camera'; // 1858
                                                                                                                          __log__ ("TLE424", $TLE424, 1808);
                                                                                                                          $TLE425 = new exception ($TLE424);// /* , Call: 1861, Return: 1862, Exception Return: 1863, After: 1859, Exception After: 1860 */ constructor call
                                                                                                                          __log__ ("TLE425", $TLE425, 1809);
                                                                                                                          throw $TLE425; // 1864
                                                                                                                      }
                                                                                                                      else {
                                                                                                                           // "1865 skip"
                                                                                                                      }
                                                                                                                      $TSNNt699 = $this->lights; // 1866
                                                                                                                      __log__ ("TSNNt699", $TSNNt699, 1816);
                                                                                                                      $TLE426 = !$TSNNt699; // 1867
                                                                                                                      __log__ ("TLE426", $TLE426, 1817);
                                                                                                                      if ($TLE426){
                                                                                                                          $TLE427 = 'You need one or more Lights'; // 1869
                                                                                                                          __log__ ("TLE427", $TLE427, 1819);
                                                                                                                          $TLE428 = new exception ($TLE427);// /* , Call: 1872, Return: 1873, Exception Return: 1874, After: 1870, Exception After: 1871 */ constructor call
                                                                                                                          __log__ ("TLE428", $TLE428, 1820);
                                                                                                                          throw $TLE428; // 1875
                                                                                                                      }
                                                                                                                      else {
                                                                                                                           // "1876 skip"
                                                                                                                      }
                                                                                                                      $TSNNt700 = $this->renderer; // 1877
                                                                                                                      __log__ ("TSNNt700", $TSNNt700, 1827);
                                                                                                                      $TLE429 = !$TSNNt700; // 1878
                                                                                                                      __log__ ("TLE429", $TLE429, 1828);
                                                                                                                      if ($TLE429){
                                                                                                                          $TLE430 = 'You need to set a Renderer'; // 1880
                                                                                                                          __log__ ("TLE430", $TLE430, 1830);
                                                                                                                          $TLE431 = new exception ($TLE430);// /* , Call: 1883, Return: 1884, Exception Return: 1885, After: 1881, Exception After: 1882 */ constructor call
                                                                                                                          __log__ ("TLE431", $TLE431, 1831);
                                                                                                                          throw $TLE431; // 1886
                                                                                                                      }
                                                                                                                      else {
                                                                                                                           // "1887 skip"
                                                                                                                      }
                                                                                                                      $TLE432 = 'gd_info'; // 1888
                                                                                                                      __log__ ("TLE432", $TLE432, 1838);
                                                                                                                      $TLE433 = function_exists ($TLE432); // "1889native call"
                                                                                                                      __log__ ("TLE433", $TLE433, 1839);
                                                                                                                      if ($TLE433){
                                                                                                                          $img = new gdencoder ($width, $height);// /* , Call: 1893, Return: 1894, Exception Return: 1895, After: 1891, Exception After: 1892 */ constructor call
                                                                                                                          __log__ ("img", $img, 1841);
                                                                                                                      }
                                                                                                                      else {
                                                                                                                          $img = new bmpencoder ($width, $height);// /* , Call: 1898, Return: 1899, Exception Return: 1900, After: 1896, Exception After: 1897 */ constructor call
                                                                                                                          __log__ ("img", $img, 1846);
                                                                                                                      }
                                                                                                                      $TSNNt701 = $this->renderer; // 1901
                                                                                                                      __log__ ("TSNNt701", $TSNNt701, 1851);
                                                                                                                      $TSNNt701->render ($this, $img, $width, $height);// /* , Call: 1904, Return: 1905, Exception Return: 1906, After: 1902, Exception After: 1903 */ method call
                                                                                                                      $img->writefile ($file);// /* , Call: 1909, Return: 1910, Exception Return: 1911, After: 1907, Exception After: 1908 */ method call
                                                                                                                  }
}
$TLE434 = new camera ();// /* , Call: 1914, Return: 1915, Exception Return: 1916, After: 1912, Exception After: 1913 */ constructor call
__log__ ("TLE434", $TLE434, 1862);
$TLE435 = id ($TLE434);// /* , Call: 1919, Return: 1920, Exception Return: 1921, After: 1917, Exception After: 1918 */ function call
__log__ ("TLE435", $TLE435, 1867);
$TLE436 = 10; // 1922
__log__ ("TLE436", $TLE436, 1872);
$TLE437 = 30; // 1923
__log__ ("TLE437", $TLE437, 1873);
$TLE438 = -100; // 1924
__log__ ("TLE438", $TLE438, 1874);
$TLE439 = new vector ($TLE436, $TLE437, $TLE438);// /* , Call: 1927, Return: 1928, Exception Return: 1929, After: 1925, Exception After: 1926 */ constructor call
__log__ ("TLE439", $TLE439, 1875);
$TLE440 = $TLE435->setposition ($TLE439);// /* , Call: 1932, Return: 1933, Exception Return: 1934, After: 1930, Exception After: 1931 */ method call
__log__ ("TLE440", $TLE440, 1880);
$TLE441 = 0; // 1935
__log__ ("TLE441", $TLE441, 1885);
$TLE442 = 10; // 1936
__log__ ("TLE442", $TLE442, 1886);
$TLE443 = 0; // 1937
__log__ ("TLE443", $TLE443, 1887);
$TLE444 = new vector ($TLE441, $TLE442, $TLE443);// /* , Call: 1940, Return: 1941, Exception Return: 1942, After: 1938, Exception After: 1939 */ constructor call
__log__ ("TLE444", $TLE444, 1888);
$camera = $TLE440->setlookat ($TLE444);// /* , Call: 1945, Return: 1946, Exception Return: 1947, After: 1943, Exception After: 1944 */ method call
__log__ ("camera", $camera, 1893);
$TLE445 = new pointlight ();// /* , Call: 1950, Return: 1951, Exception Return: 1952, After: 1948, Exception After: 1949 */ constructor call
__log__ ("TLE445", $TLE445, 1898);
$TLE446 = id ($TLE445);// /* , Call: 1955, Return: 1956, Exception Return: 1957, After: 1953, Exception After: 1954 */ function call
__log__ ("TLE446", $TLE446, 1903);
$TLE447 = 100; // 1958
__log__ ("TLE447", $TLE447, 1908);
$TLE448 = 100; // 1959
__log__ ("TLE448", $TLE448, 1909);
$TLE449 = -100; // 1960
__log__ ("TLE449", $TLE449, 1910);
$TLE450 = new vector ($TLE447, $TLE448, $TLE449);// /* , Call: 1963, Return: 1964, Exception Return: 1965, After: 1961, Exception After: 1962 */ constructor call
__log__ ("TLE450", $TLE450, 1911);
$light = $TLE446->setposition ($TLE450);// /* , Call: 1968, Return: 1969, Exception Return: 1970, After: 1966, Exception After: 1967 */ method call
__log__ ("light", $light, 1916);
$TLE451 = 'red sphere'; // 1971
__log__ ("TLE451", $TLE451, 1921);
$TLE452 = new sphere ($TLE451);// /* , Call: 1974, Return: 1975, Exception Return: 1976, After: 1972, Exception After: 1973 */ constructor call
__log__ ("TLE452", $TLE452, 1922);
$TLE453 = id ($TLE452);// /* , Call: 1979, Return: 1980, Exception Return: 1981, After: 1977, Exception After: 1978 */ function call
__log__ ("TLE453", $TLE453, 1927);
$TLE454 = 0; // 1982
__log__ ("TLE454", $TLE454, 1932);
$TLE455 = 0; // 1983
__log__ ("TLE455", $TLE455, 1933);
$TLE456 = 0; // 1984
__log__ ("TLE456", $TLE456, 1934);
$TLE457 = new vector ($TLE454, $TLE455, $TLE456);// /* , Call: 1987, Return: 1988, Exception Return: 1989, After: 1985, Exception After: 1986 */ constructor call
__log__ ("TLE457", $TLE457, 1935);
$TLE458 = $TLE453->setposition ($TLE457);// /* , Call: 1992, Return: 1993, Exception Return: 1994, After: 1990, Exception After: 1991 */ method call
__log__ ("TLE458", $TLE458, 1940);
$TLE459 = 10; // 1995
__log__ ("TLE459", $TLE459, 1945);
$TLE460 = $TLE458->setradius ($TLE459);// /* , Call: 1998, Return: 1999, Exception Return: 2000, After: 1996, Exception After: 1997 */ method call
__log__ ("TLE460", $TLE460, 1946);
$TSNNt702 = color::$red; // 2001
__log__ ("TSNNt702", $TSNNt702, 1951);
$sphere = $TLE460->setcolor ($TSNNt702);// /* , Call: 2004, Return: 2005, Exception Return: 2006, After: 2002, Exception After: 2003 */ method call
__log__ ("sphere", $sphere, 1952);
$TLE461 = 'green sphere'; // 2007
__log__ ("TLE461", $TLE461, 1957);
$TLE462 = new sphere ($TLE461);// /* , Call: 2010, Return: 2011, Exception Return: 2012, After: 2008, Exception After: 2009 */ constructor call
__log__ ("TLE462", $TLE462, 1958);
$TLE463 = id ($TLE462);// /* , Call: 2015, Return: 2016, Exception Return: 2017, After: 2013, Exception After: 2014 */ function call
__log__ ("TLE463", $TLE463, 1963);
$TLE464 = 0; // 2018
__log__ ("TLE464", $TLE464, 1968);
$TLE465 = 18; // 2019
__log__ ("TLE465", $TLE465, 1969);
$TLE466 = 0; // 2020
__log__ ("TLE466", $TLE466, 1970);
$TLE467 = new vector ($TLE464, $TLE465, $TLE466);// /* , Call: 2023, Return: 2024, Exception Return: 2025, After: 2021, Exception After: 2022 */ constructor call
__log__ ("TLE467", $TLE467, 1971);
$TLE468 = $TLE463->setposition ($TLE467);// /* , Call: 2028, Return: 2029, Exception Return: 2030, After: 2026, Exception After: 2027 */ method call
__log__ ("TLE468", $TLE468, 1976);
$TLE469 = 10; // 2031
__log__ ("TLE469", $TLE469, 1981);
$TLE470 = $TLE468->setradius ($TLE469);// /* , Call: 2034, Return: 2035, Exception Return: 2036, After: 2032, Exception After: 2033 */ method call
__log__ ("TLE470", $TLE470, 1982);
$TSNNt703 = color::$green; // 2037
__log__ ("TSNNt703", $TSNNt703, 1987);
$sphere2 = $TLE470->setcolor ($TSNNt703);// /* , Call: 2040, Return: 2041, Exception Return: 2042, After: 2038, Exception After: 2039 */ method call
__log__ ("sphere2", $sphere2, 1988);
$TLE471 = 'floor'; // 2043
__log__ ("TLE471", $TLE471, 1993);
$TLE472 = new plane ($TLE471);// /* , Call: 2046, Return: 2047, Exception Return: 2048, After: 2044, Exception After: 2045 */ constructor call
__log__ ("TLE472", $TLE472, 1994);
$TLE473 = id ($TLE472);// /* , Call: 2051, Return: 2052, Exception Return: 2053, After: 2049, Exception After: 2050 */ function call
__log__ ("TLE473", $TLE473, 1999);
$TLE474 = 0; // 2054
__log__ ("TLE474", $TLE474, 2004);
$TLE475 = -10; // 2055
__log__ ("TLE475", $TLE475, 2005);
$TLE476 = 0; // 2056
__log__ ("TLE476", $TLE476, 2006);
$TLE477 = new vector ($TLE474, $TLE475, $TLE476);// /* , Call: 2059, Return: 2060, Exception Return: 2061, After: 2057, Exception After: 2058 */ constructor call
__log__ ("TLE477", $TLE477, 2007);
$TLE478 = $TLE473->setposition ($TLE477);// /* , Call: 2064, Return: 2065, Exception Return: 2066, After: 2062, Exception After: 2063 */ method call
__log__ ("TLE478", $TLE478, 2012);
$TLE479 = 0; // 2067
__log__ ("TLE479", $TLE479, 2017);
$TLE480 = 1; // 2068
__log__ ("TLE480", $TLE480, 2018);
$TLE481 = 0; // 2069
__log__ ("TLE481", $TLE481, 2019);
$TLE482 = new vector ($TLE479, $TLE480, $TLE481);// /* , Call: 2072, Return: 2073, Exception Return: 2074, After: 2070, Exception After: 2071 */ constructor call
__log__ ("TLE482", $TLE482, 2020);
$TLE483 = $TLE478->setnormal ($TLE482);// /* , Call: 2077, Return: 2078, Exception Return: 2079, After: 2075, Exception After: 2076 */ method call
__log__ ("TLE483", $TLE483, 2025);
$TSNNt704 = color::$blue; // 2080
__log__ ("TSNNt704", $TSNNt704, 2030);
$plane = $TLE483->setcolor ($TSNNt704);// /* , Call: 2083, Return: 2084, Exception Return: 2085, After: 2081, Exception After: 2082 */ method call
__log__ ("plane", $plane, 2031);
$TLE484 = new phongrenderer ();// /* , Call: 2088, Return: 2089, Exception Return: 2090, After: 2086, Exception After: 2087 */ constructor call
__log__ ("TLE484", $TLE484, 2036);
$TLE485 = id ($TLE484);// /* , Call: 2093, Return: 2094, Exception Return: 2095, After: 2091, Exception After: 2092 */ function call
__log__ ("TLE485", $TLE485, 2041);
$TLE486 = true; // 2096
__log__ ("TLE486", $TLE486, 2046);
$renderer = $TLE485->setantialias ($TLE486);// /* , Call: 2099, Return: 2100, Exception Return: 2101, After: 2097, Exception After: 2098 */ method call
__log__ ("renderer", $renderer, 2047);
$TLE487 = new world ();// /* , Call: 2104, Return: 2105, Exception Return: 2106, After: 2102, Exception After: 2103 */ constructor call
__log__ ("TLE487", $TLE487, 2052);
$TLE488 = id ($TLE487);// /* , Call: 2109, Return: 2110, Exception Return: 2111, After: 2107, Exception After: 2108 */ function call
__log__ ("TLE488", $TLE488, 2057);
$TLE489 = $TLE488->setcamera ($camera);// /* , Call: 2114, Return: 2115, Exception Return: 2116, After: 2112, Exception After: 2113 */ method call
__log__ ("TLE489", $TLE489, 2062);
$TLE490 = $TLE489->addobject ($sphere);// /* , Call: 2119, Return: 2120, Exception Return: 2121, After: 2117, Exception After: 2118 */ method call
__log__ ("TLE490", $TLE490, 2067);
$TLE491 = $TLE490->addobject ($sphere2);// /* , Call: 2124, Return: 2125, Exception Return: 2126, After: 2122, Exception After: 2123 */ method call
__log__ ("TLE491", $TLE491, 2072);
$TLE492 = $TLE491->addobject ($plane);// /* , Call: 2129, Return: 2130, Exception Return: 2131, After: 2127, Exception After: 2128 */ method call
__log__ ("TLE492", $TLE492, 2077);
$TLE493 = $TLE492->addlight ($light);// /* , Call: 2134, Return: 2135, Exception Return: 2136, After: 2132, Exception After: 2133 */ method call
__log__ ("TLE493", $TLE493, 2082);
$world = $TLE493->setrenderer ($renderer);// /* , Call: 2139, Return: 2140, Exception Return: 2141, After: 2137, Exception After: 2138 */ method call
__log__ ("world", $world, 2087);
$TLE494 = 'sample'; // 2142
__log__ ("TLE494", $TLE494, 2092);
$TLE495 = 10; // 2143
__log__ ("TLE495", $TLE495, 2093);
$TLE496 = 20; // 2144
__log__ ("TLE496", $TLE496, 2094);
$world->render ($TLE494, $TLE495, $TLE496);// /* , Call: 2147, Return: 2148, Exception Return: 2149, After: 2145, Exception After: 2146 */ method call
/*
Native classes and their program labels
class directoryiterator (2151 )
class domdocument (2154 )
    load 2156 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}}})
class domelement (2159 )
class domnode (2162 )
class domnodelist (2165 )
    item 2167 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeObject "domnode"]}})
class exception (2170 )
    getmessage 2172 (TValue {value = fromList [NativeString]})
    getprevious 2174 (TValue {value = fromList [NativeObject "exception"]})
    getcode 2176 (TValue {value = fromList [NativeString,NativeInteger]})
    getfile 2178 (TValue {value = fromList [NativeString]})
    getline 2180 (TValue {value = fromList [NativeInteger]})
    gettraceasstring 2182 (TValue {value = fromList [NativeString]})
    __tostring 2184 (TValue {value = fromList [NativeString]})
    __clone 2186 (TValue {value = fromList [NativeNull]})
class filesystemiterator (2189 )
class invalidargumentexception (2192 )
class logicexception (2195 )
class outofboundsexception (2198 )
class recursivedirectoryiterator (2201 )
class recursiveiteratoriterator (2204 )
class reflectionclass (2207 )
    getname 2209 (TValue {value = fromList [NativeString]})
class runtimeexception (2212 )
class simplexmlelement (2215 )
    asxml 2217 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeString,NativeBoolean]}})
    attributes 2219 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeBoolean]}, right = TValue {value = fromList [NativeObject "simplexmlelement"]}}})
class splfileinfo (2222 )
    getatime 2224 (TValue {value = fromList [NativeInteger]})
    getbasename 2226 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeString]}})
    getctime 2228 (TValue {value = fromList [NativeInteger]})
    getextension 2230 (TValue {value = fromList [NativeString]})
    getfileinfo 2232 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeObject "splfileinfo"]}})
    getfilename 2234 (TValue {value = fromList [NativeString]})
    getgroup 2236 (TValue {value = fromList [NativeInteger]})
    getinode 2238 (TValue {value = fromList [NativeInteger]})
    getlinktarget 2240 (TValue {value = fromList [NativeString]})
    getmtime 2242 (TValue {value = fromList [NativeInteger]})
    getowner 2244 (TValue {value = fromList [NativeInteger]})
    getpath 2246 (TValue {value = fromList [NativeString]})
    getpathinfo 2248 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeObject "splfileinfo"]}})
    getpathname 2250 (TValue {value = fromList [NativeString]})
    getperms 2252 (TValue {value = fromList [NativeInteger]})
    getrealpath 2254 (TValue {value = fromList [NativeString]})
    getsize 2256 (TValue {value = fromList [NativeInteger]})
    gettype 2258 (TValue {value = fromList [NativeString]})
    isdir 2260 (TValue {value = fromList [NativeBoolean]})
    isexecutable 2262 (TValue {value = fromList [NativeBoolean]})
    isfile 2264 (TValue {value = fromList [NativeBoolean]})
    islink 2266 (TValue {value = fromList [NativeBoolean]})
    isreadable 2268 (TValue {value = fromList [NativeBoolean]})
    iswritable 2270 (TValue {value = fromList [NativeBoolean]})
    openFile 2272 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeBoolean]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeResource File]}, right = TValue {value = fromList [NativeObject "splfileobject"]}}}})
    setfileclass 2274 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeNull]}})
    setinfoclass 2276 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeNull]}})
    __toString 2278 (TValue {value = fromList [NativeString]})
class ziparchive (2281 )
    addemptydir 2283 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    addfile 2285 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}}}}})
    addfromstring 2287 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    addglob 2289 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeBoolean])]}, right = TValue {value = fromList [NativeBoolean]}}}})
    addpattern 2291 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeBoolean])]}, right = TValue {value = fromList [NativeBoolean]}}}})
    close 2293 (TValue {value = fromList [NativeBoolean]})
    deleteindex 2295 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}})
    deletename 2297 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    extractto 2299 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString,NativeArray (fromList [NativeInteger]) (fromList [NativeString])]}, right = TValue {value = fromList [NativeBoolean]}}})
    getarchivecomment 2301 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}})
    getcommentindex 2303 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getcommentname 2305 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getfromindex 2307 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}}})
    getfromname 2309 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}}})
    getnameindex 2311 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getstatusstring 2313 (TValue {value = fromList [NativeString]})
    getstream 2315 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeResource File]}})
    locatename 2317 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeInteger]}}})
    open 2319 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean,NativeInteger]}}})
    renameindex 2321 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    renamename 2323 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    setarchivecomment 2325 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    setcommentindex 2327 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    setcommentname 2329 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    statindex 2331 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeInteger])]}}})
    statname 2333 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeFalse,NativeArray (fromList [NativeString]) (fromList [NativeString,NativeInteger])]}}})
    unchangeall 2335 (TValue {value = fromList [NativeBoolean]})
    unchangearchive 2337 (TValue {value = fromList [NativeBoolean]})
    unchangeindex 2339 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}})
    unchangename 2341 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
*/
?>
