<?php
function __log__ ($var, $value, $label)  // "ln: 5, lx: 6, lxe: 7"
{
    $type = gettype ($value);// /* , Call: 10, Return: 11, Exception Return: 12, After: 8, Exception After: 9 */ function call
    $cmp = "object"; // 13
    $is_object = $type == $cmp; // 14
    $open = "["; // 15
    $close = "]"; // 16
    if ($is_object){
        $clazz = get_class ($value);// /* , Call: 20, Return: 21, Exception Return: 22, After: 18, Exception After: 19 */ function call
        $object = "object"; // 23
        $type = $object . $open; // 24
        $type = $type . $clazz; // 25
        $type = $type . $close; // 26
    }
    else {
         // "27 skip"
    }
    $cmp = "resource"; // 28
    $is_resource = $type == $cmp; // 29
    if ($is_resource){
        $resourcetype = get_resource_type ($value);// /* , Call: 33, Return: 34, Exception Return: 35, After: 31, Exception After: 32 */ function call
        $resource = "resource"; // 36
        $type = $resource . $open; // 37
        $type = $type . $resourcetype; // 38
        $type = $type . $close; // 39
    }
    else {
         // "40 skip"
    }
    $file = "log.txt"; // 41
    $newline = "\n"; // 42
    $flags = FILE_APPEND; // 43
    $colon = ":"; // 44
    $line = $label . $colon; // 45
    $line = $line . $var; // 46
    $line = $line . $colon; // 47
    $line = $line . $type; // 48
    $line = $line . $newline; // 49
    file_put_contents ($file, $line, $flags);// /* , Call: 52, Return: 53, Exception Return: 54, After: 50, Exception After: 51 */ function call
}
 // "55 skip"
class argumenterror extends exception { // "56"
    public function __construct ()/* Entry: 57, Exit: 58, Exception Exit: 59 */ 
                                                                               {
                                                                                   $TLE79 = __CLASS__; // 60
                                                                                   __log__ ("TLE79", $TLE79, 10);
                                                                                   exception::__construct ($TLE79);// /* , Call: 63, Return: 64, Exception Return: 65, After: 61, Exception After: 62 */ resolved method call
                                                                               }
}
class containeremptyexception extends exception { // "66"
    public function __construct ()/* Entry: 67, Exit: 68, Exception Exit: 69 */ 
                                                                               {
                                                                                   $TLE80 = __CLASS__; // 70
                                                                                   __log__ ("TLE80", $TLE80, 20);
                                                                                   exception::__construct ($TLE80);// /* , Call: 73, Return: 74, Exception Return: 75, After: 71, Exception After: 72 */ resolved method call
                                                                               }
}
class containerfullexception extends exception { // "76"
    public function __construct ()/* Entry: 77, Exit: 78, Exception Exit: 79 */ 
                                                                               {
                                                                                   $TLE81 = __CLASS__; // 80
                                                                                   __log__ ("TLE81", $TLE81, 30);
                                                                                   exception::__construct ($TLE81);// /* , Call: 83, Return: 84, Exception Return: 85, After: 81, Exception After: 82 */ resolved method call
                                                                               }
}
class indexerror extends exception { // "86"
    public function __construct ()/* Entry: 87, Exit: 88, Exception Exit: 89 */ 
                                                                               {
                                                                                   $TLE82 = __CLASS__; // 90
                                                                                   __log__ ("TLE82", $TLE82, 40);
                                                                                   exception::__construct ($TLE82);// /* , Call: 93, Return: 94, Exception Return: 95, After: 91, Exception After: 92 */ resolved method call
                                                                               }
}
class methodnotimplementedexception extends exception { // "96"
    public function __construct ()/* Entry: 97, Exit: 98, Exception Exit: 99 */ 
                                                                               {
                                                                                   $TLE83 = __CLASS__; // 100
                                                                                   __log__ ("TLE83", $TLE83, 50);
                                                                                   exception::__construct ($TLE83);// /* , Call: 103, Return: 104, Exception Return: 105, After: 101, Exception After: 102 */ resolved method call
                                                                               }
}
class typeerror extends exception { // "106"
    public function __construct ()/* Entry: 107, Exit: 108, Exception Exit: 109 */ 
                                                                                  {
                                                                                      $TLE84 = __CLASS__; // 110
                                                                                      __log__ ("TLE84", $TLE84, 60);
                                                                                      exception::__construct ($TLE84);// /* , Call: 113, Return: 114, Exception Return: 115, After: 111, Exception After: 112 */ resolved method call
                                                                                  }
}
class stateerror extends exception { // "116"
    public function __construct ()/* Entry: 117, Exit: 118, Exception Exit: 119 */ 
                                                                                  {
                                                                                      $TLE85 = __CLASS__; // 120
                                                                                      __log__ ("TLE85", $TLE85, 70);
                                                                                      exception::__construct ($TLE85);// /* , Call: 123, Return: 124, Exception Return: 125, After: 121, Exception After: 122 */ resolved method call
                                                                                  }
}
class illegaloperationexception extends exception { // "126"
    public function __construct ()/* Entry: 127, Exit: 128, Exception Exit: 129 */ 
                                                                                  {
                                                                                      $TLE86 = __CLASS__; // 130
                                                                                      __log__ ("TLE86", $TLE86, 80);
                                                                                      exception::__construct ($TLE86);// /* , Call: 133, Return: 134, Exception Return: 135, After: 131, Exception After: 132 */ resolved method call
                                                                                  }
}
interface iobject {
    public function getid ()/* Entry: 136, Exit: 137, Exception Exit: 138 */ 
                                                                            ;
    public function gethashcode ()/* Entry: 139, Exit: 140, Exception Exit: 141 */ 
                                                                                  ;
    public function getclass ()/* Entry: 142, Exit: 143, Exception Exit: 144 */ 
                                                                               ;
}
function hash_ ($item)  // "ln: 145, lx: 146, lxe: 147"
{
    $type = gettype ($item); // "148native call"
    __log__ ("type", $type, 98);
    $TLE87 = 'object'; // 149
    __log__ ("TLE87", $TLE87, 99);
    $TLE88 = $type == $TLE87; // 150
    __log__ ("TLE88", $TLE88, 100);
    if ($TLE88){
        $TLE89 = $item->gethashcode ();// /* , Call: 154, Return: 155, Exception Return: 156, After: 152, Exception After: 153 */ method call
        __log__ ("TLE89", $TLE89, 102);
        return $TLE89; // 157
    }
    else {
        $TLE90 = 'NULL'; // 158
        __log__ ("TLE90", $TLE90, 108);
        $TLE91 = $type == $TLE90; // 159
        __log__ ("TLE91", $TLE91, 109);
        if ($TLE91){
            $TLE92 = 0; // 161
            __log__ ("TLE92", $TLE92, 111);
            return $TLE92; // 162
        }
        else {
            $TLE93 = new argumenterror ();// /* , Call: 165, Return: 166, Exception Return: 167, After: 163, Exception After: 164 */ constructor call
            __log__ ("TLE93", $TLE93, 113);
            throw $TLE93; // 168
        }
    }
}
abstract class abstractobject implements iobject { // "169"
    public function __construct ()/* Entry: 170, Exit: 171, Exception Exit: 172 */ 
                                                                                  {
                                                                                       // "173 skip"
                                                                                  }
    public function getid ()/* Entry: 174, Exit: 175, Exception Exit: 176 */ 
                                                                            {
                                                                                $TLE94 = '/^Object id #(\d*)$/'; // 177
                                                                                __log__ ("TLE94", $TLE94, 127);
                                                                                $TLE95 = strval ($this); // "178native call"
                                                                                __log__ ("TLE95", $TLE95, 128);
                                                                                preg_match ($TLE94, $TLE95, $matches); // "179native call"
                                                                                $TLE96 = 1; // 180
                                                                                __log__ ("TLE96", $TLE96, 130);
                                                                                $TSNNi823 = $matches[$TLE96]; // 181
                                                                                __log__ ("TSNNi823", $TSNNi823, 131);
                                                                                $TLE97 = intval ($TSNNi823); // "182native call"
                                                                                __log__ ("TLE97", $TLE97, 132);
                                                                                return $TLE97; // 183
                                                                            }
    public function getclass ()/* Entry: 184, Exit: 185, Exception Exit: 186 */ 
                                                                               {
                                                                                   $TLE98 = get_class ($this); // "187native call"
                                                                                   __log__ ("TLE98", $TLE98, 137);
                                                                                   $TLE99 = new reflectionclass ($TLE98);// /* , Call: 190, Return: 191, Exception Return: 192, After: 188, Exception After: 189 */ constructor call
                                                                                   __log__ ("TLE99", $TLE99, 138);
                                                                                   return $TLE99; // 193
                                                                               }
    public function gethashcode ()/* Entry: 194, Exit: 195, Exception Exit: 196 */ 
                                                                                  {
                                                                                      $TLE100 = $this->getid ();// /* , Call: 199, Return: 200, Exception Return: 201, After: 197, Exception After: 198 */ method call
                                                                                      __log__ ("TLE100", $TLE100, 147);
                                                                                      return $TLE100; // 202
                                                                                  }
    public abstract function __tostring ()/* Entry: 203, Exit: 204, Exception Exit: 205 */;
}
interface icomparable {
    public function compare (icomparable $object)/* Entry: 206, Exit: 207, Exception Exit: 208 */ 
                                                                                                 ;
    public function eq (icomparable $object)/* Entry: 209, Exit: 210, Exception Exit: 211 */ 
                                                                                            ;
    public function ne (icomparable $object)/* Entry: 212, Exit: 213, Exception Exit: 214 */ 
                                                                                            ;
    public function lt (icomparable $object)/* Entry: 215, Exit: 216, Exception Exit: 217 */ 
                                                                                            ;
    public function le (icomparable $object)/* Entry: 218, Exit: 219, Exception Exit: 220 */ 
                                                                                            ;
    public function gt (icomparable $object)/* Entry: 221, Exit: 222, Exception Exit: 223 */ 
                                                                                            ;
    public function ge (icomparable $object)/* Entry: 224, Exit: 225, Exception Exit: 226 */ 
                                                                                            ;
}
function eq ($left, $right)  // "ln: 227, lx: 228, lxe: 229"
{
    $TLE101 = gettype ($left); // "230native call"
    __log__ ("TLE101", $TLE101, 180);
    $TLE102 = 'object'; // 231
    __log__ ("TLE102", $TLE102, 181);
    $TLE26 = $TLE101 == $TLE102; // 232
    __log__ ("TLE26", $TLE26, 182);
    if ($TLE26){
        $TLE103 = gettype ($right); // "234native call"
        __log__ ("TLE103", $TLE103, 184);
        $TLE104 = 'object'; // 235
        __log__ ("TLE104", $TLE104, 185);
        $TEF27 = $TLE103 == $TLE104; // 236
        __log__ ("TEF27", $TEF27, 186);
    }
    else {
        $TEF27 = $TLE26; // 237
        __log__ ("TEF27", $TEF27, 187);
    }
    $TLE105 = (bool) $TEF27; // 238
    __log__ ("TLE105", $TLE105, 188);
    if ($TLE105){
        $TLE106 = $left->eq ($right);// /* , Call: 242, Return: 243, Exception Return: 244, After: 240, Exception After: 241 */ method call
        __log__ ("TLE106", $TLE106, 190);
        return $TLE106; // 245
    }
    else {
        $TLE107 = $left == $right; // 246
        __log__ ("TLE107", $TLE107, 196);
        return $TLE107; // 247
    }
}
function ne ($left, $right)  // "ln: 248, lx: 249, lxe: 250"
{
    $TLE108 = gettype ($left); // "251native call"
    __log__ ("TLE108", $TLE108, 201);
    $TLE109 = 'object'; // 252
    __log__ ("TLE109", $TLE109, 202);
    $TLE28 = $TLE108 == $TLE109; // 253
    __log__ ("TLE28", $TLE28, 203);
    if ($TLE28){
        $TLE110 = gettype ($right); // "255native call"
        __log__ ("TLE110", $TLE110, 205);
        $TLE111 = 'object'; // 256
        __log__ ("TLE111", $TLE111, 206);
        $TEF29 = $TLE110 == $TLE111; // 257
        __log__ ("TEF29", $TEF29, 207);
    }
    else {
        $TEF29 = $TLE28; // 258
        __log__ ("TEF29", $TEF29, 208);
    }
    $TLE112 = (bool) $TEF29; // 259
    __log__ ("TLE112", $TLE112, 209);
    if ($TLE112){
        $TLE113 = $left->ne ($right);// /* , Call: 263, Return: 264, Exception Return: 265, After: 261, Exception After: 262 */ method call
        __log__ ("TLE113", $TLE113, 211);
        return $TLE113; // 266
    }
    else {
        $TLE114 = $left != $right; // 267
        __log__ ("TLE114", $TLE114, 217);
        return $TLE114; // 268
    }
}
function gt ($left, $right)  // "ln: 269, lx: 270, lxe: 271"
{
    $TLE115 = gettype ($left); // "272native call"
    __log__ ("TLE115", $TLE115, 222);
    $TLE116 = 'object'; // 273
    __log__ ("TLE116", $TLE116, 223);
    $TLE30 = $TLE115 == $TLE116; // 274
    __log__ ("TLE30", $TLE30, 224);
    if ($TLE30){
        $TLE117 = gettype ($right); // "276native call"
        __log__ ("TLE117", $TLE117, 226);
        $TLE118 = 'object'; // 277
        __log__ ("TLE118", $TLE118, 227);
        $TEF31 = $TLE117 == $TLE118; // 278
        __log__ ("TEF31", $TEF31, 228);
    }
    else {
        $TEF31 = $TLE30; // 279
        __log__ ("TEF31", $TEF31, 229);
    }
    $TLE119 = (bool) $TEF31; // 280
    __log__ ("TLE119", $TLE119, 230);
    if ($TLE119){
        $TLE120 = $left->gt ($right);// /* , Call: 284, Return: 285, Exception Return: 286, After: 282, Exception After: 283 */ method call
        __log__ ("TLE120", $TLE120, 232);
        return $TLE120; // 287
    }
    else {
        $TLE121 = $right < $left; // 288
        __log__ ("TLE121", $TLE121, 238);
        return $TLE121; // 289
    }
}
function ge ($left, $right)  // "ln: 290, lx: 291, lxe: 292"
{
    $TLE122 = gettype ($left); // "293native call"
    __log__ ("TLE122", $TLE122, 243);
    $TLE123 = 'object'; // 294
    __log__ ("TLE123", $TLE123, 244);
    $TLE32 = $TLE122 == $TLE123; // 295
    __log__ ("TLE32", $TLE32, 245);
    if ($TLE32){
        $TLE124 = gettype ($right); // "297native call"
        __log__ ("TLE124", $TLE124, 247);
        $TLE125 = 'object'; // 298
        __log__ ("TLE125", $TLE125, 248);
        $TEF33 = $TLE124 == $TLE125; // 299
        __log__ ("TEF33", $TEF33, 249);
    }
    else {
        $TEF33 = $TLE32; // 300
        __log__ ("TEF33", $TEF33, 250);
    }
    $TLE126 = (bool) $TEF33; // 301
    __log__ ("TLE126", $TLE126, 251);
    if ($TLE126){
        $TLE127 = $left->ge ($right);// /* , Call: 305, Return: 306, Exception Return: 307, After: 303, Exception After: 304 */ method call
        __log__ ("TLE127", $TLE127, 253);
        return $TLE127; // 308
    }
    else {
        $TLE128 = $right <= $left; // 309
        __log__ ("TLE128", $TLE128, 259);
        return $TLE128; // 310
    }
}
function lt ($left, $right)  // "ln: 311, lx: 312, lxe: 313"
{
    $TLE129 = gettype ($left); // "314native call"
    __log__ ("TLE129", $TLE129, 264);
    $TLE130 = 'object'; // 315
    __log__ ("TLE130", $TLE130, 265);
    $TLE34 = $TLE129 == $TLE130; // 316
    __log__ ("TLE34", $TLE34, 266);
    if ($TLE34){
        $TLE131 = gettype ($right); // "318native call"
        __log__ ("TLE131", $TLE131, 268);
        $TLE132 = 'object'; // 319
        __log__ ("TLE132", $TLE132, 269);
        $TEF35 = $TLE131 == $TLE132; // 320
        __log__ ("TEF35", $TEF35, 270);
    }
    else {
        $TEF35 = $TLE34; // 321
        __log__ ("TEF35", $TEF35, 271);
    }
    $TLE133 = (bool) $TEF35; // 322
    __log__ ("TLE133", $TLE133, 272);
    if ($TLE133){
        $TLE134 = $left->lt ($right);// /* , Call: 326, Return: 327, Exception Return: 328, After: 324, Exception After: 325 */ method call
        __log__ ("TLE134", $TLE134, 274);
        return $TLE134; // 329
    }
    else {
        $TLE135 = $left < $right; // 330
        __log__ ("TLE135", $TLE135, 280);
        return $TLE135; // 331
    }
}
function le ($left, $right)  // "ln: 332, lx: 333, lxe: 334"
{
    $TLE136 = gettype ($left); // "335native call"
    __log__ ("TLE136", $TLE136, 285);
    $TLE137 = 'object'; // 336
    __log__ ("TLE137", $TLE137, 286);
    $TLE36 = $TLE136 == $TLE137; // 337
    __log__ ("TLE36", $TLE36, 287);
    if ($TLE36){
        $TLE138 = gettype ($right); // "339native call"
        __log__ ("TLE138", $TLE138, 289);
        $TLE139 = 'object'; // 340
        __log__ ("TLE139", $TLE139, 290);
        $TEF37 = $TLE138 == $TLE139; // 341
        __log__ ("TEF37", $TEF37, 291);
    }
    else {
        $TEF37 = $TLE36; // 342
        __log__ ("TEF37", $TEF37, 292);
    }
    $TLE140 = (bool) $TEF37; // 343
    __log__ ("TLE140", $TLE140, 293);
    if ($TLE140){
        $TLE141 = $left->le ($right);// /* , Call: 347, Return: 348, Exception Return: 349, After: 345, Exception After: 346 */ method call
        __log__ ("TLE141", $TLE141, 295);
        return $TLE141; // 350
    }
    else {
        $TLE142 = $left <= $right; // 351
        __log__ ("TLE142", $TLE142, 301);
        return $TLE142; // 352
    }
}
abstract class abstractcomparable extends abstractobject implements icomparable { // "353"
    public function __construct ()/* Entry: 354, Exit: 355, Exception Exit: 356 */ 
                                                                                  {
                                                                                      abstractobject::__construct ();// /* , Call: 359, Return: 360, Exception Return: 361, After: 357, Exception After: 358 */ resolved method call
                                                                                  }
    public function eq (icomparable $object)/* Entry: 362, Exit: 363, Exception Exit: 364 */ 
                                                                                            {
                                                                                                $TLE143 = $this->compare ($object);// /* , Call: 367, Return: 368, Exception Return: 369, After: 365, Exception After: 366 */ method call
                                                                                                __log__ ("TLE143", $TLE143, 315);
                                                                                                $TLE144 = 0; // 370
                                                                                                __log__ ("TLE144", $TLE144, 320);
                                                                                                $TLE145 = $TLE143 == $TLE144; // 371
                                                                                                __log__ ("TLE145", $TLE145, 321);
                                                                                                return $TLE145; // 372
                                                                                            }
    public function ne (icomparable $object)/* Entry: 373, Exit: 374, Exception Exit: 375 */ 
                                                                                            {
                                                                                                $TLE146 = $this->compare ($object);// /* , Call: 378, Return: 379, Exception Return: 380, After: 376, Exception After: 377 */ method call
                                                                                                __log__ ("TLE146", $TLE146, 326);
                                                                                                $TLE147 = 0; // 381
                                                                                                __log__ ("TLE147", $TLE147, 331);
                                                                                                $TLE148 = $TLE146 != $TLE147; // 382
                                                                                                __log__ ("TLE148", $TLE148, 332);
                                                                                                return $TLE148; // 383
                                                                                            }
    public function lt (icomparable $object)/* Entry: 384, Exit: 385, Exception Exit: 386 */ 
                                                                                            {
                                                                                                $TLE149 = $this->compare ($object);// /* , Call: 389, Return: 390, Exception Return: 391, After: 387, Exception After: 388 */ method call
                                                                                                __log__ ("TLE149", $TLE149, 337);
                                                                                                $TLE150 = 0; // 392
                                                                                                __log__ ("TLE150", $TLE150, 342);
                                                                                                $TLE151 = $TLE149 < $TLE150; // 393
                                                                                                __log__ ("TLE151", $TLE151, 343);
                                                                                                return $TLE151; // 394
                                                                                            }
    public function le (icomparable $object)/* Entry: 395, Exit: 396, Exception Exit: 397 */ 
                                                                                            {
                                                                                                $TLE152 = $this->compare ($object);// /* , Call: 400, Return: 401, Exception Return: 402, After: 398, Exception After: 399 */ method call
                                                                                                __log__ ("TLE152", $TLE152, 348);
                                                                                                $TLE153 = 0; // 403
                                                                                                __log__ ("TLE153", $TLE153, 353);
                                                                                                $TLE154 = $TLE152 <= $TLE153; // 404
                                                                                                __log__ ("TLE154", $TLE154, 354);
                                                                                                return $TLE154; // 405
                                                                                            }
    public function gt (icomparable $object)/* Entry: 406, Exit: 407, Exception Exit: 408 */ 
                                                                                            {
                                                                                                $TLE155 = $this->compare ($object);// /* , Call: 411, Return: 412, Exception Return: 413, After: 409, Exception After: 410 */ method call
                                                                                                __log__ ("TLE155", $TLE155, 359);
                                                                                                $TLE156 = 0; // 414
                                                                                                __log__ ("TLE156", $TLE156, 364);
                                                                                                $TLE157 = $TLE156 < $TLE155; // 415
                                                                                                __log__ ("TLE157", $TLE157, 365);
                                                                                                return $TLE157; // 416
                                                                                            }
    public function ge (icomparable $object)/* Entry: 417, Exit: 418, Exception Exit: 419 */ 
                                                                                            {
                                                                                                $TLE158 = $this->compare ($object);// /* , Call: 422, Return: 423, Exception Return: 424, After: 420, Exception After: 421 */ method call
                                                                                                __log__ ("TLE158", $TLE158, 370);
                                                                                                $TLE159 = 0; // 425
                                                                                                __log__ ("TLE159", $TLE159, 375);
                                                                                                $TLE160 = $TLE159 <= $TLE158; // 426
                                                                                                __log__ ("TLE160", $TLE160, 376);
                                                                                                return $TLE160; // 427
                                                                                            }
    protected abstract function compareto (icomparable $object)/* Entry: 428, Exit: 429, Exception Exit: 430 */;
    public function compare (icomparable $object)/* Entry: 431, Exit: 432, Exception Exit: 433 */ 
                                                                                                 {
                                                                                                     $result = 0; // 434
                                                                                                     __log__ ("result", $result, 384);
                                                                                                     $TLE161 = $this->getclass ();// /* , Call: 437, Return: 438, Exception Return: 439, After: 435, Exception After: 436 */ method call
                                                                                                     __log__ ("TLE161", $TLE161, 385);
                                                                                                     $TLE162 = $object->getclass ();// /* , Call: 442, Return: 443, Exception Return: 444, After: 440, Exception After: 441 */ method call
                                                                                                     __log__ ("TLE162", $TLE162, 390);
                                                                                                     $TLE163 = $TLE161 == $TLE162; // 445
                                                                                                     __log__ ("TLE163", $TLE163, 395);
                                                                                                     if ($TLE163){
                                                                                                         $result = $this->compareto ($object);// /* , Call: 449, Return: 450, Exception Return: 451, After: 447, Exception After: 448 */ method call
                                                                                                         __log__ ("result", $result, 397);
                                                                                                     }
                                                                                                     else {
                                                                                                         $TLE164 = $this->getclass ();// /* , Call: 454, Return: 455, Exception Return: 456, After: 452, Exception After: 453 */ method call
                                                                                                         __log__ ("TLE164", $TLE164, 402);
                                                                                                         $TLE165 = $TLE164->getname ();// /* , Call: 459, Return: 460, Exception Return: 461, After: 457, Exception After: 458 */ method call
                                                                                                         __log__ ("TLE165", $TLE165, 407);
                                                                                                         $TLE166 = $object->getclass ();// /* , Call: 464, Return: 465, Exception Return: 466, After: 462, Exception After: 463 */ method call
                                                                                                         __log__ ("TLE166", $TLE166, 412);
                                                                                                         $TLE167 = $TLE166->getname ();// /* , Call: 469, Return: 470, Exception Return: 471, After: 467, Exception After: 468 */ method call
                                                                                                         __log__ ("TLE167", $TLE167, 417);
                                                                                                         $result = strcmp ($TLE165, $TLE167); // "472native call"
                                                                                                         __log__ ("result", $result, 422);
                                                                                                     }
                                                                                                     return $result; // 473
                                                                                                 }
    public static function main ($args)/* Entry: 474, Exit: 475, Exception Exit: 476 */ 
                                                                                       {
                                                                                           $TLE168 = "AbstractComparable main program.\n"; // 477
                                                                                           __log__ ("TLE168", $TLE168, 427);
                                                                                           printf ($TLE168); // "478native call"
                                                                                           $TLE169 = 0; // 479
                                                                                           __log__ ("TLE169", $TLE169, 429);
                                                                                           return $TLE169; // 480
                                                                                       }
}
interface ivisitor {
    public function visit (iobject $obj)/* Entry: 481, Exit: 482, Exception Exit: 483 */ 
                                                                                        ;
    public function isdone ()/* Entry: 484, Exit: 485, Exception Exit: 486 */ 
                                                                             ;
}
interface ireducefunction {
    public function invoke ($acc, $item)/* Entry: 487, Exit: 488, Exception Exit: 489 */ 
                                                                                        ;
}
interface icontainer extends icomparable, iteratoraggregate {
    public function getcount ()/* Entry: 490, Exit: 491, Exception Exit: 492 */ 
                                                                               ;
    public function isempty ()/* Entry: 493, Exit: 494, Exception Exit: 495 */ 
                                                                              ;
    public function isfull ()/* Entry: 496, Exit: 497, Exception Exit: 498 */ 
                                                                             ;
    public function purge ()/* Entry: 499, Exit: 500, Exception Exit: 501 */ 
                                                                            ;
    public function reduce (ireducefunction $f, $initialState)/* Entry: 502, Exit: 503, Exception Exit: 504 */ 
                                                                                                              ;
    public function accept (ivisitor $visitor)/* Entry: 505, Exit: 506, Exception Exit: 507 */ 
                                                                                              ;
}
abstract class abstractcontainer extends abstractcomparable implements icontainer { // "508"
    protected $count;
    public function __construct ()/* Entry: 509, Exit: 510, Exception Exit: 511 */ 
                                                                                  {
                                                                                      abstractcomparable::__construct ();// /* , Call: 514, Return: 515, Exception Return: 516, After: 512, Exception After: 513 */ resolved method call
                                                                                      $TLE170 = 0; // 517
                                                                                      __log__ ("TLE170", $TLE170, 467);
                                                                                      $TSNNt824 = $TLE170; // 518
                                                                                      __log__ ("TSNNt824", $TSNNt824, 468);
                                                                                      $this->count = $TSNNt824; // 519
                                                                                  }
    public function purge ()/* Entry: 520, Exit: 521, Exception Exit: 522 */ 
                                                                            {
                                                                                $TLE171 = 0; // 523
                                                                                __log__ ("TLE171", $TLE171, 473);
                                                                                $TSNNt825 = $TLE171; // 524
                                                                                __log__ ("TSNNt825", $TSNNt825, 474);
                                                                                $this->count = $TSNNt825; // 525
                                                                            }
    public function getcount ()/* Entry: 526, Exit: 527, Exception Exit: 528 */ 
                                                                               {
                                                                                   $TSNNt826 = $this->count; // 529
                                                                                   __log__ ("TSNNt826", $TSNNt826, 479);
                                                                                   return $TSNNt826; // 530
                                                                               }
    public function isempty ()/* Entry: 531, Exit: 532, Exception Exit: 533 */ 
                                                                              {
                                                                                  $TLE172 = $this->getcount ();// /* , Call: 536, Return: 537, Exception Return: 538, After: 534, Exception After: 535 */ method call
                                                                                  __log__ ("TLE172", $TLE172, 484);
                                                                                  $TLE173 = 0; // 539
                                                                                  __log__ ("TLE173", $TLE173, 489);
                                                                                  $TLE174 = $TLE172 == $TLE173; // 540
                                                                                  __log__ ("TLE174", $TLE174, 490);
                                                                                  return $TLE174; // 541
                                                                              }
    public function isfull ()/* Entry: 542, Exit: 543, Exception Exit: 544 */ 
                                                                             {
                                                                                 $TLE175 = false; // 545
                                                                                 __log__ ("TLE175", $TLE175, 495);
                                                                                 return $TLE175; // 546
                                                                             }
    public function reduce (ireducefunction $f, $initialState)/* Entry: 547, Exit: 548, Exception Exit: 549 */ 
                                                                                                              {
                                                                                                                  $state = $initialState; // 550
                                                                                                                  __log__ ("state", $state, 500);
                                                                                                                  foreach ($this as $obj) {
                                                                                                                      $state = $f->invoke ($state, $obj);// /* , Call: 554, Return: 555, Exception Return: 556, After: 552, Exception After: 553 */ method call
                                                                                                                      __log__ ("state", $state, 502);
                                                                                                                  }
                                                                                                                  return $state; // 557
                                                                                                              }
    public function accept (ivisitor $visitor)/* Entry: 558, Exit: 559, Exception Exit: 560 */ 
                                                                                              {
                                                                                                  foreach ($this as $obj) {
                                                                                                      $TLE176 = $visitor->isdone ();// /* , Call: 564, Return: 565, Exception Return: 566, After: 562, Exception After: 563 */ method call
                                                                                                      __log__ ("TLE176", $TLE176, 512);
                                                                                                      if ($TLE176){
                                                                                                          break; // 568
                                                                                                      }
                                                                                                      else {
                                                                                                           // "569 skip"
                                                                                                      }
                                                                                                      $visitor->visit ($obj);// /* , Call: 572, Return: 573, Exception Return: 574, After: 570, Exception After: 571 */ method call
                                                                                                  }
                                                                                              }
    public function __tostring ()/* Entry: 575, Exit: 576, Exception Exit: 577 */ 
                                                                                 {
                                                                                     $TLE177 = new abstractcontainertostringreducefunction ();// /* , Call: 580, Return: 581, Exception Return: 582, After: 578, Exception After: 579 */ constructor call
                                                                                     __log__ ("TLE177", $TLE177, 528);
                                                                                     $TLE178 = ''; // 583
                                                                                     __log__ ("TLE178", $TLE178, 533);
                                                                                     $TLE179 = ''; // 584
                                                                                     __log__ ("TLE179", $TLE179, 534);
                                                                                     unset ($TSa180); // 585
                                                                                     $TSa180 = (array) $TSa180; // 586
                                                                                     __log__ ("TSa180", $TSa180, 536);
                                                                                     $TLE811 = 0; // 587
                                                                                     __log__ ("TLE811", $TLE811, 537);
                                                                                     $TSNNi827 = $TLE178; // 588
                                                                                     __log__ ("TSNNi827", $TSNNi827, 538);
                                                                                     $TSa180[$TLE811] = $TSNNi827; // 589
                                                                                     $TLE812 = 1; // 590
                                                                                     __log__ ("TLE812", $TLE812, 540);
                                                                                     $TSNNi828 = $TLE179; // 591
                                                                                     __log__ ("TSNNi828", $TSNNi828, 541);
                                                                                     $TSa180[$TLE812] = $TSNNi828; // 592
                                                                                     $s = $this->reduce ($TLE177, $TSa180);// /* , Call: 595, Return: 596, Exception Return: 597, After: 593, Exception After: 594 */ method call
                                                                                     __log__ ("s", $s, 543);
                                                                                     $TLE181 = $this->getclass ();// /* , Call: 600, Return: 601, Exception Return: 602, After: 598, Exception After: 599 */ method call
                                                                                     __log__ ("TLE181", $TLE181, 548);
                                                                                     $TLE182 = $TLE181->getname ();// /* , Call: 605, Return: 606, Exception Return: 607, After: 603, Exception After: 604 */ method call
                                                                                     __log__ ("TLE182", $TLE182, 553);
                                                                                     $TLE183 = '{'; // 608
                                                                                     __log__ ("TLE183", $TLE183, 558);
                                                                                     $TLE184 = $TLE182 . $TLE183; // 609
                                                                                     __log__ ("TLE184", $TLE184, 559);
                                                                                     $TLE185 = 0; // 610
                                                                                     __log__ ("TLE185", $TLE185, 560);
                                                                                     $TSNNi829 = $s[$TLE185]; // 611
                                                                                     __log__ ("TSNNi829", $TSNNi829, 561);
                                                                                     $TLE186 = $TLE184 . $TSNNi829; // 612
                                                                                     __log__ ("TLE186", $TLE186, 562);
                                                                                     $TLE187 = '}'; // 613
                                                                                     __log__ ("TLE187", $TLE187, 563);
                                                                                     $TLE188 = $TLE186 . $TLE187; // 614
                                                                                     __log__ ("TLE188", $TLE188, 564);
                                                                                     return $TLE188; // 615
                                                                                 }
    public function gethashcode ()/* Entry: 616, Exit: 617, Exception Exit: 618 */ 
                                                                                  {
                                                                                      $TLE189 = new abstractcontainerhashcodereducefunction ();// /* , Call: 621, Return: 622, Exception Return: 623, After: 619, Exception After: 620 */ constructor call
                                                                                      __log__ ("TLE189", $TLE189, 569);
                                                                                      $TLE190 = 0; // 624
                                                                                      __log__ ("TLE190", $TLE190, 574);
                                                                                      $TLE191 = $this->reduce ($TLE189, $TLE190);// /* , Call: 627, Return: 628, Exception Return: 629, After: 625, Exception After: 626 */ method call
                                                                                      __log__ ("TLE191", $TLE191, 575);
                                                                                      return $TLE191; // 630
                                                                                  }
}
class abstractcontainertostringreducefunction implements ireducefunction { // "631"
    public function invoke ($s, $item)/* Entry: 632, Exit: 633, Exception Exit: 634 */ 
                                                                                      {
                                                                                          $TLE192 = 0; // 635
                                                                                          __log__ ("TLE192", $TLE192, 585);
                                                                                          $TLE193 = 1; // 636
                                                                                          __log__ ("TLE193", $TLE193, 586);
                                                                                          $TSNNi830 = $s[$TLE192]; // 637
                                                                                          __log__ ("TSNNi830", $TSNNi830, 587);
                                                                                          $TSNNi831 = $s[$TLE193]; // 638
                                                                                          __log__ ("TSNNi831", $TSNNi831, 588);
                                                                                          $TLE194 = $TSNNi830 . $TSNNi831; // 639
                                                                                          __log__ ("TLE194", $TLE194, 589);
                                                                                          $TLE195 = $item->__tostring ();// /* , Call: 642, Return: 643, Exception Return: 644, After: 640, Exception After: 641 */ method call
                                                                                          __log__ ("TLE195", $TLE195, 590);
                                                                                          $TLE196 = $TLE194 . $TLE195; // 645
                                                                                          __log__ ("TLE196", $TLE196, 595);
                                                                                          $TLE197 = ", "; // 646
                                                                                          __log__ ("TLE197", $TLE197, 596);
                                                                                          unset ($TSa198); // 647
                                                                                          $TSa198 = (array) $TSa198; // 648
                                                                                          __log__ ("TSa198", $TSa198, 598);
                                                                                          $TLE813 = 0; // 649
                                                                                          __log__ ("TLE813", $TLE813, 599);
                                                                                          $TSNNi832 = $TLE196; // 650
                                                                                          __log__ ("TSNNi832", $TSNNi832, 600);
                                                                                          $TSa198[$TLE813] = $TSNNi832; // 651
                                                                                          $TLE814 = 1; // 652
                                                                                          __log__ ("TLE814", $TLE814, 602);
                                                                                          $TSNNi833 = $TLE197; // 653
                                                                                          __log__ ("TSNNi833", $TSNNi833, 603);
                                                                                          $TSa198[$TLE814] = $TSNNi833; // 654
                                                                                          return $TSa198; // 655
                                                                                      }
}
class abstractcontainerhashcodereducefunction implements ireducefunction { // "656"
    public function invoke ($s, $obj)/* Entry: 657, Exit: 658, Exception Exit: 659 */ 
                                                                                     {
                                                                                         $TLE199 = $obj->gethashcode ();// /* , Call: 662, Return: 663, Exception Return: 664, After: 660, Exception After: 661 */ method call
                                                                                         __log__ ("TLE199", $TLE199, 610);
                                                                                         $TLE200 = $s + $TLE199; // 665
                                                                                         __log__ ("TLE200", $TLE200, 615);
                                                                                         return $TLE200; // 666
                                                                                     }
}
abstract class abstractvisitor implements ivisitor { // "667"
    public function __construct ()/* Entry: 668, Exit: 669, Exception Exit: 670 */ 
                                                                                  {
                                                                                       // "671 skip"
                                                                                  }
    public function isdone ()/* Entry: 672, Exit: 673, Exception Exit: 674 */ 
                                                                             {
                                                                                 $TLE201 = false; // 675
                                                                                 __log__ ("TLE201", $TLE201, 625);
                                                                                 return $TLE201; // 676
                                                                             }
}
interface iedge extends icomparable {
    public function getv0 ()/* Entry: 677, Exit: 678, Exception Exit: 679 */ 
                                                                            ;
    public function getv1 ()/* Entry: 680, Exit: 681, Exception Exit: 682 */ 
                                                                            ;
    public function getweight ()/* Entry: 683, Exit: 684, Exception Exit: 685 */ 
                                                                                ;
    public function isdirected ()/* Entry: 686, Exit: 687, Exception Exit: 688 */ 
                                                                                 ;
    public function getmate (ivertex $vertex)/* Entry: 689, Exit: 690, Exception Exit: 691 */ 
                                                                                             ;
}
interface ivertex extends icomparable {
    public function getnumber ()/* Entry: 692, Exit: 693, Exception Exit: 694 */ 
                                                                                ;
    public function getweight ()/* Entry: 695, Exit: 696, Exception Exit: 697 */ 
                                                                                ;
    public function getincidentedges ()/* Entry: 698, Exit: 699, Exception Exit: 700 */ 
                                                                                       ;
    public function getemanatingedges ()/* Entry: 701, Exit: 702, Exception Exit: 703 */ 
                                                                                        ;
    public function getpredecessors ()/* Entry: 704, Exit: 705, Exception Exit: 706 */ 
                                                                                      ;
    public function getsuccessors ()/* Entry: 707, Exit: 708, Exception Exit: 709 */ 
                                                                                    ;
}
interface igraph extends icontainer {
    public function getnumberofedges ()/* Entry: 710, Exit: 711, Exception Exit: 712 */ 
                                                                                       ;
    public function getnumberofvertices ()/* Entry: 713, Exit: 714, Exception Exit: 715 */ 
                                                                                          ;
    public function isdirected ()/* Entry: 716, Exit: 717, Exception Exit: 718 */ 
                                                                                 ;
    public function addvertex ($v, $weight = null)/* Entry: 719, Exit: 720, Exception Exit: 721 */ 
                                                                                                  ;
    public function getvertex ($v)/* Entry: 722, Exit: 723, Exception Exit: 724 */ 
                                                                                  ;
    public function addedge ($v, $w, $weight = null)/* Entry: 725, Exit: 726, Exception Exit: 727 */ 
                                                                                                    ;
    public function getedge ($v, $w)/* Entry: 728, Exit: 729, Exception Exit: 730 */ 
                                                                                    ;
    public function isedge ($v, $w)/* Entry: 731, Exit: 732, Exception Exit: 733 */ 
                                                                                   ;
    public function isconnected ()/* Entry: 734, Exit: 735, Exception Exit: 736 */ 
                                                                                  ;
    public function iscyclic ()/* Entry: 737, Exit: 738, Exception Exit: 739 */ 
                                                                               ;
    public function getvertices ()/* Entry: 740, Exit: 741, Exception Exit: 742 */ 
                                                                                  ;
    public function getedges ()/* Entry: 743, Exit: 744, Exception Exit: 745 */ 
                                                                               ;
    public function depthfirsttraversal (iprepostvisitor $visitor, $start)/* Entry: 746, Exit: 747, Exception Exit: 748 */ 
                                                                                                                          ;
    public function breadthfirsttraversal (ivisitor $visitor, $start)/* Entry: 749, Exit: 750, Exception Exit: 751 */ 
                                                                                                                     ;
}
interface idigraph extends igraph {
    public function isstronglyconnected ()/* Entry: 752, Exit: 753, Exception Exit: 754 */ 
                                                                                          ;
    public function topologicalordertraversal (ivisitor $visitor)/* Entry: 755, Exit: 756, Exception Exit: 757 */ 
                                                                                                                 ;
}
class edge extends abstractcomparable implements iedge { // "758"
    protected $graph = null;
    protected $v0 = 0;
    protected $v1 = 0;
    protected $weight = null;
    public function __construct (abstractgraph $graph, $v0, $v1, $weight)/* Entry: 759, Exit: 760, Exception Exit: 761 */ 
                                                                                                                         {
                                                                                                                             abstractcomparable::__construct ();// /* , Call: 764, Return: 765, Exception Return: 766, After: 762, Exception After: 763 */ resolved method call
                                                                                                                             $TSNNt834 = $graph; // 767
                                                                                                                             __log__ ("TSNNt834", $TSNNt834, 717);
                                                                                                                             $this->graph = $TSNNt834; // 768
                                                                                                                             $TSNNt835 = $v0; // 769
                                                                                                                             __log__ ("TSNNt835", $TSNNt835, 719);
                                                                                                                             $this->v0 = $TSNNt835; // 770
                                                                                                                             $TSNNt836 = $v1; // 771
                                                                                                                             __log__ ("TSNNt836", $TSNNt836, 721);
                                                                                                                             $this->v1 = $TSNNt836; // 772
                                                                                                                             $TSNNt837 = $weight; // 773
                                                                                                                             __log__ ("TSNNt837", $TSNNt837, 723);
                                                                                                                             $this->weight = $TSNNt837; // 774
                                                                                                                         }
    public function getv0 ()/* Entry: 775, Exit: 776, Exception Exit: 777 */ 
                                                                            {
                                                                                $TSNNt838 = $this->graph; // 778
                                                                                __log__ ("TSNNt838", $TSNNt838, 728);
                                                                                $TSNNt839 = $this->v0; // 779
                                                                                __log__ ("TSNNt839", $TSNNt839, 729);
                                                                                $TLE202 = $TSNNt838->getvertex ($TSNNt839);// /* , Call: 782, Return: 783, Exception Return: 784, After: 780, Exception After: 781 */ method call
                                                                                __log__ ("TLE202", $TLE202, 730);
                                                                                return $TLE202; // 785
                                                                            }
    public function getv1 ()/* Entry: 786, Exit: 787, Exception Exit: 788 */ 
                                                                            {
                                                                                $TSNNt840 = $this->graph; // 789
                                                                                __log__ ("TSNNt840", $TSNNt840, 739);
                                                                                $TSNNt841 = $this->v1; // 790
                                                                                __log__ ("TSNNt841", $TSNNt841, 740);
                                                                                $TLE203 = $TSNNt840->getvertex ($TSNNt841);// /* , Call: 793, Return: 794, Exception Return: 795, After: 791, Exception After: 792 */ method call
                                                                                __log__ ("TLE203", $TLE203, 741);
                                                                                return $TLE203; // 796
                                                                            }
    public function getweight ()/* Entry: 797, Exit: 798, Exception Exit: 799 */ 
                                                                                {
                                                                                    $TSNNt842 = $this->weight; // 800
                                                                                    __log__ ("TSNNt842", $TSNNt842, 750);
                                                                                    return $TSNNt842; // 801
                                                                                }
    public function getmate (ivertex $v)/* Entry: 802, Exit: 803, Exception Exit: 804 */ 
                                                                                        {
                                                                                            $TLE204 = $v->getnumber ();// /* , Call: 807, Return: 808, Exception Return: 809, After: 805, Exception After: 806 */ method call
                                                                                            __log__ ("TLE204", $TLE204, 755);
                                                                                            $TSNNt843 = $this->v0; // 810
                                                                                            __log__ ("TSNNt843", $TSNNt843, 760);
                                                                                            $TLE205 = $TLE204 == $TSNNt843; // 811
                                                                                            __log__ ("TLE205", $TLE205, 761);
                                                                                            if ($TLE205){
                                                                                                $TLE206 = $this->getv1 ();// /* , Call: 815, Return: 816, Exception Return: 817, After: 813, Exception After: 814 */ method call
                                                                                                __log__ ("TLE206", $TLE206, 763);
                                                                                                return $TLE206; // 818
                                                                                            }
                                                                                            else {
                                                                                                $TLE207 = $v->getnumber ();// /* , Call: 821, Return: 822, Exception Return: 823, After: 819, Exception After: 820 */ method call
                                                                                                __log__ ("TLE207", $TLE207, 769);
                                                                                                $TSNNt844 = $this->v1; // 824
                                                                                                __log__ ("TSNNt844", $TSNNt844, 774);
                                                                                                $TLE208 = $TLE207 == $TSNNt844; // 825
                                                                                                __log__ ("TLE208", $TLE208, 775);
                                                                                                if ($TLE208){
                                                                                                    $TLE209 = $this->getv0 ();// /* , Call: 829, Return: 830, Exception Return: 831, After: 827, Exception After: 828 */ method call
                                                                                                    __log__ ("TLE209", $TLE209, 777);
                                                                                                    return $TLE209; // 832
                                                                                                }
                                                                                                else {
                                                                                                    $TLE210 = new argumenterror ();// /* , Call: 835, Return: 836, Exception Return: 837, After: 833, Exception After: 834 */ constructor call
                                                                                                    __log__ ("TLE210", $TLE210, 783);
                                                                                                    throw $TLE210; // 838
                                                                                                }
                                                                                            }
                                                                                        }
    public function isdirected ()/* Entry: 839, Exit: 840, Exception Exit: 841 */ 
                                                                                 {
                                                                                     $TSNNt845 = $this->graph; // 842
                                                                                     __log__ ("TSNNt845", $TSNNt845, 792);
                                                                                     $TLE211 = $TSNNt845->isdirected ();// /* , Call: 845, Return: 846, Exception Return: 847, After: 843, Exception After: 844 */ method call
                                                                                     __log__ ("TLE211", $TLE211, 793);
                                                                                     return $TLE211; // 848
                                                                                 }
    protected function compareto (icomparable $obj)/* Entry: 849, Exit: 850, Exception Exit: 851 */ 
                                                                                                   {
                                                                                                       $TLE212 = new methodnotimplementedexception ();// /* , Call: 854, Return: 855, Exception Return: 856, After: 852, Exception After: 853 */ constructor call
                                                                                                       __log__ ("TLE212", $TLE212, 802);
                                                                                                       throw $TLE212; // 857
                                                                                                   }
    public function gethashcode ()/* Entry: 858, Exit: 859, Exception Exit: 860 */ 
                                                                                  {
                                                                                      $TSNNt846 = $this->graph; // 861
                                                                                      __log__ ("TSNNt846", $TSNNt846, 811);
                                                                                      $TLE213 = $TSNNt846->getnumberofvertices ();// /* , Call: 864, Return: 865, Exception Return: 866, After: 862, Exception After: 863 */ method call
                                                                                      __log__ ("TLE213", $TLE213, 812);
                                                                                      $TSNNt847 = $this->v0; // 867
                                                                                      __log__ ("TSNNt847", $TSNNt847, 817);
                                                                                      $TLE214 = $TSNNt847 * $TLE213; // 868
                                                                                      __log__ ("TLE214", $TLE214, 818);
                                                                                      $result = $TLE214 + $v1; // 869
                                                                                      __log__ ("result", $result, 819);
                                                                                      $TLE215 = null; // 870
                                                                                      __log__ ("TLE215", $TLE215, 820);
                                                                                      $TSNNt848 = $this->weight; // 871
                                                                                      __log__ ("TSNNt848", $TSNNt848, 821);
                                                                                      $TLE216 = $TSNNt848 !== $TLE215; // 872
                                                                                      __log__ ("TLE216", $TLE216, 822);
                                                                                      if ($TLE216){
                                                                                          $TLE217 = $weight->gethashcode ();// /* , Call: 876, Return: 877, Exception Return: 878, After: 874, Exception After: 875 */ method call
                                                                                          __log__ ("TLE217", $TLE217, 824);
                                                                                          $result = $result + $TLE217; // 879
                                                                                          __log__ ("result", $result, 829);
                                                                                      }
                                                                                      else {
                                                                                           // "880 skip"
                                                                                      }
                                                                                      return $result; // 881
                                                                                  }
    public function __tostring ()/* Entry: 882, Exit: 883, Exception Exit: 884 */ 
                                                                                 {
                                                                                     $s = ''; // 885
                                                                                     __log__ ("s", $s, 835);
                                                                                     $TLE218 = "Edge{"; // 886
                                                                                     __log__ ("TLE218", $TLE218, 836);
                                                                                     $TSNNt849 = $this->v0; // 887
                                                                                     __log__ ("TSNNt849", $TSNNt849, 837);
                                                                                     $TLE219 = $TLE218 . $TSNNt849; // 888
                                                                                     __log__ ("TLE219", $TLE219, 838);
                                                                                     $s = $s . $TLE219; // 889
                                                                                     __log__ ("s", $s, 839);
                                                                                     $TLE220 = $this->isdirected ();// /* , Call: 892, Return: 893, Exception Return: 894, After: 890, Exception After: 891 */ method call
                                                                                     __log__ ("TLE220", $TLE220, 840);
                                                                                     if ($TLE220){
                                                                                         $TLE221 = '->'; // 896
                                                                                         __log__ ("TLE221", $TLE221, 846);
                                                                                         $TSNNt850 = $this->v1; // 897
                                                                                         __log__ ("TSNNt850", $TSNNt850, 847);
                                                                                         $TLE222 = $TLE221 . $TSNNt850; // 898
                                                                                         __log__ ("TLE222", $TLE222, 848);
                                                                                         $s = $s . $TLE222; // 899
                                                                                         __log__ ("s", $s, 849);
                                                                                     }
                                                                                     else {
                                                                                         $TLE223 = '--'; // 900
                                                                                         __log__ ("TLE223", $TLE223, 850);
                                                                                         $TSNNt851 = $this->v1; // 901
                                                                                         __log__ ("TSNNt851", $TSNNt851, 851);
                                                                                         $TLE224 = $TLE223 . $TSNNt851; // 902
                                                                                         __log__ ("TLE224", $TLE224, 852);
                                                                                         $s = $s . $TLE224; // 903
                                                                                         __log__ ("s", $s, 853);
                                                                                     }
                                                                                     $TLE225 = null; // 904
                                                                                     __log__ ("TLE225", $TLE225, 854);
                                                                                     $TSNNt852 = $this->weight; // 905
                                                                                     __log__ ("TSNNt852", $TSNNt852, 855);
                                                                                     $TLE226 = $TSNNt852 !== $TLE225; // 906
                                                                                     __log__ ("TLE226", $TLE226, 856);
                                                                                     if ($TLE226){
                                                                                         $TLE227 = ', weight = '; // 908
                                                                                         __log__ ("TLE227", $TLE227, 858);
                                                                                         $TSNNt853 = $this->weight; // 909
                                                                                         __log__ ("TSNNt853", $TSNNt853, 859);
                                                                                         $TLE228 = $TSNNt853->__tostring ();// /* , Call: 912, Return: 913, Exception Return: 914, After: 910, Exception After: 911 */ method call
                                                                                         __log__ ("TLE228", $TLE228, 860);
                                                                                         $TLE229 = $TLE227 . $TLE228; // 915
                                                                                         __log__ ("TLE229", $TLE229, 865);
                                                                                         $s = $s . $TLE229; // 916
                                                                                         __log__ ("s", $s, 866);
                                                                                     }
                                                                                     else {
                                                                                          // "917 skip"
                                                                                     }
                                                                                     $TLE230 = '}'; // 918
                                                                                     __log__ ("TLE230", $TLE230, 868);
                                                                                     $s = $s . $TLE230; // 919
                                                                                     __log__ ("s", $s, 869);
                                                                                     return $s; // 920
                                                                                 }
}
interface iiterator extends iterator {
    public function succ ()/* Entry: 921, Exit: 922, Exception Exit: 923 */ 
                                                                           ;
}
abstract class abstractiterator implements iiterator { // "924"
    public function __construct ()/* Entry: 925, Exit: 926, Exception Exit: 927 */ 
                                                                                  {
                                                                                       // "928 skip"
                                                                                  }
    public function succ ()/* Entry: 929, Exit: 930, Exception Exit: 931 */ 
                                                                           {
                                                                               $result = null; // 932
                                                                               __log__ ("result", $result, 882);
                                                                               $TLE231 = $this->valid ();// /* , Call: 935, Return: 936, Exception Return: 937, After: 933, Exception After: 934 */ method call
                                                                               __log__ ("TLE231", $TLE231, 883);
                                                                               if ($TLE231){
                                                                                   $result = $this->current ();// /* , Call: 941, Return: 942, Exception Return: 943, After: 939, Exception After: 940 */ method call
                                                                                   __log__ ("result", $result, 889);
                                                                                   $this->next ();// /* , Call: 946, Return: 947, Exception Return: 948, After: 944, Exception After: 945 */ method call
                                                                               }
                                                                               else {
                                                                                    // "949 skip"
                                                                               }
                                                                               return $result; // 950
                                                                           }
}
class vertex_iterator extends abstractiterator { // "951"
    protected $vertex = null;
    protected $edgeIterator = null;
    public function __construct (vertex $vertex, iterator $edgeIterator)/* Entry: 952, Exit: 953, Exception Exit: 954 */ 
                                                                                                                        {
                                                                                                                            abstractiterator::__construct ();// /* , Call: 957, Return: 958, Exception Return: 959, After: 955, Exception After: 956 */ resolved method call
                                                                                                                            $TSNNt854 = $vertex; // 960
                                                                                                                            __log__ ("TSNNt854", $TSNNt854, 910);
                                                                                                                            $this->vertex = $TSNNt854; // 961
                                                                                                                            $TSNNt855 = $edgeIterator; // 962
                                                                                                                            __log__ ("TSNNt855", $TSNNt855, 912);
                                                                                                                            $this->edgeIterator = $TSNNt855; // 963
                                                                                                                        }
    public function valid ()/* Entry: 964, Exit: 965, Exception Exit: 966 */ 
                                                                            {
                                                                                $TSNNt856 = $this->edgeIterator; // 967
                                                                                __log__ ("TSNNt856", $TSNNt856, 917);
                                                                                $TLE232 = $TSNNt856->valid ();// /* , Call: 970, Return: 971, Exception Return: 972, After: 968, Exception After: 969 */ method call
                                                                                __log__ ("TLE232", $TLE232, 918);
                                                                                return $TLE232; // 973
                                                                            }
    public function key ()/* Entry: 974, Exit: 975, Exception Exit: 976 */ 
                                                                          {
                                                                              $TSNNt857 = $this->edgeIterator; // 977
                                                                              __log__ ("TSNNt857", $TSNNt857, 927);
                                                                              $TLE233 = $TSNNt857->key ();// /* , Call: 980, Return: 981, Exception Return: 982, After: 978, Exception After: 979 */ method call
                                                                              __log__ ("TLE233", $TLE233, 928);
                                                                              return $TLE233; // 983
                                                                          }
    public function current ()/* Entry: 984, Exit: 985, Exception Exit: 986 */ 
                                                                              {
                                                                                  $TSNNt858 = $this->edgeIterator; // 987
                                                                                  __log__ ("TSNNt858", $TSNNt858, 937);
                                                                                  $TLE234 = $TSNNt858->current ();// /* , Call: 990, Return: 991, Exception Return: 992, After: 988, Exception After: 989 */ method call
                                                                                  __log__ ("TLE234", $TLE234, 938);
                                                                                  $TSNNt859 = $this->vertex; // 993
                                                                                  __log__ ("TSNNt859", $TSNNt859, 943);
                                                                                  $TLE235 = $TLE234->getmate ($TSNNt859);// /* , Call: 996, Return: 997, Exception Return: 998, After: 994, Exception After: 995 */ method call
                                                                                  __log__ ("TLE235", $TLE235, 944);
                                                                                  return $TLE235; // 999
                                                                              }
    public function next ()/* Entry: 1000, Exit: 1001, Exception Exit: 1002 */ 
                                                                              {
                                                                                  $TSNNt860 = $this->edgeIterator; // 1003
                                                                                  __log__ ("TSNNt860", $TSNNt860, 953);
                                                                                  $TSNNt860->next ();// /* , Call: 1006, Return: 1007, Exception Return: 1008, After: 1004, Exception After: 1005 */ method call
                                                                              }
    public function rewind ()/* Entry: 1009, Exit: 1010, Exception Exit: 1011 */ 
                                                                                {
                                                                                    $TSNNt861 = $this->edgeIterator; // 1012
                                                                                    __log__ ("TSNNt861", $TSNNt861, 962);
                                                                                    $TSNNt861->rewind ();// /* , Call: 1015, Return: 1016, Exception Return: 1017, After: 1013, Exception After: 1014 */ method call
                                                                                }
}
class vertex_iteratoraggregate implements iteratoraggregate { // "1018"
    protected $vertex = null;
    protected $edges = null;
    public function __construct (vertex $vertex, iteratoraggregate $edges)/* Entry: 1019, Exit: 1020, Exception Exit: 1021 */ 
                                                                                                                             {
                                                                                                                                 $TSNNt862 = $vertex; // 1022
                                                                                                                                 __log__ ("TSNNt862", $TSNNt862, 972);
                                                                                                                                 $this->vertex = $TSNNt862; // 1023
                                                                                                                                 $TSNNt863 = $edges; // 1024
                                                                                                                                 __log__ ("TSNNt863", $TSNNt863, 974);
                                                                                                                                 $this->edges = $TSNNt863; // 1025
                                                                                                                             }
    public function getiterator ()/* Entry: 1026, Exit: 1027, Exception Exit: 1028 */ 
                                                                                     {
                                                                                         $TSNNt864 = $this->edges; // 1029
                                                                                         __log__ ("TSNNt864", $TSNNt864, 979);
                                                                                         $TLE236 = $TSNNt864->getiterator ();// /* , Call: 1032, Return: 1033, Exception Return: 1034, After: 1030, Exception After: 1031 */ method call
                                                                                         __log__ ("TLE236", $TLE236, 980);
                                                                                         $TSNNt865 = $this->vertex; // 1035
                                                                                         __log__ ("TSNNt865", $TSNNt865, 985);
                                                                                         $TLE237 = new vertex_iterator ($TSNNt865, $TLE236);// /* , Call: 1038, Return: 1039, Exception Return: 1040, After: 1036, Exception After: 1037 */ constructor call
                                                                                         __log__ ("TLE237", $TLE237, 986);
                                                                                         return $TLE237; // 1041
                                                                                     }
}
class vertex extends abstractcomparable implements ivertex { // "1042"
    protected $graph = null;
    protected $number = 0;
    protected $weight = null;
    public function __construct (abstractgraph $graph, $number, $weight = null)/* Entry: 1043, Exit: 1044, Exception Exit: 1045 */ 
                                                                                                                                  {
                                                                                                                                      abstractcomparable::__construct ();// /* , Call: 1048, Return: 1049, Exception Return: 1050, After: 1046, Exception After: 1047 */ resolved method call
                                                                                                                                      $TSNNt866 = $graph; // 1051
                                                                                                                                      __log__ ("TSNNt866", $TSNNt866, 1001);
                                                                                                                                      $this->graph = $TSNNt866; // 1052
                                                                                                                                      $TSNNt867 = $number; // 1053
                                                                                                                                      __log__ ("TSNNt867", $TSNNt867, 1003);
                                                                                                                                      $this->number = $TSNNt867; // 1054
                                                                                                                                      $TSNNt868 = $weight; // 1055
                                                                                                                                      __log__ ("TSNNt868", $TSNNt868, 1005);
                                                                                                                                      $this->weight = $TSNNt868; // 1056
                                                                                                                                  }
    public function getnumber ()/* Entry: 1057, Exit: 1058, Exception Exit: 1059 */ 
                                                                                   {
                                                                                       $TSNNt869 = $this->number; // 1060
                                                                                       __log__ ("TSNNt869", $TSNNt869, 1010);
                                                                                       return $TSNNt869; // 1061
                                                                                   }
    public function getweight ()/* Entry: 1062, Exit: 1063, Exception Exit: 1064 */ 
                                                                                   {
                                                                                       $TSNNt870 = $this->weight; // 1065
                                                                                       __log__ ("TSNNt870", $TSNNt870, 1015);
                                                                                       return $TSNNt870; // 1066
                                                                                   }
    protected function compareto (icomparable $obj)/* Entry: 1067, Exit: 1068, Exception Exit: 1069 */ 
                                                                                                      {
                                                                                                          $TLE238 = new methodnotimplementedexception ();// /* , Call: 1072, Return: 1073, Exception Return: 1074, After: 1070, Exception After: 1071 */ constructor call
                                                                                                          __log__ ("TLE238", $TLE238, 1020);
                                                                                                          throw $TLE238; // 1075
                                                                                                      }
    public function gethashcode ()/* Entry: 1076, Exit: 1077, Exception Exit: 1078 */ 
                                                                                     {
                                                                                         $TSNNt871 = $this->number; // 1079
                                                                                         __log__ ("TSNNt871", $TSNNt871, 1029);
                                                                                         $result = $TSNNt871; // 1080
                                                                                         __log__ ("result", $result, 1030);
                                                                                         $TLE239 = null; // 1081
                                                                                         __log__ ("TLE239", $TLE239, 1031);
                                                                                         $TSNNt872 = $this->weight; // 1082
                                                                                         __log__ ("TSNNt872", $TSNNt872, 1032);
                                                                                         $TLE240 = $TSNNt872 !== $TLE239; // 1083
                                                                                         __log__ ("TLE240", $TLE240, 1033);
                                                                                         if ($TLE240){
                                                                                             $TLE241 = $weight->gethashcode ();// /* , Call: 1087, Return: 1088, Exception Return: 1089, After: 1085, Exception After: 1086 */ method call
                                                                                             __log__ ("TLE241", $TLE241, 1035);
                                                                                             $result = $result + $TLE241; // 1090
                                                                                             __log__ ("result", $result, 1040);
                                                                                         }
                                                                                         else {
                                                                                              // "1091 skip"
                                                                                         }
                                                                                         return $result; // 1092
                                                                                     }
    public function __tostring ()/* Entry: 1093, Exit: 1094, Exception Exit: 1095 */ 
                                                                                    {
                                                                                        $s = ''; // 1096
                                                                                        __log__ ("s", $s, 1046);
                                                                                        $TLE242 = 'Vertex{'; // 1097
                                                                                        __log__ ("TLE242", $TLE242, 1047);
                                                                                        $TSNNt873 = $this->number; // 1098
                                                                                        __log__ ("TSNNt873", $TSNNt873, 1048);
                                                                                        $TLE243 = $TLE242 . $TSNNt873; // 1099
                                                                                        __log__ ("TLE243", $TLE243, 1049);
                                                                                        $s = $s . $TLE243; // 1100
                                                                                        __log__ ("s", $s, 1050);
                                                                                        $TLE244 = null; // 1101
                                                                                        __log__ ("TLE244", $TLE244, 1051);
                                                                                        $TSNNt874 = $this->weight; // 1102
                                                                                        __log__ ("TSNNt874", $TSNNt874, 1052);
                                                                                        $TLE245 = $TSNNt874 !== $TLE244; // 1103
                                                                                        __log__ ("TLE245", $TLE245, 1053);
                                                                                        if ($TLE245){
                                                                                            $TLE246 = ', weight = '; // 1105
                                                                                            __log__ ("TLE246", $TLE246, 1055);
                                                                                            $TSNNt875 = $this->weight; // 1106
                                                                                            __log__ ("TSNNt875", $TSNNt875, 1056);
                                                                                            $TLE247 = $TSNNt875->__tostring ();// /* , Call: 1109, Return: 1110, Exception Return: 1111, After: 1107, Exception After: 1108 */ method call
                                                                                            __log__ ("TLE247", $TLE247, 1057);
                                                                                            $TLE248 = $TLE246 . $TLE247; // 1112
                                                                                            __log__ ("TLE248", $TLE248, 1062);
                                                                                            $s = $s . $TLE248; // 1113
                                                                                            __log__ ("s", $s, 1063);
                                                                                        }
                                                                                        else {
                                                                                             // "1114 skip"
                                                                                        }
                                                                                        $TLE249 = '}'; // 1115
                                                                                        __log__ ("TLE249", $TLE249, 1065);
                                                                                        $s = $s . $TLE249; // 1116
                                                                                        __log__ ("s", $s, 1066);
                                                                                        return $s; // 1117
                                                                                    }
    public function getincidentedges ()/* Entry: 1118, Exit: 1119, Exception Exit: 1120 */ 
                                                                                          {
                                                                                              $TSNNt876 = $this->graph; // 1121
                                                                                              __log__ ("TSNNt876", $TSNNt876, 1071);
                                                                                              $TSNNt877 = $this->number; // 1122
                                                                                              __log__ ("TSNNt877", $TSNNt877, 1072);
                                                                                              $TLE250 = $TSNNt876->getincidentedges ($TSNNt877);// /* , Call: 1125, Return: 1126, Exception Return: 1127, After: 1123, Exception After: 1124 */ method call
                                                                                              __log__ ("TLE250", $TLE250, 1073);
                                                                                              return $TLE250; // 1128
                                                                                          }
    public function getemanatingedges ()/* Entry: 1129, Exit: 1130, Exception Exit: 1131 */ 
                                                                                           {
                                                                                               $TSNNt878 = $this->graph; // 1132
                                                                                               __log__ ("TSNNt878", $TSNNt878, 1082);
                                                                                               $TSNNt879 = $this->number; // 1133
                                                                                               __log__ ("TSNNt879", $TSNNt879, 1083);
                                                                                               $TLE251 = $TSNNt878->getemanatingedges ($TSNNt879);// /* , Call: 1136, Return: 1137, Exception Return: 1138, After: 1134, Exception After: 1135 */ method call
                                                                                               __log__ ("TLE251", $TLE251, 1084);
                                                                                               return $TLE251; // 1139
                                                                                           }
    public function getpredecessors ()/* Entry: 1140, Exit: 1141, Exception Exit: 1142 */ 
                                                                                         {
                                                                                             $TLE252 = $this->getincidentedges ();// /* , Call: 1145, Return: 1146, Exception Return: 1147, After: 1143, Exception After: 1144 */ method call
                                                                                             __log__ ("TLE252", $TLE252, 1093);
                                                                                             $TLE253 = new vertex_iteratoraggregate ($this, $TLE252);// /* , Call: 1150, Return: 1151, Exception Return: 1152, After: 1148, Exception After: 1149 */ constructor call
                                                                                             __log__ ("TLE253", $TLE253, 1098);
                                                                                             return $TLE253; // 1153
                                                                                         }
    public function getsuccessors ()/* Entry: 1154, Exit: 1155, Exception Exit: 1156 */ 
                                                                                       {
                                                                                           $TLE254 = $this->getemanatingedges ();// /* , Call: 1159, Return: 1160, Exception Return: 1161, After: 1157, Exception After: 1158 */ method call
                                                                                           __log__ ("TLE254", $TLE254, 1107);
                                                                                           $TLE255 = new vertex_iteratoraggregate ($this, $TLE254);// /* , Call: 1164, Return: 1165, Exception Return: 1166, After: 1162, Exception After: 1163 */ constructor call
                                                                                           __log__ ("TLE255", $TLE255, 1112);
                                                                                           return $TLE255; // 1167
                                                                                       }
}
class basicarray extends abstractobject implements arrayaccess { // "1168"
    protected $data = null;
    protected $length = 0;
    protected $baseIndex = 0;
    public function __construct ($arg1 = 0, $baseIndex = 0)/* Entry: 1169, Exit: 1170, Exception Exit: 1171 */ 
                                                                                                              {
                                                                                                                  abstractobject::__construct ();// /* , Call: 1174, Return: 1175, Exception Return: 1176, After: 1172, Exception After: 1173 */ resolved method call
                                                                                                                  $TLE256 = gettype ($arg1); // "1177native call"
                                                                                                                  __log__ ("TLE256", $TLE256, 1127);
                                                                                                                  $TLE257 = 'integer'; // 1178
                                                                                                                  __log__ ("TLE257", $TLE257, 1128);
                                                                                                                  $TLE258 = $TLE256 == $TLE257; // 1179
                                                                                                                  __log__ ("TLE258", $TLE258, 1129);
                                                                                                                  if ($TLE258){
                                                                                                                      $TSNNt880 = $arg1; // 1181
                                                                                                                      __log__ ("TSNNt880", $TSNNt880, 1131);
                                                                                                                      $this->length = $TSNNt880; // 1182
                                                                                                                      unset ($TSa259); // 1183
                                                                                                                      $TSa259 = (array) $TSa259; // 1184
                                                                                                                      __log__ ("TSa259", $TSa259, 1134);
                                                                                                                      $TSNNt881 = $TSa259; // 1185
                                                                                                                      __log__ ("TSNNt881", $TSNNt881, 1135);
                                                                                                                      $this->data = $TSNNt881; // 1186
                                                                                                                      $i = 0; // 1187
                                                                                                                      __log__ ("i", $i, 1137);
                                                                                                                      $ElcfPF0 = true; // 1188
                                                                                                                      __log__ ("ElcfPF0", $ElcfPF0, 1138);
                                                                                                                      while (True){
                                                                                                                          if ($ElcfPF0){
                                                                                                                              $ElcfPF0 = false; // 1191
                                                                                                                              __log__ ("ElcfPF0", $ElcfPF0, 1141);
                                                                                                                          }
                                                                                                                          else {
                                                                                                                              ++$i; // 1192
                                                                                                                              __log__ ("i", $i, 1142);
                                                                                                                          }
                                                                                                                          $TSNNt882 = $this->length; // 1193
                                                                                                                          __log__ ("TSNNt882", $TSNNt882, 1143);
                                                                                                                          $TLE260 = $i < $TSNNt882; // 1194
                                                                                                                          __log__ ("TLE260", $TLE260, 1144);
                                                                                                                          if ($TLE260){
                                                                                                                               // "1196 skip"
                                                                                                                          }
                                                                                                                          else {
                                                                                                                              break; // 1197
                                                                                                                          }
                                                                                                                          $TLE261 = null; // 1198
                                                                                                                          __log__ ("TLE261", $TLE261, 1148);
                                                                                                                          $TSNNt883 = $this->data; // 1199
                                                                                                                          __log__ ("TSNNt883", $TSNNt883, 1149);
                                                                                                                          $TSNNt883[$i] = $TLE261; // 1200
                                                                                                                          $this->data = $TSNNt883; // 1201
                                                                                                                      }
                                                                                                                      $TSNNt884 = $baseIndex; // 1202
                                                                                                                      __log__ ("TSNNt884", $TSNNt884, 1152);
                                                                                                                      $this->baseIndex = $TSNNt884; // 1203
                                                                                                                  }
                                                                                                                  else {
                                                                                                                      $TLE262 = gettype ($arg1); // "1204native call"
                                                                                                                      __log__ ("TLE262", $TLE262, 1154);
                                                                                                                      $TLE263 = 'array'; // 1205
                                                                                                                      __log__ ("TLE263", $TLE263, 1155);
                                                                                                                      $TLE264 = $TLE262 == $TLE263; // 1206
                                                                                                                      __log__ ("TLE264", $TLE264, 1156);
                                                                                                                      if ($TLE264){
                                                                                                                          $TLE265 = sizeof ($arg1); // "1208native call"
                                                                                                                          __log__ ("TLE265", $TLE265, 1158);
                                                                                                                          $TSNNt885 = $TLE265; // 1209
                                                                                                                          __log__ ("TSNNt885", $TSNNt885, 1159);
                                                                                                                          $this->length = $TSNNt885; // 1210
                                                                                                                          unset ($TSa266); // 1211
                                                                                                                          $TSa266 = (array) $TSa266; // 1212
                                                                                                                          __log__ ("TSa266", $TSa266, 1162);
                                                                                                                          $TSNNt886 = $TSa266; // 1213
                                                                                                                          __log__ ("TSNNt886", $TSNNt886, 1163);
                                                                                                                          $this->data = $TSNNt886; // 1214
                                                                                                                          $i = 0; // 1215
                                                                                                                          __log__ ("i", $i, 1165);
                                                                                                                          $ElcfPF1 = true; // 1216
                                                                                                                          __log__ ("ElcfPF1", $ElcfPF1, 1166);
                                                                                                                          while (True){
                                                                                                                              if ($ElcfPF1){
                                                                                                                                  $ElcfPF1 = false; // 1219
                                                                                                                                  __log__ ("ElcfPF1", $ElcfPF1, 1169);
                                                                                                                              }
                                                                                                                              else {
                                                                                                                                  ++$i; // 1220
                                                                                                                                  __log__ ("i", $i, 1170);
                                                                                                                              }
                                                                                                                              $TSNNt887 = $this->length; // 1221
                                                                                                                              __log__ ("TSNNt887", $TSNNt887, 1171);
                                                                                                                              $TLE267 = $i < $TSNNt887; // 1222
                                                                                                                              __log__ ("TLE267", $TLE267, 1172);
                                                                                                                              if ($TLE267){
                                                                                                                                   // "1224 skip"
                                                                                                                              }
                                                                                                                              else {
                                                                                                                                  break; // 1225
                                                                                                                              }
                                                                                                                              $TSNNt888 = $this->data; // 1226
                                                                                                                              __log__ ("TSNNt888", $TSNNt888, 1176);
                                                                                                                              $TSNNi889 = $arg1[$i]; // 1227
                                                                                                                              __log__ ("TSNNi889", $TSNNi889, 1177);
                                                                                                                              $TSNNt888[$i] = $TSNNi889; // 1228
                                                                                                                              $this->data = $TSNNt888; // 1229
                                                                                                                          }
                                                                                                                          $TSNNt890 = $baseIndex; // 1230
                                                                                                                          __log__ ("TSNNt890", $TSNNt890, 1180);
                                                                                                                          $this->baseIndex = $TSNNt890; // 1231
                                                                                                                      }
                                                                                                                      else {
                                                                                                                          $TLE268 = new typeerror ();// /* , Call: 1234, Return: 1235, Exception Return: 1236, After: 1232, Exception After: 1233 */ constructor call
                                                                                                                          __log__ ("TLE268", $TLE268, 1182);
                                                                                                                          throw $TLE268; // 1237
                                                                                                                      }
                                                                                                                  }
                                                                                                              }
    public function __clone ()/* Entry: 1238, Exit: 1239, Exception Exit: 1240 */ 
                                                                                 {
                                                                                     $TSNNt891 = $this->length; // 1241
                                                                                     __log__ ("TSNNt891", $TSNNt891, 1191);
                                                                                     $TSNNt892 = $this->baseIndex; // 1242
                                                                                     __log__ ("TSNNt892", $TSNNt892, 1192);
                                                                                     $result = new basicarray ($TSNNt891, $TSNNt892);// /* , Call: 1245, Return: 1246, Exception Return: 1247, After: 1243, Exception After: 1244 */ constructor call
                                                                                     __log__ ("result", $result, 1193);
                                                                                     $i = 0; // 1248
                                                                                     __log__ ("i", $i, 1198);
                                                                                     $ElcfPF2 = true; // 1249
                                                                                     __log__ ("ElcfPF2", $ElcfPF2, 1199);
                                                                                     while (True){
                                                                                         if ($ElcfPF2){
                                                                                             $ElcfPF2 = false; // 1252
                                                                                             __log__ ("ElcfPF2", $ElcfPF2, 1202);
                                                                                         }
                                                                                         else {
                                                                                             ++$i; // 1253
                                                                                             __log__ ("i", $i, 1203);
                                                                                         }
                                                                                         $TSNNt893 = $this->length; // 1254
                                                                                         __log__ ("TSNNt893", $TSNNt893, 1204);
                                                                                         $TLE269 = $i < $TSNNt893; // 1255
                                                                                         __log__ ("TLE269", $TLE269, 1205);
                                                                                         if ($TLE269){
                                                                                              // "1257 skip"
                                                                                         }
                                                                                         else {
                                                                                             break; // 1258
                                                                                         }
                                                                                         $TSNNt894 = $result->data; // 1259
                                                                                         __log__ ("TSNNt894", $TSNNt894, 1209);
                                                                                         $TSNNt895 = $this->data; // 1260
                                                                                         __log__ ("TSNNt895", $TSNNt895, 1210);
                                                                                         $TSNNi896 = $TSNNt895[$i]; // 1261
                                                                                         __log__ ("TSNNi896", $TSNNi896, 1211);
                                                                                         $TSNNt894[$i] = $TSNNi896; // 1262
                                                                                         $TSNNt895[$i] = $TSNNi896; // 1263
                                                                                         $this->data = $TSNNt895; // 1264
                                                                                         $result->data = $TSNNt894; // 1265
                                                                                     }
                                                                                     return $result; // 1266
                                                                                 }
    public function offsetexists ($index)/* Entry: 1267, Exit: 1268, Exception Exit: 1269 */ 
                                                                                            {
                                                                                                $TSNNt897 = $this->baseIndex; // 1270
                                                                                                __log__ ("TSNNt897", $TSNNt897, 1220);
                                                                                                $TLE38 = $TSNNt897 <= $index; // 1271
                                                                                                __log__ ("TLE38", $TLE38, 1221);
                                                                                                if ($TLE38){
                                                                                                    $TSNNt898 = $this->baseIndex; // 1273
                                                                                                    __log__ ("TSNNt898", $TSNNt898, 1223);
                                                                                                    $TSNNt899 = $this->length; // 1274
                                                                                                    __log__ ("TSNNt899", $TSNNt899, 1224);
                                                                                                    $TLE270 = $TSNNt898 + $TSNNt899; // 1275
                                                                                                    __log__ ("TLE270", $TLE270, 1225);
                                                                                                    $TEF39 = $index <= $TLE270; // 1276
                                                                                                    __log__ ("TEF39", $TEF39, 1226);
                                                                                                }
                                                                                                else {
                                                                                                    $TEF39 = $TLE38; // 1277
                                                                                                    __log__ ("TEF39", $TEF39, 1227);
                                                                                                }
                                                                                                $TLE271 = (bool) $TEF39; // 1278
                                                                                                __log__ ("TLE271", $TLE271, 1228);
                                                                                                return $TLE271; // 1279
                                                                                            }
    public function offsetget ($index)/* Entry: 1280, Exit: 1281, Exception Exit: 1282 */ 
                                                                                         {
                                                                                             $TLE272 = $this->offsetexists ($index);// /* , Call: 1285, Return: 1286, Exception Return: 1287, After: 1283, Exception After: 1284 */ method call
                                                                                             __log__ ("TLE272", $TLE272, 1233);
                                                                                             $TLE273 = !$TLE272; // 1288
                                                                                             __log__ ("TLE273", $TLE273, 1238);
                                                                                             if ($TLE273){
                                                                                                 $TLE274 = new indexerror ();// /* , Call: 1292, Return: 1293, Exception Return: 1294, After: 1290, Exception After: 1291 */ constructor call
                                                                                                 __log__ ("TLE274", $TLE274, 1240);
                                                                                                 throw $TLE274; // 1295
                                                                                             }
                                                                                             else {
                                                                                                  // "1296 skip"
                                                                                             }
                                                                                             $TSNNt900 = $this->baseIndex; // 1297
                                                                                             __log__ ("TSNNt900", $TSNNt900, 1247);
                                                                                             $TLE275 = $index - $TSNNt900; // 1298
                                                                                             __log__ ("TLE275", $TLE275, 1248);
                                                                                             $TSNNt901 = $this->data; // 1299
                                                                                             __log__ ("TSNNt901", $TSNNt901, 1249);
                                                                                             $TSNNi902 = $TSNNt901[$TLE275]; // 1300
                                                                                             __log__ ("TSNNi902", $TSNNi902, 1250);
                                                                                             return $TSNNi902; // 1301
                                                                                         }
    public function offsetset ($index, $value)/* Entry: 1302, Exit: 1303, Exception Exit: 1304 */ 
                                                                                                 {
                                                                                                     $TLE276 = $this->offsetexists ($index);// /* , Call: 1307, Return: 1308, Exception Return: 1309, After: 1305, Exception After: 1306 */ method call
                                                                                                     __log__ ("TLE276", $TLE276, 1255);
                                                                                                     $TLE277 = !$TLE276; // 1310
                                                                                                     __log__ ("TLE277", $TLE277, 1260);
                                                                                                     if ($TLE277){
                                                                                                         $TLE278 = new indexerror ();// /* , Call: 1314, Return: 1315, Exception Return: 1316, After: 1312, Exception After: 1313 */ constructor call
                                                                                                         __log__ ("TLE278", $TLE278, 1262);
                                                                                                         throw $TLE278; // 1317
                                                                                                     }
                                                                                                     else {
                                                                                                          // "1318 skip"
                                                                                                     }
                                                                                                     $TSNNt903 = $this->baseIndex; // 1319
                                                                                                     __log__ ("TSNNt903", $TSNNt903, 1269);
                                                                                                     $TLE279 = $index - $TSNNt903; // 1320
                                                                                                     __log__ ("TLE279", $TLE279, 1270);
                                                                                                     $TSNNt904 = $this->data; // 1321
                                                                                                     __log__ ("TSNNt904", $TSNNt904, 1271);
                                                                                                     $TSNNt904[$TLE279] = $value; // 1322
                                                                                                     $this->data = $TSNNt904; // 1323
                                                                                                 }
    public function offsetunset ($index)/* Entry: 1324, Exit: 1325, Exception Exit: 1326 */ 
                                                                                           {
                                                                                               $TLE280 = $this->offsetexists ($index);// /* , Call: 1329, Return: 1330, Exception Return: 1331, After: 1327, Exception After: 1328 */ method call
                                                                                               __log__ ("TLE280", $TLE280, 1277);
                                                                                               $TLE281 = !$TLE280; // 1332
                                                                                               __log__ ("TLE281", $TLE281, 1282);
                                                                                               if ($TLE281){
                                                                                                   $TLE282 = new indexerror ();// /* , Call: 1336, Return: 1337, Exception Return: 1338, After: 1334, Exception After: 1335 */ constructor call
                                                                                                   __log__ ("TLE282", $TLE282, 1284);
                                                                                                   throw $TLE282; // 1339
                                                                                               }
                                                                                               else {
                                                                                                    // "1340 skip"
                                                                                               }
                                                                                               $TSNNt905 = $this->baseIndex; // 1341
                                                                                               __log__ ("TSNNt905", $TSNNt905, 1291);
                                                                                               $TLE283 = $index - $TSNNt905; // 1342
                                                                                               __log__ ("TLE283", $TLE283, 1292);
                                                                                               $TLE284 = null; // 1343
                                                                                               __log__ ("TLE284", $TLE284, 1293);
                                                                                               $TSNNt906 = $this->data; // 1344
                                                                                               __log__ ("TSNNt906", $TSNNt906, 1294);
                                                                                               $TSNNt906[$TLE283] = $TLE284; // 1345
                                                                                               $this->data = $TSNNt906; // 1346
                                                                                           }
    public function &getdata ()/* Entry: 1347, Exit: 1348, Exception Exit: 1349 */ 
                                                                                  {
                                                                                      $TSNNt907 = $this->data; // 1350
                                                                                      __log__ ("TSNNt907", $TSNNt907, 1300);
                                                                                      return $TSNNt907; // 1351
                                                                                  }
    public function getbaseindex ()/* Entry: 1352, Exit: 1353, Exception Exit: 1354 */ 
                                                                                      {
                                                                                          $TSNNt908 = $this->baseIndex; // 1355
                                                                                          __log__ ("TSNNt908", $TSNNt908, 1305);
                                                                                          return $TSNNt908; // 1356
                                                                                      }
    public function setbaseindex ($baseIndex)/* Entry: 1357, Exit: 1358, Exception Exit: 1359 */ 
                                                                                                {
                                                                                                    $TSNNt909 = $baseIndex; // 1360
                                                                                                    __log__ ("TSNNt909", $TSNNt909, 1310);
                                                                                                    $this->baseIndex = $TSNNt909; // 1361
                                                                                                }
    public function getlength ()/* Entry: 1362, Exit: 1363, Exception Exit: 1364 */ 
                                                                                   {
                                                                                       $TSNNt910 = $this->length; // 1365
                                                                                       __log__ ("TSNNt910", $TSNNt910, 1315);
                                                                                       return $TSNNt910; // 1366
                                                                                   }
    public function setlength ($length)/* Entry: 1367, Exit: 1368, Exception Exit: 1369 */ 
                                                                                          {
                                                                                              $TSNNt911 = $this->length; // 1370
                                                                                              __log__ ("TSNNt911", $TSNNt911, 1320);
                                                                                              $TLE285 = $TSNNt911 != $length; // 1371
                                                                                              __log__ ("TLE285", $TLE285, 1321);
                                                                                              if ($TLE285){
                                                                                                  unset ($TSa286); // 1373
                                                                                                  $TSa286 = (array) $TSa286; // 1374
                                                                                                  __log__ ("TSa286", $TSa286, 1324);
                                                                                                  $newData = $TSa286; // 1375
                                                                                                  __log__ ("newData", $newData, 1325);
                                                                                                  $TSNNt912 = $this->length; // 1376
                                                                                                  __log__ ("TSNNt912", $TSNNt912, 1326);
                                                                                                  $TLE287 = $TSNNt912 < $length; // 1377
                                                                                                  __log__ ("TLE287", $TLE287, 1327);
                                                                                                  if ($TLE287){
                                                                                                      $TSNNt913 = $this->length; // 1379
                                                                                                      __log__ ("TSNNt913", $TSNNt913, 1329);
                                                                                                      $TEF40 = $TSNNt913; // 1380
                                                                                                      __log__ ("TEF40", $TEF40, 1330);
                                                                                                  }
                                                                                                  else {
                                                                                                      $TEF40 = $length; // 1381
                                                                                                      __log__ ("TEF40", $TEF40, 1331);
                                                                                                  }
                                                                                                  $min = $TEF40; // 1382
                                                                                                  __log__ ("min", $min, 1332);
                                                                                                  $i = 0; // 1383
                                                                                                  __log__ ("i", $i, 1333);
                                                                                                  $ElcfPF3 = true; // 1384
                                                                                                  __log__ ("ElcfPF3", $ElcfPF3, 1334);
                                                                                                  while (True){
                                                                                                      if ($ElcfPF3){
                                                                                                          $ElcfPF3 = false; // 1387
                                                                                                          __log__ ("ElcfPF3", $ElcfPF3, 1337);
                                                                                                      }
                                                                                                      else {
                                                                                                          ++$i; // 1388
                                                                                                          __log__ ("i", $i, 1338);
                                                                                                      }
                                                                                                      $TLE288 = $i < $min; // 1389
                                                                                                      __log__ ("TLE288", $TLE288, 1339);
                                                                                                      if ($TLE288){
                                                                                                           // "1391 skip"
                                                                                                      }
                                                                                                      else {
                                                                                                          break; // 1392
                                                                                                      }
                                                                                                      $TSNNt914 = $this->data; // 1393
                                                                                                      __log__ ("TSNNt914", $TSNNt914, 1343);
                                                                                                      $TSNNi915 = $TSNNt914[$i]; // 1394
                                                                                                      __log__ ("TSNNi915", $TSNNi915, 1344);
                                                                                                      $newData[$i] = $TSNNi915; // 1395
                                                                                                      $TSNNt914[$i] = $TSNNi915; // 1396
                                                                                                      $this->data = $TSNNt914; // 1397
                                                                                                  }
                                                                                                  $TLE289 = 1; // 1398
                                                                                                  __log__ ("TLE289", $TLE289, 1348);
                                                                                                  $i = $min + $TLE289; // 1399
                                                                                                  __log__ ("i", $i, 1349);
                                                                                                  $ElcfPF4 = true; // 1400
                                                                                                  __log__ ("ElcfPF4", $ElcfPF4, 1350);
                                                                                                  while (True){
                                                                                                      if ($ElcfPF4){
                                                                                                          $ElcfPF4 = false; // 1403
                                                                                                          __log__ ("ElcfPF4", $ElcfPF4, 1353);
                                                                                                      }
                                                                                                      else {
                                                                                                          ++$i; // 1404
                                                                                                          __log__ ("i", $i, 1354);
                                                                                                      }
                                                                                                      $TLE290 = $i < $length; // 1405
                                                                                                      __log__ ("TLE290", $TLE290, 1355);
                                                                                                      if ($TLE290){
                                                                                                           // "1407 skip"
                                                                                                      }
                                                                                                      else {
                                                                                                          break; // 1408
                                                                                                      }
                                                                                                      $TLE291 = null; // 1409
                                                                                                      __log__ ("TLE291", $TLE291, 1359);
                                                                                                      $newData[$i] = $TLE291; // 1410
                                                                                                  }
                                                                                                  $TSNNt916 = $newData; // 1411
                                                                                                  __log__ ("TSNNt916", $TSNNt916, 1361);
                                                                                                  $this->data = $TSNNt916; // 1412
                                                                                                  $TSNNt917 = $length; // 1413
                                                                                                  __log__ ("TSNNt917", $TSNNt917, 1363);
                                                                                                  $this->length = $TSNNt917; // 1414
                                                                                              }
                                                                                              else {
                                                                                                   // "1415 skip"
                                                                                              }
                                                                                          }
    public function reduce (ireducefunction $f, $initialState)/* Entry: 1416, Exit: 1417, Exception Exit: 1418 */ 
                                                                                                                 {
                                                                                                                     $acc = $initialState; // 1419
                                                                                                                     __log__ ("acc", $acc, 1369);
                                                                                                                     $i = 0; // 1420
                                                                                                                     __log__ ("i", $i, 1370);
                                                                                                                     $ElcfPF5 = true; // 1421
                                                                                                                     __log__ ("ElcfPF5", $ElcfPF5, 1371);
                                                                                                                     while (True){
                                                                                                                         if ($ElcfPF5){
                                                                                                                             $ElcfPF5 = false; // 1424
                                                                                                                             __log__ ("ElcfPF5", $ElcfPF5, 1374);
                                                                                                                         }
                                                                                                                         else {
                                                                                                                             ++$i; // 1425
                                                                                                                             __log__ ("i", $i, 1375);
                                                                                                                         }
                                                                                                                         $TSNNt918 = $this->data; // 1426
                                                                                                                         __log__ ("TSNNt918", $TSNNt918, 1376);
                                                                                                                         $TLE292 = length ($TSNNt918);// /* , Call: 1429, Return: 1430, Exception Return: 1431, After: 1427, Exception After: 1428 */ function call
                                                                                                                         __log__ ("TLE292", $TLE292, 1377);
                                                                                                                         $TLE293 = $i < $TLE292; // 1432
                                                                                                                         __log__ ("TLE293", $TLE293, 1382);
                                                                                                                         if ($TLE293){
                                                                                                                              // "1434 skip"
                                                                                                                         }
                                                                                                                         else {
                                                                                                                             break; // 1435
                                                                                                                         }
                                                                                                                         $TSNNt919 = $this->data; // 1436
                                                                                                                         __log__ ("TSNNt919", $TSNNt919, 1386);
                                                                                                                         $TSNNi920 = $TSNNt919[$i]; // 1437
                                                                                                                         __log__ ("TSNNi920", $TSNNi920, 1387);
                                                                                                                         $acc = $f->invoke ($acc, $TSNNi920);// /* , Call: 1440, Return: 1441, Exception Return: 1442, After: 1438, Exception After: 1439 */ method call
                                                                                                                         __log__ ("acc", $acc, 1388);
                                                                                                                         $TSNNt919[$i] = $TSNNi920; // 1443
                                                                                                                         $this->data = $TSNNt919; // 1444
                                                                                                                     }
                                                                                                                     return $acc; // 1445
                                                                                                                 }
    public function __tostring ()/* Entry: 1446, Exit: 1447, Exception Exit: 1448 */ 
                                                                                    {
                                                                                        $TLE294 = new basicarraytostringreducefunction ();// /* , Call: 1451, Return: 1452, Exception Return: 1453, After: 1449, Exception After: 1450 */ constructor call
                                                                                        __log__ ("TLE294", $TLE294, 1399);
                                                                                        $TLE295 = ''; // 1454
                                                                                        __log__ ("TLE295", $TLE295, 1404);
                                                                                        $TLE296 = ''; // 1455
                                                                                        __log__ ("TLE296", $TLE296, 1405);
                                                                                        unset ($TSa297); // 1456
                                                                                        $TSa297 = (array) $TSa297; // 1457
                                                                                        __log__ ("TSa297", $TSa297, 1407);
                                                                                        $TLE815 = 0; // 1458
                                                                                        __log__ ("TLE815", $TLE815, 1408);
                                                                                        $TSNNi921 = $TLE295; // 1459
                                                                                        __log__ ("TSNNi921", $TSNNi921, 1409);
                                                                                        $TSa297[$TLE815] = $TSNNi921; // 1460
                                                                                        $TLE816 = 1; // 1461
                                                                                        __log__ ("TLE816", $TLE816, 1411);
                                                                                        $TSNNi922 = $TLE296; // 1462
                                                                                        __log__ ("TSNNi922", $TSNNi922, 1412);
                                                                                        $TSa297[$TLE816] = $TSNNi922; // 1463
                                                                                        $s = $this->reduce ($TLE294, $TSa297);// /* , Call: 1466, Return: 1467, Exception Return: 1468, After: 1464, Exception After: 1465 */ method call
                                                                                        __log__ ("s", $s, 1414);
                                                                                        $TLE298 = 'Array{baseIndex='; // 1469
                                                                                        __log__ ("TLE298", $TLE298, 1419);
                                                                                        $TSNNt923 = $this->baseIndex; // 1470
                                                                                        __log__ ("TSNNt923", $TSNNt923, 1420);
                                                                                        $TLE299 = $TLE298 . $TSNNt923; // 1471
                                                                                        __log__ ("TLE299", $TLE299, 1421);
                                                                                        $TLE300 = ', data=('; // 1472
                                                                                        __log__ ("TLE300", $TLE300, 1422);
                                                                                        $TLE301 = $TLE299 . $TLE300; // 1473
                                                                                        __log__ ("TLE301", $TLE301, 1423);
                                                                                        $TLE302 = 0; // 1474
                                                                                        __log__ ("TLE302", $TLE302, 1424);
                                                                                        $TSNNi924 = $s[$TLE302]; // 1475
                                                                                        __log__ ("TSNNi924", $TSNNi924, 1425);
                                                                                        $TLE303 = $TLE301 . $TSNNi924; // 1476
                                                                                        __log__ ("TLE303", $TLE303, 1426);
                                                                                        $TLE304 = ')}'; // 1477
                                                                                        __log__ ("TLE304", $TLE304, 1427);
                                                                                        $TLE305 = $TLE303 . $TLE304; // 1478
                                                                                        __log__ ("TLE305", $TLE305, 1428);
                                                                                        return $TLE305; // 1479
                                                                                    }
}
class basicarraytostringreducefunction implements ireducefunction { // "1480"
    public function invoke ($s, $item)/* Entry: 1481, Exit: 1482, Exception Exit: 1483 */ 
                                                                                         {
                                                                                             $TLE306 = 0; // 1484
                                                                                             __log__ ("TLE306", $TLE306, 1434);
                                                                                             $TLE307 = 1; // 1485
                                                                                             __log__ ("TLE307", $TLE307, 1435);
                                                                                             $TSNNi925 = $s[$TLE306]; // 1486
                                                                                             __log__ ("TSNNi925", $TSNNi925, 1436);
                                                                                             $TSNNi926 = $s[$TLE307]; // 1487
                                                                                             __log__ ("TSNNi926", $TSNNi926, 1437);
                                                                                             $TLE308 = $TSNNi925 . $TSNNi926; // 1488
                                                                                             __log__ ("TLE308", $TLE308, 1438);
                                                                                             $TLE309 = $item->__tostring ();// /* , Call: 1491, Return: 1492, Exception Return: 1493, After: 1489, Exception After: 1490 */ method call
                                                                                             __log__ ("TLE309", $TLE309, 1439);
                                                                                             $TLE310 = $TLE308 . $TLE309; // 1494
                                                                                             __log__ ("TLE310", $TLE310, 1444);
                                                                                             $TLE311 = ", "; // 1495
                                                                                             __log__ ("TLE311", $TLE311, 1445);
                                                                                             unset ($TSa312); // 1496
                                                                                             $TSa312 = (array) $TSa312; // 1497
                                                                                             __log__ ("TSa312", $TSa312, 1447);
                                                                                             $TLE817 = 0; // 1498
                                                                                             __log__ ("TLE817", $TLE817, 1448);
                                                                                             $TSNNi927 = $TLE310; // 1499
                                                                                             __log__ ("TSNNi927", $TSNNi927, 1449);
                                                                                             $TSa312[$TLE817] = $TSNNi927; // 1500
                                                                                             $TLE818 = 1; // 1501
                                                                                             __log__ ("TLE818", $TLE818, 1451);
                                                                                             $TSNNi928 = $TLE311; // 1502
                                                                                             __log__ ("TSNNi928", $TSNNi928, 1452);
                                                                                             $TSa312[$TLE818] = $TSNNi928; // 1503
                                                                                             return $TSa312; // 1504
                                                                                         }
}
interface iqueue extends icontainer {
    public function enqueue (iobject $obj)/* Entry: 1505, Exit: 1506, Exception Exit: 1507 */ 
                                                                                             ;
    public function dequeue ()/* Entry: 1508, Exit: 1509, Exception Exit: 1510 */ 
                                                                                 ;
    public function gethead ()/* Entry: 1511, Exit: 1512, Exception Exit: 1513 */ 
                                                                                 ;
}
abstract class box extends abstractcomparable { // "1514"
    protected $value = null;
    public function __construct ($value)/* Entry: 1515, Exit: 1516, Exception Exit: 1517 */ 
                                                                                           {
                                                                                               abstractcomparable::__construct ();// /* , Call: 1520, Return: 1521, Exception Return: 1522, After: 1518, Exception After: 1519 */ resolved method call
                                                                                               $TSNNt929 = $value; // 1523
                                                                                               __log__ ("TSNNt929", $TSNNt929, 1473);
                                                                                               $this->value = $TSNNt929; // 1524
                                                                                           }
    public function getvalue ()/* Entry: 1525, Exit: 1526, Exception Exit: 1527 */ 
                                                                                  {
                                                                                      $TSNNt930 = $this->value; // 1528
                                                                                      __log__ ("TSNNt930", $TSNNt930, 1478);
                                                                                      return $TSNNt930; // 1529
                                                                                  }
    public function __tostring ()/* Entry: 1530, Exit: 1531, Exception Exit: 1532 */ 
                                                                                    {
                                                                                        $TSNNt931 = $this->value; // 1533
                                                                                        __log__ ("TSNNt931", $TSNNt931, 1483);
                                                                                        return $TSNNt931; // 1534
                                                                                    }
}
class boxedboolean extends box { // "1535"
    public function __construct ($value)/* Entry: 1536, Exit: 1537, Exception Exit: 1538 */ 
                                                                                           {
                                                                                               if ($value){
                                                                                                   $TEF41 = true; // 1540
                                                                                                   __log__ ("TEF41", $TEF41, 1490);
                                                                                               }
                                                                                               else {
                                                                                                   $TEF41 = false; // 1541
                                                                                                   __log__ ("TEF41", $TEF41, 1491);
                                                                                               }
                                                                                               box::__construct ($TEF41);// /* , Call: 1544, Return: 1545, Exception Return: 1546, After: 1542, Exception After: 1543 */ resolved method call
                                                                                           }
    public function setvalue ($value)/* Entry: 1547, Exit: 1548, Exception Exit: 1549 */ 
                                                                                        {
                                                                                            if ($value){
                                                                                                $TEF42 = true; // 1551
                                                                                                __log__ ("TEF42", $TEF42, 1501);
                                                                                            }
                                                                                            else {
                                                                                                $TEF42 = false; // 1552
                                                                                                __log__ ("TEF42", $TEF42, 1502);
                                                                                            }
                                                                                            $TSNNt932 = $TEF42; // 1553
                                                                                            __log__ ("TSNNt932", $TSNNt932, 1503);
                                                                                            $this->value = $TSNNt932; // 1554
                                                                                        }
    protected function compareto (icomparable $obj)/* Entry: 1555, Exit: 1556, Exception Exit: 1557 */ 
                                                                                                      {
                                                                                                          $TSNNt933 = $this->value; // 1558
                                                                                                          __log__ ("TSNNt933", $TSNNt933, 1508);
                                                                                                          if ($TSNNt933){
                                                                                                              $TEF43 = 1; // 1560
                                                                                                              __log__ ("TEF43", $TEF43, 1510);
                                                                                                          }
                                                                                                          else {
                                                                                                              $TEF43 = 0; // 1561
                                                                                                              __log__ ("TEF43", $TEF43, 1511);
                                                                                                          }
                                                                                                          $TSNNt934 = $obj->value; // 1562
                                                                                                          __log__ ("TSNNt934", $TSNNt934, 1512);
                                                                                                          if ($TSNNt934){
                                                                                                              $TEF44 = 1; // 1564
                                                                                                              __log__ ("TEF44", $TEF44, 1514);
                                                                                                          }
                                                                                                          else {
                                                                                                              $TEF44 = 0; // 1565
                                                                                                              __log__ ("TEF44", $TEF44, 1515);
                                                                                                          }
                                                                                                          $TLE313 = $TEF43 - $TEF44; // 1566
                                                                                                          __log__ ("TLE313", $TLE313, 1516);
                                                                                                          return $TLE313; // 1567
                                                                                                      }
    public function __tostring ()/* Entry: 1568, Exit: 1569, Exception Exit: 1570 */ 
                                                                                    {
                                                                                        if ($item){
                                                                                            $TEF45 = 'true'; // 1572
                                                                                            __log__ ("TEF45", $TEF45, 1522);
                                                                                        }
                                                                                        else {
                                                                                            $TEF45 = 'false'; // 1573
                                                                                            __log__ ("TEF45", $TEF45, 1523);
                                                                                        }
                                                                                        return $TEF45; // 1574
                                                                                    }
    public function gethashcode ()/* Entry: 1575, Exit: 1576, Exception Exit: 1577 */ 
                                                                                     {
                                                                                         $TSNNt935 = $this->value; // 1578
                                                                                         __log__ ("TSNNt935", $TSNNt935, 1528);
                                                                                         if ($TSNNt935){
                                                                                             $TEF46 = 1; // 1580
                                                                                             __log__ ("TEF46", $TEF46, 1530);
                                                                                         }
                                                                                         else {
                                                                                             $TEF46 = 0; // 1581
                                                                                             __log__ ("TEF46", $TEF46, 1531);
                                                                                         }
                                                                                         return $TEF46; // 1582
                                                                                     }
}
class boxedinteger extends box { // "1583"
    public function __construct ($value)/* Entry: 1584, Exit: 1585, Exception Exit: 1586 */ 
                                                                                           {
                                                                                               $TLE314 = intval ($value); // "1587native call"
                                                                                               __log__ ("TLE314", $TLE314, 1537);
                                                                                               box::__construct ($TLE314);// /* , Call: 1590, Return: 1591, Exception Return: 1592, After: 1588, Exception After: 1589 */ resolved method call
                                                                                           }
    public function setvalue ($value)/* Entry: 1593, Exit: 1594, Exception Exit: 1595 */ 
                                                                                        {
                                                                                            $TLE315 = intval ($value); // "1596native call"
                                                                                            __log__ ("TLE315", $TLE315, 1546);
                                                                                            $TSNNt936 = $TLE315; // 1597
                                                                                            __log__ ("TSNNt936", $TSNNt936, 1547);
                                                                                            $this->value = $TSNNt936; // 1598
                                                                                        }
    protected function compareto (icomparable $obj)/* Entry: 1599, Exit: 1600, Exception Exit: 1601 */ 
                                                                                                      {
                                                                                                          $TSNNt937 = $this->value; // 1602
                                                                                                          __log__ ("TSNNt937", $TSNNt937, 1552);
                                                                                                          $TSNNt938 = $obj->value; // 1603
                                                                                                          __log__ ("TSNNt938", $TSNNt938, 1553);
                                                                                                          $TLE316 = $TSNNt937 - $TSNNt938; // 1604
                                                                                                          __log__ ("TLE316", $TLE316, 1554);
                                                                                                          return $TLE316; // 1605
                                                                                                      }
    public function gethashcode ()/* Entry: 1606, Exit: 1607, Exception Exit: 1608 */ 
                                                                                     {
                                                                                         $TSNNt939 = $this->value; // 1609
                                                                                         __log__ ("TSNNt939", $TSNNt939, 1559);
                                                                                         return $TSNNt939; // 1610
                                                                                     }
}
class boxedfloat extends box { // "1611"
    public function __construct ($value)/* Entry: 1612, Exit: 1613, Exception Exit: 1614 */ 
                                                                                           {
                                                                                               $TLE317 = floatval ($value); // "1615native call"
                                                                                               __log__ ("TLE317", $TLE317, 1565);
                                                                                               box::__construct ($TLE317);// /* , Call: 1618, Return: 1619, Exception Return: 1620, After: 1616, Exception After: 1617 */ resolved method call
                                                                                           }
    public function setvalue ($value)/* Entry: 1621, Exit: 1622, Exception Exit: 1623 */ 
                                                                                        {
                                                                                            $TLE318 = floatval ($value); // "1624native call"
                                                                                            __log__ ("TLE318", $TLE318, 1574);
                                                                                            $TSNNt940 = $TLE318; // 1625
                                                                                            __log__ ("TSNNt940", $TSNNt940, 1575);
                                                                                            $this->value = $TSNNt940; // 1626
                                                                                        }
    protected function compareto (icomparable $obj)/* Entry: 1627, Exit: 1628, Exception Exit: 1629 */ 
                                                                                                      {
                                                                                                          $TSNNt941 = $this->value; // 1630
                                                                                                          __log__ ("TSNNt941", $TSNNt941, 1580);
                                                                                                          $TSNNt942 = $obj->value; // 1631
                                                                                                          __log__ ("TSNNt942", $TSNNt942, 1581);
                                                                                                          $TLE319 = $TSNNt941 - $TSNNt942; // 1632
                                                                                                          __log__ ("TLE319", $TLE319, 1582);
                                                                                                          return $TLE319; // 1633
                                                                                                      }
    public function gethashcode ()/* Entry: 1634, Exit: 1635, Exception Exit: 1636 */ 
                                                                                     {
                                                                                         $TSNNt943 = $this->value; // 1637
                                                                                         __log__ ("TSNNt943", $TSNNt943, 1587);
                                                                                         $abs = abs ($TSNNt943); // "1638native call"
                                                                                         __log__ ("abs", $abs, 1588);
                                                                                         $TLE320 = 2; // 1639
                                                                                         __log__ ("TLE320", $TLE320, 1589);
                                                                                         $TLE321 = log ($abs, $TLE320); // "1640native call"
                                                                                         __log__ ("TLE321", $TLE321, 1590);
                                                                                         $TLE322 = 1; // 1641
                                                                                         __log__ ("TLE322", $TLE322, 1591);
                                                                                         $TLE323 = $TLE321 + $TLE322; // 1642
                                                                                         __log__ ("TLE323", $TLE323, 1592);
                                                                                         $exponent = intval ($TLE323); // "1643native call"
                                                                                         __log__ ("exponent", $exponent, 1593);
                                                                                         $TLE324 = 2; // 1644
                                                                                         __log__ ("TLE324", $TLE324, 1594);
                                                                                         $TLE325 = pow ($TLE324, $exponent); // "1645native call"
                                                                                         __log__ ("TLE325", $TLE325, 1595);
                                                                                         $mantissa = $abs / $TLE325; // 1646
                                                                                         __log__ ("mantissa", $mantissa, 1596);
                                                                                         $TLE326 = 2; // 1647
                                                                                         __log__ ("TLE326", $TLE326, 1597);
                                                                                         $TLE327 = $TLE326 * $mantissa; // 1648
                                                                                         __log__ ("TLE327", $TLE327, 1598);
                                                                                         $TLE328 = 1; // 1649
                                                                                         __log__ ("TLE328", $TLE328, 1599);
                                                                                         $TLE329 = $TLE327 - $TLE328; // 1650
                                                                                         __log__ ("TLE329", $TLE329, 1600);
                                                                                         $TLE330 = 2147483648; // 1651
                                                                                         __log__ ("TLE330", $TLE330, 1601);
                                                                                         $TLE331 = $TLE329 * $TLE330; // 1652
                                                                                         __log__ ("TLE331", $TLE331, 1602);
                                                                                         $result = intval ($TLE331); // "1653native call"
                                                                                         __log__ ("result", $result, 1603);
                                                                                         return $result; // 1654
                                                                                     }
}
class boxedstring extends box { // "1655"
    public function __construct ($value)/* Entry: 1656, Exit: 1657, Exception Exit: 1658 */ 
                                                                                           {
                                                                                               $TLE332 = strval ($value); // "1659native call"
                                                                                               __log__ ("TLE332", $TLE332, 1609);
                                                                                               box::__construct ($TLE332);// /* , Call: 1662, Return: 1663, Exception Return: 1664, After: 1660, Exception After: 1661 */ resolved method call
                                                                                           }
    public function setvalue ($value)/* Entry: 1665, Exit: 1666, Exception Exit: 1667 */ 
                                                                                        {
                                                                                            $TLE333 = strval ($value); // "1668native call"
                                                                                            __log__ ("TLE333", $TLE333, 1618);
                                                                                            $TSNNt944 = $TLE333; // 1669
                                                                                            __log__ ("TSNNt944", $TSNNt944, 1619);
                                                                                            $this->value = $TSNNt944; // 1670
                                                                                        }
    protected function compareto (icomparable $obj)/* Entry: 1671, Exit: 1672, Exception Exit: 1673 */ 
                                                                                                      {
                                                                                                          $TSNNt945 = $this->value; // 1674
                                                                                                          __log__ ("TSNNt945", $TSNNt945, 1624);
                                                                                                          $TSNNt946 = $obj->value; // 1675
                                                                                                          __log__ ("TSNNt946", $TSNNt946, 1625);
                                                                                                          $TLE334 = strcmp ($TSNNt945, $TSNNt946); // "1676native call"
                                                                                                          __log__ ("TLE334", $TLE334, 1626);
                                                                                                          return $TLE334; // 1677
                                                                                                      }
    const SHIFT = 6;
    const MASK = 4227858432;
    public function gethashcode ()/* Entry: 1678, Exit: 1679, Exception Exit: 1680 */ 
                                                                                     {
                                                                                         $result = 0; // 1681
                                                                                         __log__ ("result", $result, 1631);
                                                                                         $i = 0; // 1682
                                                                                         __log__ ("i", $i, 1632);
                                                                                         $ElcfPF6 = true; // 1683
                                                                                         __log__ ("ElcfPF6", $ElcfPF6, 1633);
                                                                                         while (True){
                                                                                             if ($ElcfPF6){
                                                                                                 $ElcfPF6 = false; // 1686
                                                                                                 __log__ ("ElcfPF6", $ElcfPF6, 1636);
                                                                                             }
                                                                                             else {
                                                                                                 ++$i; // 1687
                                                                                                 __log__ ("i", $i, 1637);
                                                                                             }
                                                                                             $TSNNt947 = $this->value; // 1688
                                                                                             __log__ ("TSNNt947", $TSNNt947, 1638);
                                                                                             $TLE335 = strlen ($TSNNt947); // "1689native call"
                                                                                             __log__ ("TLE335", $TLE335, 1639);
                                                                                             $TLE336 = $i < $TLE335; // 1690
                                                                                             __log__ ("TLE336", $TLE336, 1640);
                                                                                             if ($TLE336){
                                                                                                  // "1692 skip"
                                                                                             }
                                                                                             else {
                                                                                                 break; // 1693
                                                                                             }
                                                                                             $TLE337 = boxedstring::MASK; // 1694
                                                                                             __log__ ("TLE337", $TLE337, 1644);
                                                                                             $TLE338 = $result & $TLE337; // 1695
                                                                                             __log__ ("TLE338", $TLE338, 1645);
                                                                                             $TLE339 = boxedstring::SHIFT; // 1696
                                                                                             __log__ ("TLE339", $TLE339, 1646);
                                                                                             $TLE340 = $result << $TLE339; // 1697
                                                                                             __log__ ("TLE340", $TLE340, 1647);
                                                                                             $TLE341 = $TLE338 ^ $TLE340; // 1698
                                                                                             __log__ ("TLE341", $TLE341, 1648);
                                                                                             $TLE342 = 1; // 1699
                                                                                             __log__ ("TLE342", $TLE342, 1649);
                                                                                             $TSNNt948 = $this->value; // 1700
                                                                                             __log__ ("TSNNt948", $TSNNt948, 1650);
                                                                                             $TLE343 = substr ($TSNNt948, $i, $TLE342); // "1701native call"
                                                                                             __log__ ("TLE343", $TLE343, 1651);
                                                                                             $TLE344 = ord ($TLE343); // "1702native call"
                                                                                             __log__ ("TLE344", $TLE344, 1652);
                                                                                             $result = $TLE341 ^ $TLE344; // 1703
                                                                                             __log__ ("result", $result, 1653);
                                                                                         }
                                                                                         return $result; // 1704
                                                                                     }
}
function unbox ($box)  // "ln: 1705, lx: 1706, lxe: 1707"
{
    $TLE345 = $box->getvalue ();// /* , Call: 1710, Return: 1711, Exception Return: 1712, After: 1708, Exception After: 1709 */ method call
    __log__ ("TLE345", $TLE345, 1658);
    return $TLE345; // 1713
}
abstract class abstractqueue extends abstractcontainer implements iqueue { // "1714"
    public function __construct ()/* Entry: 1715, Exit: 1716, Exception Exit: 1717 */ 
                                                                                     {
                                                                                         abstractcontainer::__construct ();// /* , Call: 1720, Return: 1721, Exception Return: 1722, After: 1718, Exception After: 1719 */ resolved method call
                                                                                     }
}
class linkedlist_element { // "1723"
    protected $list = null;
    protected $datum = null;
    protected $next = null;
    public function __construct ($list, $datum, $next)/* Entry: 1724, Exit: 1725, Exception Exit: 1726 */ 
                                                                                                         {
                                                                                                             $TSNNt949 = $list; // 1727
                                                                                                             __log__ ("TSNNt949", $TSNNt949, 1677);
                                                                                                             $this->list = $TSNNt949; // 1728
                                                                                                             $TSNNt950 = $datum; // 1729
                                                                                                             __log__ ("TSNNt950", $TSNNt950, 1679);
                                                                                                             $this->datum = $TSNNt950; // 1730
                                                                                                             $TSNNt951 = $next; // 1731
                                                                                                             __log__ ("TSNNt951", $TSNNt951, 1681);
                                                                                                             $this->next = $TSNNt951; // 1732
                                                                                                         }
    public function getlist ()/* Entry: 1733, Exit: 1734, Exception Exit: 1735 */ 
                                                                                 {
                                                                                     $TSNNt952 = $this->list; // 1736
                                                                                     __log__ ("TSNNt952", $TSNNt952, 1686);
                                                                                     return $TSNNt952; // 1737
                                                                                 }
    public function getdatum ()/* Entry: 1738, Exit: 1739, Exception Exit: 1740 */ 
                                                                                  {
                                                                                      $TSNNt953 = $this->datum; // 1741
                                                                                      __log__ ("TSNNt953", $TSNNt953, 1691);
                                                                                      return $TSNNt953; // 1742
                                                                                  }
    public function getnext ()/* Entry: 1743, Exit: 1744, Exception Exit: 1745 */ 
                                                                                 {
                                                                                     $TSNNt954 = $this->next; // 1746
                                                                                     __log__ ("TSNNt954", $TSNNt954, 1696);
                                                                                     return $TSNNt954; // 1747
                                                                                 }
    public function setnext (linkedlist_element $next)/* Entry: 1748, Exit: 1749, Exception Exit: 1750 */ 
                                                                                                         {
                                                                                                             $TSNNt955 = $this->list; // 1751
                                                                                                             __log__ ("TSNNt955", $TSNNt955, 1701);
                                                                                                             $TSNNt956 = $next->list; // 1752
                                                                                                             __log__ ("TSNNt956", $TSNNt956, 1702);
                                                                                                             $TLE346 = $TSNNt955 !== $TSNNt956; // 1753
                                                                                                             __log__ ("TLE346", $TLE346, 1703);
                                                                                                             if ($TLE346){
                                                                                                                 $TLE347 = new argumenterror ();// /* , Call: 1757, Return: 1758, Exception Return: 1759, After: 1755, Exception After: 1756 */ constructor call
                                                                                                                 __log__ ("TLE347", $TLE347, 1705);
                                                                                                                 throw $TLE347; // 1760
                                                                                                             }
                                                                                                             else {
                                                                                                                  // "1761 skip"
                                                                                                             }
                                                                                                             $TSNNt957 = $next; // 1762
                                                                                                             __log__ ("TSNNt957", $TSNNt957, 1712);
                                                                                                             $this->next = $TSNNt957; // 1763
                                                                                                         }
    public function unsetnext ()/* Entry: 1764, Exit: 1765, Exception Exit: 1766 */ 
                                                                                   {
                                                                                       $TLE348 = null; // 1767
                                                                                       __log__ ("TLE348", $TLE348, 1717);
                                                                                       $TSNNt958 = $TLE348; // 1768
                                                                                       __log__ ("TSNNt958", $TSNNt958, 1718);
                                                                                       $this->next = $TSNNt958; // 1769
                                                                                   }
    public function insertafter ($item)/* Entry: 1770, Exit: 1771, Exception Exit: 1772 */ 
                                                                                          {
                                                                                              $TSNNt959 = $this->list; // 1773
                                                                                              __log__ ("TSNNt959", $TSNNt959, 1723);
                                                                                              $TSNNt960 = $this->next; // 1774
                                                                                              __log__ ("TSNNt960", $TSNNt960, 1724);
                                                                                              $TLE349 = new linkedlist_element ($TSNNt959, $item, $TSNNt960);// /* , Call: 1777, Return: 1778, Exception Return: 1779, After: 1775, Exception After: 1776 */ constructor call
                                                                                              __log__ ("TLE349", $TLE349, 1725);
                                                                                              $TSNNt961 = $TLE349; // 1780
                                                                                              __log__ ("TSNNt961", $TSNNt961, 1730);
                                                                                              $this->next = $TSNNt961; // 1781
                                                                                              $TSNNt962 = $this->list; // 1782
                                                                                              __log__ ("TSNNt962", $TSNNt962, 1732);
                                                                                              $TLE350 = $TSNNt962->gettail ();// /* , Call: 1785, Return: 1786, Exception Return: 1787, After: 1783, Exception After: 1784 */ method call
                                                                                              __log__ ("TLE350", $TLE350, 1733);
                                                                                              $TLE351 = $TLE350 === $this; // 1788
                                                                                              __log__ ("TLE351", $TLE351, 1738);
                                                                                              if ($TLE351){
                                                                                                  $TSNNt963 = $this->list; // 1790
                                                                                                  __log__ ("TSNNt963", $TSNNt963, 1740);
                                                                                                  $TSNNt964 = $this->next; // 1791
                                                                                                  __log__ ("TSNNt964", $TSNNt964, 1741);
                                                                                                  $TSNNt963->settail ($TSNNt964);// /* , Call: 1794, Return: 1795, Exception Return: 1796, After: 1792, Exception After: 1793 */ method call
                                                                                              }
                                                                                              else {
                                                                                                   // "1797 skip"
                                                                                              }
                                                                                          }
    public function insertbefore ($item)/* Entry: 1798, Exit: 1799, Exception Exit: 1800 */ 
                                                                                           {
                                                                                               $TSNNt965 = $this->list; // 1801
                                                                                               __log__ ("TSNNt965", $TSNNt965, 1751);
                                                                                               $tmp = new linkedlist_element ($TSNNt965, $item, $this);// /* , Call: 1804, Return: 1805, Exception Return: 1806, After: 1802, Exception After: 1803 */ constructor call
                                                                                               __log__ ("tmp", $tmp, 1752);
                                                                                               $TSNNt966 = $this->list; // 1807
                                                                                               __log__ ("TSNNt966", $TSNNt966, 1757);
                                                                                               $TLE352 = $TSNNt966->gethead ();// /* , Call: 1810, Return: 1811, Exception Return: 1812, After: 1808, Exception After: 1809 */ method call
                                                                                               __log__ ("TLE352", $TLE352, 1758);
                                                                                               $TLE353 = $this === $TLE352; // 1813
                                                                                               __log__ ("TLE353", $TLE353, 1763);
                                                                                               if ($TLE353){
                                                                                                   $TLE354 = null; // 1815
                                                                                                   __log__ ("TLE354", $TLE354, 1765);
                                                                                                   $TLE355 = $tmp === $TLE354; // 1816
                                                                                                   __log__ ("TLE355", $TLE355, 1766);
                                                                                                   if ($TLE355){
                                                                                                       $list->unsethead ();// /* , Call: 1820, Return: 1821, Exception Return: 1822, After: 1818, Exception After: 1819 */ method call
                                                                                                   }
                                                                                                   else {
                                                                                                       $list->sethead ($tmp);// /* , Call: 1825, Return: 1826, Exception Return: 1827, After: 1823, Exception After: 1824 */ method call
                                                                                                   }
                                                                                               }
                                                                                               else {
                                                                                                   $TSNNt967 = $this->list; // 1828
                                                                                                   __log__ ("TSNNt967", $TSNNt967, 1778);
                                                                                                   $prevPtr = $TSNNt967->gethead ();// /* , Call: 1831, Return: 1832, Exception Return: 1833, After: 1829, Exception After: 1830 */ method call
                                                                                                   __log__ ("prevPtr", $prevPtr, 1779);
                                                                                                   while (True){
                                                                                                       $TLE356 = null; // 1835
                                                                                                       __log__ ("TLE356", $TLE356, 1785);
                                                                                                       $TLE47 = $prevPtr !== $TLE356; // 1836
                                                                                                       __log__ ("TLE47", $TLE47, 1786);
                                                                                                       if ($TLE47){
                                                                                                           $TSNNt968 = $prevPtr->next; // 1838
                                                                                                           __log__ ("TSNNt968", $TSNNt968, 1788);
                                                                                                           $TEF48 = $TSNNt968 != $this; // 1839
                                                                                                           __log__ ("TEF48", $TEF48, 1789);
                                                                                                       }
                                                                                                       else {
                                                                                                           $TEF48 = $TLE47; // 1840
                                                                                                           __log__ ("TEF48", $TEF48, 1790);
                                                                                                       }
                                                                                                       $TLE357 = (bool) $TEF48; // 1841
                                                                                                       __log__ ("TLE357", $TLE357, 1791);
                                                                                                       $TLE358 = !$TLE357; // 1842
                                                                                                       __log__ ("TLE358", $TLE358, 1792);
                                                                                                       if ($TLE358){
                                                                                                           break; // 1844
                                                                                                       }
                                                                                                       else {
                                                                                                            // "1845 skip"
                                                                                                       }
                                                                                                       $TSNNt969 = $prevPtr->next; // 1846
                                                                                                       __log__ ("TSNNt969", $TSNNt969, 1796);
                                                                                                       $prevPtr = $TSNNt969; // 1847
                                                                                                       __log__ ("prevPtr", $prevPtr, 1797);
                                                                                                   }
                                                                                                   $TSNNt970 = $tmp; // 1848
                                                                                                   __log__ ("TSNNt970", $TSNNt970, 1798);
                                                                                                   $prevPtr->next = $TSNNt970; // 1849
                                                                                               }
                                                                                           }
    public function extract ()/* Entry: 1850, Exit: 1851, Exception Exit: 1852 */ 
                                                                                 {
                                                                                     $prevPtr = null; // 1853
                                                                                     __log__ ("prevPtr", $prevPtr, 1803);
                                                                                     $TSNNt971 = $this->list; // 1854
                                                                                     __log__ ("TSNNt971", $TSNNt971, 1804);
                                                                                     $TLE359 = $TSNNt971->gethead ();// /* , Call: 1857, Return: 1858, Exception Return: 1859, After: 1855, Exception After: 1856 */ method call
                                                                                     __log__ ("TLE359", $TLE359, 1805);
                                                                                     $TLE360 = $TLE359 === $this; // 1860
                                                                                     __log__ ("TLE360", $TLE360, 1810);
                                                                                     if ($TLE360){
                                                                                         $TLE361 = null; // 1862
                                                                                         __log__ ("TLE361", $TLE361, 1812);
                                                                                         $TSNNt972 = $this->next; // 1863
                                                                                         __log__ ("TSNNt972", $TSNNt972, 1813);
                                                                                         $TLE362 = $TSNNt972 === $TLE361; // 1864
                                                                                         __log__ ("TLE362", $TLE362, 1814);
                                                                                         if ($TLE362){
                                                                                             $list->unsethead ();// /* , Call: 1868, Return: 1869, Exception Return: 1870, After: 1866, Exception After: 1867 */ method call
                                                                                         }
                                                                                         else {
                                                                                             $TSNNt973 = $this->next; // 1871
                                                                                             __log__ ("TSNNt973", $TSNNt973, 1821);
                                                                                             $list->sethead ($TSNNt973);// /* , Call: 1874, Return: 1875, Exception Return: 1876, After: 1872, Exception After: 1873 */ method call
                                                                                         }
                                                                                     }
                                                                                     else {
                                                                                         $TSNNt974 = $this->list; // 1877
                                                                                         __log__ ("TSNNt974", $TSNNt974, 1827);
                                                                                         $prevPtr = $TSNNt974->gethead ();// /* , Call: 1880, Return: 1881, Exception Return: 1882, After: 1878, Exception After: 1879 */ method call
                                                                                         __log__ ("prevPtr", $prevPtr, 1828);
                                                                                         while (True){
                                                                                             $TLE363 = null; // 1884
                                                                                             __log__ ("TLE363", $TLE363, 1834);
                                                                                             $TLE49 = $prevPtr !== $TLE363; // 1885
                                                                                             __log__ ("TLE49", $TLE49, 1835);
                                                                                             if ($TLE49){
                                                                                                 $TSNNt975 = $prevPtr->next; // 1887
                                                                                                 __log__ ("TSNNt975", $TSNNt975, 1837);
                                                                                                 $TEF50 = $TSNNt975 != $this; // 1888
                                                                                                 __log__ ("TEF50", $TEF50, 1838);
                                                                                             }
                                                                                             else {
                                                                                                 $TEF50 = $TLE49; // 1889
                                                                                                 __log__ ("TEF50", $TEF50, 1839);
                                                                                             }
                                                                                             $TLE364 = (bool) $TEF50; // 1890
                                                                                             __log__ ("TLE364", $TLE364, 1840);
                                                                                             $TLE365 = !$TLE364; // 1891
                                                                                             __log__ ("TLE365", $TLE365, 1841);
                                                                                             if ($TLE365){
                                                                                                 break; // 1893
                                                                                             }
                                                                                             else {
                                                                                                  // "1894 skip"
                                                                                             }
                                                                                             $TSNNt976 = $prevPtr->next; // 1895
                                                                                             __log__ ("TSNNt976", $TSNNt976, 1845);
                                                                                             $prevPtr = $TSNNt976; // 1896
                                                                                             __log__ ("prevPtr", $prevPtr, 1846);
                                                                                         }
                                                                                         $TLE366 = "prevPtr"; // 1897 // "lookup"
                                                                                         $TLE367 = null; // 1898
                                                                                         __log__ ("TLE367", $TLE367, 1848);
                                                                                         $TLE368 = $TLE366 === $TLE367; // 1899
                                                                                         __log__ ("TLE368", $TLE368, 1849);
                                                                                         if ($TLE368){
                                                                                             $TLE369 = new argumenterror ();// /* , Call: 1903, Return: 1904, Exception Return: 1905, After: 1901, Exception After: 1902 */ constructor call
                                                                                             __log__ ("TLE369", $TLE369, 1851);
                                                                                             throw $TLE369; // 1906
                                                                                         }
                                                                                         else {
                                                                                              // "1907 skip"
                                                                                         }
                                                                                         $TSNNt978 = $this->next; // 1908
                                                                                         __log__ ("TSNNt978", $TSNNt978, 1858);
                                                                                         $TSNNt977 = $TSNNt978; // 1909
                                                                                         __log__ ("TSNNt977", $TSNNt977, 1859);
                                                                                         $prevPtr->next = $TSNNt977; // 1910
                                                                                     }
                                                                                     $TSNNt979 = $this->list; // 1911
                                                                                     __log__ ("TSNNt979", $TSNNt979, 1861);
                                                                                     $TLE370 = $TSNNt979->gettail ();// /* , Call: 1914, Return: 1915, Exception Return: 1916, After: 1912, Exception After: 1913 */ method call
                                                                                     __log__ ("TLE370", $TLE370, 1862);
                                                                                     $TLE371 = $TLE370 === $this; // 1917
                                                                                     __log__ ("TLE371", $TLE371, 1867);
                                                                                     if ($TLE371){
                                                                                         $TLE372 = null; // 1919
                                                                                         __log__ ("TLE372", $TLE372, 1869);
                                                                                         $TLE373 = $prevPtr === $TLE372; // 1920
                                                                                         __log__ ("TLE373", $TLE373, 1870);
                                                                                         if ($TLE373){
                                                                                             $list->unsettail ();// /* , Call: 1924, Return: 1925, Exception Return: 1926, After: 1922, Exception After: 1923 */ method call
                                                                                         }
                                                                                         else {
                                                                                             $list->settail ($prevPtr);// /* , Call: 1929, Return: 1930, Exception Return: 1931, After: 1927, Exception After: 1928 */ method call
                                                                                         }
                                                                                     }
                                                                                     else {
                                                                                          // "1932 skip"
                                                                                     }
                                                                                 }
}
class linkedlist extends abstractobject { // "1933"
    protected $head = null;
    protected $tail = null;
    public function __construct ()/* Entry: 1934, Exit: 1935, Exception Exit: 1936 */ 
                                                                                     {
                                                                                         abstractobject::__construct ();// /* , Call: 1939, Return: 1940, Exception Return: 1941, After: 1937, Exception After: 1938 */ resolved method call
                                                                                         $TLE374 = null; // 1942
                                                                                         __log__ ("TLE374", $TLE374, 1892);
                                                                                         $TSNNt980 = $TLE374; // 1943
                                                                                         __log__ ("TSNNt980", $TSNNt980, 1893);
                                                                                         $this->head = $TSNNt980; // 1944
                                                                                         $TLE375 = null; // 1945
                                                                                         __log__ ("TLE375", $TLE375, 1895);
                                                                                         $TSNNt981 = $TLE375; // 1946
                                                                                         __log__ ("TSNNt981", $TSNNt981, 1896);
                                                                                         $this->tail = $TSNNt981; // 1947
                                                                                     }
    public function purge ()/* Entry: 1948, Exit: 1949, Exception Exit: 1950 */ 
                                                                               {
                                                                                   $TLE376 = null; // 1951
                                                                                   __log__ ("TLE376", $TLE376, 1901);
                                                                                   $TSNNt982 = $TLE376; // 1952
                                                                                   __log__ ("TSNNt982", $TSNNt982, 1902);
                                                                                   $this->head = $TSNNt982; // 1953
                                                                                   $TLE377 = null; // 1954
                                                                                   __log__ ("TLE377", $TLE377, 1904);
                                                                                   $TSNNt983 = $TLE377; // 1955
                                                                                   __log__ ("TSNNt983", $TSNNt983, 1905);
                                                                                   $this->tail = $TSNNt983; // 1956
                                                                               }
    public function gethead ()/* Entry: 1957, Exit: 1958, Exception Exit: 1959 */ 
                                                                                 {
                                                                                     $TSNNt984 = $this->head; // 1960
                                                                                     __log__ ("TSNNt984", $TSNNt984, 1910);
                                                                                     return $TSNNt984; // 1961
                                                                                 }
    public function sethead (linkedlist_element $element)/* Entry: 1962, Exit: 1963, Exception Exit: 1964 */ 
                                                                                                            {
                                                                                                                $TLE378 = $element->getlist ();// /* , Call: 1967, Return: 1968, Exception Return: 1969, After: 1965, Exception After: 1966 */ method call
                                                                                                                __log__ ("TLE378", $TLE378, 1915);
                                                                                                                $TLE379 = $TLE378 !== $this; // 1970
                                                                                                                __log__ ("TLE379", $TLE379, 1920);
                                                                                                                if ($TLE379){
                                                                                                                    $TLE380 = new argumenterror ();// /* , Call: 1974, Return: 1975, Exception Return: 1976, After: 1972, Exception After: 1973 */ constructor call
                                                                                                                    __log__ ("TLE380", $TLE380, 1922);
                                                                                                                    throw $TLE380; // 1977
                                                                                                                }
                                                                                                                else {
                                                                                                                     // "1978 skip"
                                                                                                                }
                                                                                                                $TSNNt985 = $element; // 1979
                                                                                                                __log__ ("TSNNt985", $TSNNt985, 1929);
                                                                                                                $this->head = $TSNNt985; // 1980
                                                                                                            }
    public function unsethead ()/* Entry: 1981, Exit: 1982, Exception Exit: 1983 */ 
                                                                                   {
                                                                                       $TLE381 = null; // 1984
                                                                                       __log__ ("TLE381", $TLE381, 1934);
                                                                                       $TSNNt986 = $TLE381; // 1985
                                                                                       __log__ ("TSNNt986", $TSNNt986, 1935);
                                                                                       $this->head = $TSNNt986; // 1986
                                                                                   }
    public function gettail ()/* Entry: 1987, Exit: 1988, Exception Exit: 1989 */ 
                                                                                 {
                                                                                     $TSNNt987 = $this->tail; // 1990
                                                                                     __log__ ("TSNNt987", $TSNNt987, 1940);
                                                                                     return $TSNNt987; // 1991
                                                                                 }
    public function settail (linkedlist_element $element)/* Entry: 1992, Exit: 1993, Exception Exit: 1994 */ 
                                                                                                            {
                                                                                                                $TLE382 = $element->getlist ();// /* , Call: 1997, Return: 1998, Exception Return: 1999, After: 1995, Exception After: 1996 */ method call
                                                                                                                __log__ ("TLE382", $TLE382, 1945);
                                                                                                                $TLE383 = $TLE382 !== $this; // 2000
                                                                                                                __log__ ("TLE383", $TLE383, 1950);
                                                                                                                if ($TLE383){
                                                                                                                    $TLE384 = new argumenterror ();// /* , Call: 2004, Return: 2005, Exception Return: 2006, After: 2002, Exception After: 2003 */ constructor call
                                                                                                                    __log__ ("TLE384", $TLE384, 1952);
                                                                                                                    throw $TLE384; // 2007
                                                                                                                }
                                                                                                                else {
                                                                                                                     // "2008 skip"
                                                                                                                }
                                                                                                                $TSNNt988 = $element; // 2009
                                                                                                                __log__ ("TSNNt988", $TSNNt988, 1959);
                                                                                                                $this->tail = $TSNNt988; // 2010
                                                                                                            }
    public function unsettail ()/* Entry: 2011, Exit: 2012, Exception Exit: 2013 */ 
                                                                                   {
                                                                                       $TLE385 = null; // 2014
                                                                                       __log__ ("TLE385", $TLE385, 1964);
                                                                                       $TSNNt989 = $TLE385; // 2015
                                                                                       __log__ ("TSNNt989", $TSNNt989, 1965);
                                                                                       $this->tail = $TSNNt989; // 2016
                                                                                   }
    public function isempty ()/* Entry: 2017, Exit: 2018, Exception Exit: 2019 */ 
                                                                                 {
                                                                                     $TLE386 = null; // 2020
                                                                                     __log__ ("TLE386", $TLE386, 1970);
                                                                                     $TSNNt990 = $this->head; // 2021
                                                                                     __log__ ("TSNNt990", $TSNNt990, 1971);
                                                                                     $TLE387 = $TSNNt990 === $TLE386; // 2022
                                                                                     __log__ ("TLE387", $TLE387, 1972);
                                                                                     return $TLE387; // 2023
                                                                                 }
    public function getfirst ()/* Entry: 2024, Exit: 2025, Exception Exit: 2026 */ 
                                                                                  {
                                                                                      $TLE388 = null; // 2027
                                                                                      __log__ ("TLE388", $TLE388, 1977);
                                                                                      $TSNNt991 = $this->head; // 2028
                                                                                      __log__ ("TSNNt991", $TSNNt991, 1978);
                                                                                      $TLE389 = $TSNNt991 === $TLE388; // 2029
                                                                                      __log__ ("TLE389", $TLE389, 1979);
                                                                                      if ($TLE389){
                                                                                          $TLE390 = new containeremptyexception ();// /* , Call: 2033, Return: 2034, Exception Return: 2035, After: 2031, Exception After: 2032 */ constructor call
                                                                                          __log__ ("TLE390", $TLE390, 1981);
                                                                                          throw $TLE390; // 2036
                                                                                      }
                                                                                      else {
                                                                                           // "2037 skip"
                                                                                      }
                                                                                      $TSNNt992 = $this->head; // 2038
                                                                                      __log__ ("TSNNt992", $TSNNt992, 1988);
                                                                                      $TLE391 = $TSNNt992->getdatum ();// /* , Call: 2041, Return: 2042, Exception Return: 2043, After: 2039, Exception After: 2040 */ method call
                                                                                      __log__ ("TLE391", $TLE391, 1989);
                                                                                      return $TLE391; // 2044
                                                                                  }
    public function getlast ()/* Entry: 2045, Exit: 2046, Exception Exit: 2047 */ 
                                                                                 {
                                                                                     $TLE392 = null; // 2048
                                                                                     __log__ ("TLE392", $TLE392, 1998);
                                                                                     $TSNNt993 = $this->tail; // 2049
                                                                                     __log__ ("TSNNt993", $TSNNt993, 1999);
                                                                                     $TLE393 = $TSNNt993 === $TLE392; // 2050
                                                                                     __log__ ("TLE393", $TLE393, 2000);
                                                                                     if ($TLE393){
                                                                                         $TLE394 = new containeremptyexception ();// /* , Call: 2054, Return: 2055, Exception Return: 2056, After: 2052, Exception After: 2053 */ constructor call
                                                                                         __log__ ("TLE394", $TLE394, 2002);
                                                                                         throw $TLE394; // 2057
                                                                                     }
                                                                                     else {
                                                                                          // "2058 skip"
                                                                                     }
                                                                                     $TSNNt994 = $this->tail; // 2059
                                                                                     __log__ ("TSNNt994", $TSNNt994, 2009);
                                                                                     $TLE395 = $TSNNt994->getdatum ();// /* , Call: 2062, Return: 2063, Exception Return: 2064, After: 2060, Exception After: 2061 */ method call
                                                                                     __log__ ("TLE395", $TLE395, 2010);
                                                                                     return $TLE395; // 2065
                                                                                 }
    public function prepend ($item)/* Entry: 2066, Exit: 2067, Exception Exit: 2068 */ 
                                                                                      {
                                                                                          $TSNNt995 = $this->head; // 2069
                                                                                          __log__ ("TSNNt995", $TSNNt995, 2019);
                                                                                          $tmp = new linkedlist_element ($this, $item, $TSNNt995);// /* , Call: 2072, Return: 2073, Exception Return: 2074, After: 2070, Exception After: 2071 */ constructor call
                                                                                          __log__ ("tmp", $tmp, 2020);
                                                                                          $TLE396 = null; // 2075
                                                                                          __log__ ("TLE396", $TLE396, 2025);
                                                                                          $TSNNt996 = $this->head; // 2076
                                                                                          __log__ ("TSNNt996", $TSNNt996, 2026);
                                                                                          $TLE397 = $TSNNt996 === $TLE396; // 2077
                                                                                          __log__ ("TLE397", $TLE397, 2027);
                                                                                          if ($TLE397){
                                                                                              $TSNNt997 = $tmp; // 2079
                                                                                              __log__ ("TSNNt997", $TSNNt997, 2029);
                                                                                              $this->tail = $TSNNt997; // 2080
                                                                                          }
                                                                                          else {
                                                                                               // "2081 skip"
                                                                                          }
                                                                                          $TSNNt998 = $tmp; // 2082
                                                                                          __log__ ("TSNNt998", $TSNNt998, 2032);
                                                                                          $this->head = $TSNNt998; // 2083
                                                                                      }
    public function append ($item)/* Entry: 2084, Exit: 2085, Exception Exit: 2086 */ 
                                                                                     {
                                                                                         $TLE398 = null; // 2087
                                                                                         __log__ ("TLE398", $TLE398, 2037);
                                                                                         $tmp = new linkedlist_element ($this, $item, $TLE398);// /* , Call: 2090, Return: 2091, Exception Return: 2092, After: 2088, Exception After: 2089 */ constructor call
                                                                                         __log__ ("tmp", $tmp, 2038);
                                                                                         $TLE399 = null; // 2093
                                                                                         __log__ ("TLE399", $TLE399, 2043);
                                                                                         $TSNNt999 = $this->head; // 2094
                                                                                         __log__ ("TSNNt999", $TSNNt999, 2044);
                                                                                         $TLE400 = $TSNNt999 === $TLE399; // 2095
                                                                                         __log__ ("TLE400", $TLE400, 2045);
                                                                                         if ($TLE400){
                                                                                             $TSNNt1000 = $tmp; // 2097
                                                                                             __log__ ("TSNNt1000", $TSNNt1000, 2047);
                                                                                             $this->head = $TSNNt1000; // 2098
                                                                                         }
                                                                                         else {
                                                                                             $TSNNt1001 = $this->tail; // 2099
                                                                                             __log__ ("TSNNt1001", $TSNNt1001, 2049);
                                                                                             $TSNNt1001->setnext ($tmp);// /* , Call: 2102, Return: 2103, Exception Return: 2104, After: 2100, Exception After: 2101 */ method call
                                                                                         }
                                                                                         $TSNNt1002 = $tmp; // 2105
                                                                                         __log__ ("TSNNt1002", $TSNNt1002, 2055);
                                                                                         $this->tail = $TSNNt1002; // 2106
                                                                                     }
    public function __clone ()/* Entry: 2107, Exit: 2108, Exception Exit: 2109 */ 
                                                                                 {
                                                                                     $result = new linkedlist ();// /* , Call: 2112, Return: 2113, Exception Return: 2114, After: 2110, Exception After: 2111 */ constructor call
                                                                                     __log__ ("result", $result, 2060);
                                                                                     $TSNNt1003 = $this->head; // 2115
                                                                                     __log__ ("TSNNt1003", $TSNNt1003, 2065);
                                                                                     $ptr = $TSNNt1003; // 2116
                                                                                     __log__ ("ptr", $ptr, 2066);
                                                                                     $ElcfPF7 = true; // 2117
                                                                                     __log__ ("ElcfPF7", $ElcfPF7, 2067);
                                                                                     while (True){
                                                                                         if ($ElcfPF7){
                                                                                             $ElcfPF7 = false; // 2120
                                                                                             __log__ ("ElcfPF7", $ElcfPF7, 2070);
                                                                                         }
                                                                                         else {
                                                                                             $ptr = $ptr->getnext ();// /* , Call: 2123, Return: 2124, Exception Return: 2125, After: 2121, Exception After: 2122 */ method call
                                                                                             __log__ ("ptr", $ptr, 2071);
                                                                                         }
                                                                                         $TLE401 = null; // 2126
                                                                                         __log__ ("TLE401", $TLE401, 2076);
                                                                                         $TLE402 = $ptr !== $TLE401; // 2127
                                                                                         __log__ ("TLE402", $TLE402, 2077);
                                                                                         if ($TLE402){
                                                                                              // "2129 skip"
                                                                                         }
                                                                                         else {
                                                                                             break; // 2130
                                                                                         }
                                                                                         $TLE403 = $ptr->getdatum ();// /* , Call: 2133, Return: 2134, Exception Return: 2135, After: 2131, Exception After: 2132 */ method call
                                                                                         __log__ ("TLE403", $TLE403, 2081);
                                                                                         $result->append ($TLE403);// /* , Call: 2138, Return: 2139, Exception Return: 2140, After: 2136, Exception After: 2137 */ method call
                                                                                     }
                                                                                     return $result; // 2141
                                                                                 }
    public function extract ($item)/* Entry: 2142, Exit: 2143, Exception Exit: 2144 */ 
                                                                                      {
                                                                                          $TSNNt1004 = $this->head; // 2145
                                                                                          __log__ ("TSNNt1004", $TSNNt1004, 2095);
                                                                                          $ptr = $TSNNt1004; // 2146
                                                                                          __log__ ("ptr", $ptr, 2096);
                                                                                          $prevPtr = null; // 2147
                                                                                          __log__ ("prevPtr", $prevPtr, 2097);
                                                                                          while (True){
                                                                                              $TLE404 = null; // 2149
                                                                                              __log__ ("TLE404", $TLE404, 2099);
                                                                                              $TLE51 = $ptr !== $TLE404; // 2150
                                                                                              __log__ ("TLE51", $TLE51, 2100);
                                                                                              if ($TLE51){
                                                                                                  $TLE405 = $ptr->getdatum ();// /* , Call: 2154, Return: 2155, Exception Return: 2156, After: 2152, Exception After: 2153 */ method call
                                                                                                  __log__ ("TLE405", $TLE405, 2102);
                                                                                                  $TEF52 = $TLE405 !== $item; // 2157
                                                                                                  __log__ ("TEF52", $TEF52, 2107);
                                                                                              }
                                                                                              else {
                                                                                                  $TEF52 = $TLE51; // 2158
                                                                                                  __log__ ("TEF52", $TEF52, 2108);
                                                                                              }
                                                                                              $TLE406 = (bool) $TEF52; // 2159
                                                                                              __log__ ("TLE406", $TLE406, 2109);
                                                                                              $TLE407 = !$TLE406; // 2160
                                                                                              __log__ ("TLE407", $TLE407, 2110);
                                                                                              if ($TLE407){
                                                                                                  break; // 2162
                                                                                              }
                                                                                              else {
                                                                                                   // "2163 skip"
                                                                                              }
                                                                                              $prevPtr = $ptr; // 2164
                                                                                              __log__ ("prevPtr", $prevPtr, 2114);
                                                                                              $ptr = $ptr->getnext ();// /* , Call: 2167, Return: 2168, Exception Return: 2169, After: 2165, Exception After: 2166 */ method call
                                                                                              __log__ ("ptr", $ptr, 2115);
                                                                                          }
                                                                                          $TLE408 = null; // 2170
                                                                                          __log__ ("TLE408", $TLE408, 2120);
                                                                                          $TLE409 = $ptr === $TLE408; // 2171
                                                                                          __log__ ("TLE409", $TLE409, 2121);
                                                                                          if ($TLE409){
                                                                                              $TLE410 = new argumenterror ();// /* , Call: 2175, Return: 2176, Exception Return: 2177, After: 2173, Exception After: 2174 */ constructor call
                                                                                              __log__ ("TLE410", $TLE410, 2123);
                                                                                              throw $TLE410; // 2178
                                                                                          }
                                                                                          else {
                                                                                               // "2179 skip"
                                                                                          }
                                                                                          $TSNNt1005 = $this->head; // 2180
                                                                                          __log__ ("TSNNt1005", $TSNNt1005, 2130);
                                                                                          $TLE411 = $ptr === $TSNNt1005; // 2181
                                                                                          __log__ ("TLE411", $TLE411, 2131);
                                                                                          if ($TLE411){
                                                                                              $TLE412 = $ptr->getnext ();// /* , Call: 2185, Return: 2186, Exception Return: 2187, After: 2183, Exception After: 2184 */ method call
                                                                                              __log__ ("TLE412", $TLE412, 2133);
                                                                                              $TSNNt1006 = $TLE412; // 2188
                                                                                              __log__ ("TSNNt1006", $TSNNt1006, 2138);
                                                                                              $this->head = $TSNNt1006; // 2189
                                                                                          }
                                                                                          else {
                                                                                              $tmp = $ptr->getnext ();// /* , Call: 2192, Return: 2193, Exception Return: 2194, After: 2190, Exception After: 2191 */ method call
                                                                                              __log__ ("tmp", $tmp, 2140);
                                                                                              $TLE413 = null; // 2195
                                                                                              __log__ ("TLE413", $TLE413, 2145);
                                                                                              $TLE414 = $tmp === $TLE413; // 2196
                                                                                              __log__ ("TLE414", $TLE414, 2146);
                                                                                              if ($TLE414){
                                                                                                  $prevPtr->unsetnext ();// /* , Call: 2200, Return: 2201, Exception Return: 2202, After: 2198, Exception After: 2199 */ method call
                                                                                              }
                                                                                              else {
                                                                                                  $TLE415 = $ptr->getnext ();// /* , Call: 2205, Return: 2206, Exception Return: 2207, After: 2203, Exception After: 2204 */ method call
                                                                                                  __log__ ("TLE415", $TLE415, 2153);
                                                                                                  $prevPtr->setnext ($TLE415);// /* , Call: 2210, Return: 2211, Exception Return: 2212, After: 2208, Exception After: 2209 */ method call
                                                                                              }
                                                                                          }
                                                                                          $TSNNt1007 = $this->tail; // 2213
                                                                                          __log__ ("TSNNt1007", $TSNNt1007, 2163);
                                                                                          $TLE416 = $ptr === $TSNNt1007; // 2214
                                                                                          __log__ ("TLE416", $TLE416, 2164);
                                                                                          if ($TLE416){
                                                                                              $TSNNt1008 = $prevPtr; // 2216
                                                                                              __log__ ("TSNNt1008", $TSNNt1008, 2166);
                                                                                              $this->tail = $TSNNt1008; // 2217
                                                                                          }
                                                                                          else {
                                                                                               // "2218 skip"
                                                                                          }
                                                                                      }
    public function reduce (ireducefunction $f, $initialState)/* Entry: 2219, Exit: 2220, Exception Exit: 2221 */ 
                                                                                                                 {
                                                                                                                     $state = $initialState; // 2222
                                                                                                                     __log__ ("state", $state, 2172);
                                                                                                                     $TSNNt1009 = $this->head; // 2223
                                                                                                                     __log__ ("TSNNt1009", $TSNNt1009, 2173);
                                                                                                                     $ptr = $TSNNt1009; // 2224
                                                                                                                     __log__ ("ptr", $ptr, 2174);
                                                                                                                     while (True){
                                                                                                                         $TLE417 = null; // 2226
                                                                                                                         __log__ ("TLE417", $TLE417, 2176);
                                                                                                                         $TLE418 = $ptr !== $TLE417; // 2227
                                                                                                                         __log__ ("TLE418", $TLE418, 2177);
                                                                                                                         $TLE419 = !$TLE418; // 2228
                                                                                                                         __log__ ("TLE419", $TLE419, 2178);
                                                                                                                         if ($TLE419){
                                                                                                                             break; // 2230
                                                                                                                         }
                                                                                                                         else {
                                                                                                                              // "2231 skip"
                                                                                                                         }
                                                                                                                         $TLE420 = $ptr->getdatum ();// /* , Call: 2234, Return: 2235, Exception Return: 2236, After: 2232, Exception After: 2233 */ method call
                                                                                                                         __log__ ("TLE420", $TLE420, 2182);
                                                                                                                         $state = $f->invoke ($state, $TLE420);// /* , Call: 2239, Return: 2240, Exception Return: 2241, After: 2237, Exception After: 2238 */ method call
                                                                                                                         __log__ ("state", $state, 2187);
                                                                                                                         $ptr = $ptr->getnext ();// /* , Call: 2244, Return: 2245, Exception Return: 2246, After: 2242, Exception After: 2243 */ method call
                                                                                                                         __log__ ("ptr", $ptr, 2192);
                                                                                                                     }
                                                                                                                     return $state; // 2247
                                                                                                                 }
    public function __tostring ()/* Entry: 2248, Exit: 2249, Exception Exit: 2250 */ 
                                                                                    {
                                                                                        $TLE421 = new linkedlisttostringreducefunction ();// /* , Call: 2253, Return: 2254, Exception Return: 2255, After: 2251, Exception After: 2252 */ constructor call
                                                                                        __log__ ("TLE421", $TLE421, 2201);
                                                                                        $TLE422 = ''; // 2256
                                                                                        __log__ ("TLE422", $TLE422, 2206);
                                                                                        $TLE423 = ''; // 2257
                                                                                        __log__ ("TLE423", $TLE423, 2207);
                                                                                        unset ($TSa424); // 2258
                                                                                        $TSa424 = (array) $TSa424; // 2259
                                                                                        __log__ ("TSa424", $TSa424, 2209);
                                                                                        $TLE819 = 0; // 2260
                                                                                        __log__ ("TLE819", $TLE819, 2210);
                                                                                        $TSNNi1010 = $TLE422; // 2261
                                                                                        __log__ ("TSNNi1010", $TSNNi1010, 2211);
                                                                                        $TSa424[$TLE819] = $TSNNi1010; // 2262
                                                                                        $TLE820 = 1; // 2263
                                                                                        __log__ ("TLE820", $TLE820, 2213);
                                                                                        $TSNNi1011 = $TLE423; // 2264
                                                                                        __log__ ("TSNNi1011", $TSNNi1011, 2214);
                                                                                        $TSa424[$TLE820] = $TSNNi1011; // 2265
                                                                                        $s = $this->reduce ($TLE421, $TSa424);// /* , Call: 2268, Return: 2269, Exception Return: 2270, After: 2266, Exception After: 2267 */ method call
                                                                                        __log__ ("s", $s, 2216);
                                                                                        $TLE425 = 'LinkedList{'; // 2271
                                                                                        __log__ ("TLE425", $TLE425, 2221);
                                                                                        $TLE426 = 0; // 2272
                                                                                        __log__ ("TLE426", $TLE426, 2222);
                                                                                        $TSNNi1012 = $s[$TLE426]; // 2273
                                                                                        __log__ ("TSNNi1012", $TSNNi1012, 2223);
                                                                                        $TLE427 = $TLE425 . $TSNNi1012; // 2274
                                                                                        __log__ ("TLE427", $TLE427, 2224);
                                                                                        $TLE428 = '}'; // 2275
                                                                                        __log__ ("TLE428", $TLE428, 2225);
                                                                                        $TLE429 = $TLE427 . $TLE428; // 2276
                                                                                        __log__ ("TLE429", $TLE429, 2226);
                                                                                        return $TLE429; // 2277
                                                                                    }
}
class linkedlisttostringreducefunction implements ireducefunction { // "2278"
    public function invoke ($s, $item)/* Entry: 2279, Exit: 2280, Exception Exit: 2281 */ 
                                                                                         {
                                                                                             $TLE430 = 0; // 2282
                                                                                             __log__ ("TLE430", $TLE430, 2232);
                                                                                             $TLE431 = 1; // 2283
                                                                                             __log__ ("TLE431", $TLE431, 2233);
                                                                                             $TSNNi1013 = $s[$TLE430]; // 2284
                                                                                             __log__ ("TSNNi1013", $TSNNi1013, 2234);
                                                                                             $TSNNi1014 = $s[$TLE431]; // 2285
                                                                                             __log__ ("TSNNi1014", $TSNNi1014, 2235);
                                                                                             $TLE432 = $TSNNi1013 . $TSNNi1014; // 2286
                                                                                             __log__ ("TLE432", $TLE432, 2236);
                                                                                             $TLE433 = $item->__tostring ();// /* , Call: 2289, Return: 2290, Exception Return: 2291, After: 2287, Exception After: 2288 */ method call
                                                                                             __log__ ("TLE433", $TLE433, 2237);
                                                                                             $TLE434 = $TLE432 . $TLE433; // 2292
                                                                                             __log__ ("TLE434", $TLE434, 2242);
                                                                                             $TLE435 = ", "; // 2293
                                                                                             __log__ ("TLE435", $TLE435, 2243);
                                                                                             unset ($TSa436); // 2294
                                                                                             $TSa436 = (array) $TSa436; // 2295
                                                                                             __log__ ("TSa436", $TSa436, 2245);
                                                                                             $TLE821 = 0; // 2296
                                                                                             __log__ ("TLE821", $TLE821, 2246);
                                                                                             $TSNNi1015 = $TLE434; // 2297
                                                                                             __log__ ("TSNNi1015", $TSNNi1015, 2247);
                                                                                             $TSa436[$TLE821] = $TSNNi1015; // 2298
                                                                                             $TLE822 = 1; // 2299
                                                                                             __log__ ("TLE822", $TLE822, 2249);
                                                                                             $TSNNi1016 = $TLE435; // 2300
                                                                                             __log__ ("TSNNi1016", $TSNNi1016, 2250);
                                                                                             $TSa436[$TLE822] = $TSNNi1016; // 2301
                                                                                             return $TSa436; // 2302
                                                                                         }
}
class queueaslinkedlist_iterator extends abstractiterator { // "2303"
    protected $queue = null;
    protected $position = null;
    protected $key = 0;
    public function __construct (queueaslinkedlist $queue)/* Entry: 2304, Exit: 2305, Exception Exit: 2306 */ 
                                                                                                             {
                                                                                                                 abstractiterator::__construct ();// /* , Call: 2309, Return: 2310, Exception Return: 2311, After: 2307, Exception After: 2308 */ resolved method call
                                                                                                                 $TSNNt1017 = $queue; // 2312
                                                                                                                 __log__ ("TSNNt1017", $TSNNt1017, 2262);
                                                                                                                 $this->queue = $TSNNt1017; // 2313
                                                                                                                 $TLE437 = $queue->getlist ();// /* , Call: 2316, Return: 2317, Exception Return: 2318, After: 2314, Exception After: 2315 */ method call
                                                                                                                 __log__ ("TLE437", $TLE437, 2264);
                                                                                                                 $TLE438 = $TLE437->gethead ();// /* , Call: 2321, Return: 2322, Exception Return: 2323, After: 2319, Exception After: 2320 */ method call
                                                                                                                 __log__ ("TLE438", $TLE438, 2269);
                                                                                                                 $TSNNt1018 = $TLE438; // 2324
                                                                                                                 __log__ ("TSNNt1018", $TSNNt1018, 2274);
                                                                                                                 $this->position = $TSNNt1018; // 2325
                                                                                                                 $TLE439 = 0; // 2326
                                                                                                                 __log__ ("TLE439", $TLE439, 2276);
                                                                                                                 $TSNNt1019 = $TLE439; // 2327
                                                                                                                 __log__ ("TSNNt1019", $TSNNt1019, 2277);
                                                                                                                 $this->key = $TSNNt1019; // 2328
                                                                                                             }
    public function valid ()/* Entry: 2329, Exit: 2330, Exception Exit: 2331 */ 
                                                                               {
                                                                                   $TLE440 = null; // 2332
                                                                                   __log__ ("TLE440", $TLE440, 2282);
                                                                                   $TSNNt1020 = $this->position; // 2333
                                                                                   __log__ ("TSNNt1020", $TSNNt1020, 2283);
                                                                                   $TLE441 = $TSNNt1020 !== $TLE440; // 2334
                                                                                   __log__ ("TLE441", $TLE441, 2284);
                                                                                   return $TLE441; // 2335
                                                                               }
    public function key ()/* Entry: 2336, Exit: 2337, Exception Exit: 2338 */ 
                                                                             {
                                                                                 $TSNNt1021 = $this->key; // 2339
                                                                                 __log__ ("TSNNt1021", $TSNNt1021, 2289);
                                                                                 return $TSNNt1021; // 2340
                                                                             }
    public function current ()/* Entry: 2341, Exit: 2342, Exception Exit: 2343 */ 
                                                                                 {
                                                                                     $TSNNt1022 = $this->position; // 2344
                                                                                     __log__ ("TSNNt1022", $TSNNt1022, 2294);
                                                                                     $TLE442 = $TSNNt1022->getdatum ();// /* , Call: 2347, Return: 2348, Exception Return: 2349, After: 2345, Exception After: 2346 */ method call
                                                                                     __log__ ("TLE442", $TLE442, 2295);
                                                                                     return $TLE442; // 2350
                                                                                 }
    public function next ()/* Entry: 2351, Exit: 2352, Exception Exit: 2353 */ 
                                                                              {
                                                                                  $TSNNt1023 = $this->position; // 2354
                                                                                  __log__ ("TSNNt1023", $TSNNt1023, 2304);
                                                                                  $TLE443 = $TSNNt1023->getnext ();// /* , Call: 2357, Return: 2358, Exception Return: 2359, After: 2355, Exception After: 2356 */ method call
                                                                                  __log__ ("TLE443", $TLE443, 2305);
                                                                                  $TSNNt1024 = $TLE443; // 2360
                                                                                  __log__ ("TSNNt1024", $TSNNt1024, 2310);
                                                                                  $this->position = $TSNNt1024; // 2361
                                                                                  $TSNNt1025 = $this->key; // 2362
                                                                                  __log__ ("TSNNt1025", $TSNNt1025, 2312);
                                                                                  $Toa71 = $TSNNt1025; // 2363
                                                                                  __log__ ("Toa71", $Toa71, 2313);
                                                                                  $TLE444 = 1; // 2364
                                                                                  __log__ ("TLE444", $TLE444, 2314);
                                                                                  $Toa71 = $Toa71 + $TLE444; // 2365
                                                                                  __log__ ("Toa71", $Toa71, 2315);
                                                                                  $TSNNt1026 = $Toa71; // 2366
                                                                                  __log__ ("TSNNt1026", $TSNNt1026, 2316);
                                                                                  $this->key = $TSNNt1026; // 2367
                                                                              }
    public function rewind ()/* Entry: 2368, Exit: 2369, Exception Exit: 2370 */ 
                                                                                {
                                                                                    $TSNNt1027 = $this->queue; // 2371
                                                                                    __log__ ("TSNNt1027", $TSNNt1027, 2321);
                                                                                    $TLE445 = $TSNNt1027->getlist ();// /* , Call: 2374, Return: 2375, Exception Return: 2376, After: 2372, Exception After: 2373 */ method call
                                                                                    __log__ ("TLE445", $TLE445, 2322);
                                                                                    $TLE446 = $TLE445->gethead ();// /* , Call: 2379, Return: 2380, Exception Return: 2381, After: 2377, Exception After: 2378 */ method call
                                                                                    __log__ ("TLE446", $TLE446, 2327);
                                                                                    $TSNNt1028 = $TLE446; // 2382
                                                                                    __log__ ("TSNNt1028", $TSNNt1028, 2332);
                                                                                    $this->position = $TSNNt1028; // 2383
                                                                                    $TLE447 = 0; // 2384
                                                                                    __log__ ("TLE447", $TLE447, 2334);
                                                                                    $TSNNt1029 = $TLE447; // 2385
                                                                                    __log__ ("TSNNt1029", $TSNNt1029, 2335);
                                                                                    $this->key = $TSNNt1029; // 2386
                                                                                }
}
class queueaslinkedlist extends abstractqueue { // "2387"
    protected $list = null;
    public function __construct ()/* Entry: 2388, Exit: 2389, Exception Exit: 2390 */ 
                                                                                     {
                                                                                         abstractqueue::__construct ();// /* , Call: 2393, Return: 2394, Exception Return: 2395, After: 2391, Exception After: 2392 */ resolved method call
                                                                                         $TLE448 = new linkedlist ();// /* , Call: 2398, Return: 2399, Exception Return: 2400, After: 2396, Exception After: 2397 */ constructor call
                                                                                         __log__ ("TLE448", $TLE448, 2346);
                                                                                         $TSNNt1030 = $TLE448; // 2401
                                                                                         __log__ ("TSNNt1030", $TSNNt1030, 2351);
                                                                                         $this->list = $TSNNt1030; // 2402
                                                                                     }
    public function getlist ()/* Entry: 2403, Exit: 2404, Exception Exit: 2405 */ 
                                                                                 {
                                                                                     $TSNNt1031 = $this->list; // 2406
                                                                                     __log__ ("TSNNt1031", $TSNNt1031, 2356);
                                                                                     return $TSNNt1031; // 2407
                                                                                 }
    public function purge ()/* Entry: 2408, Exit: 2409, Exception Exit: 2410 */ 
                                                                               {
                                                                                   $TSNNt1032 = $this->list; // 2411
                                                                                   __log__ ("TSNNt1032", $TSNNt1032, 2361);
                                                                                   $TSNNt1032->purge ();// /* , Call: 2414, Return: 2415, Exception Return: 2416, After: 2412, Exception After: 2413 */ method call
                                                                               }
    public function enqueue (iobject $obj)/* Entry: 2417, Exit: 2418, Exception Exit: 2419 */ 
                                                                                             {
                                                                                                 $TSNNt1033 = $this->list; // 2420
                                                                                                 __log__ ("TSNNt1033", $TSNNt1033, 2370);
                                                                                                 $TSNNt1033->append ($obj);// /* , Call: 2423, Return: 2424, Exception Return: 2425, After: 2421, Exception After: 2422 */ method call
                                                                                                 $TSNNt1034 = $this->count; // 2426
                                                                                                 __log__ ("TSNNt1034", $TSNNt1034, 2376);
                                                                                                 $Toa72 = $TSNNt1034; // 2427
                                                                                                 __log__ ("Toa72", $Toa72, 2377);
                                                                                                 $TLE449 = 1; // 2428
                                                                                                 __log__ ("TLE449", $TLE449, 2378);
                                                                                                 $Toa72 = $Toa72 + $TLE449; // 2429
                                                                                                 __log__ ("Toa72", $Toa72, 2379);
                                                                                                 $TSNNt1035 = $Toa72; // 2430
                                                                                                 __log__ ("TSNNt1035", $TSNNt1035, 2380);
                                                                                                 $this->count = $TSNNt1035; // 2431
                                                                                             }
    public function dequeue ()/* Entry: 2432, Exit: 2433, Exception Exit: 2434 */ 
                                                                                 {
                                                                                     $TLE450 = 0; // 2435
                                                                                     __log__ ("TLE450", $TLE450, 2385);
                                                                                     $TSNNt1036 = $this->count; // 2436
                                                                                     __log__ ("TSNNt1036", $TSNNt1036, 2386);
                                                                                     $TLE451 = $TSNNt1036 == $TLE450; // 2437
                                                                                     __log__ ("TLE451", $TLE451, 2387);
                                                                                     if ($TLE451){
                                                                                         $TLE452 = new containeremptyexception ();// /* , Call: 2441, Return: 2442, Exception Return: 2443, After: 2439, Exception After: 2440 */ constructor call
                                                                                         __log__ ("TLE452", $TLE452, 2389);
                                                                                         throw $TLE452; // 2444
                                                                                     }
                                                                                     else {
                                                                                          // "2445 skip"
                                                                                     }
                                                                                     $TSNNt1037 = $this->list; // 2446
                                                                                     __log__ ("TSNNt1037", $TSNNt1037, 2396);
                                                                                     $result = $TSNNt1037->getfirst ();// /* , Call: 2449, Return: 2450, Exception Return: 2451, After: 2447, Exception After: 2448 */ method call
                                                                                     __log__ ("result", $result, 2397);
                                                                                     $TSNNt1038 = $this->list; // 2452
                                                                                     __log__ ("TSNNt1038", $TSNNt1038, 2402);
                                                                                     $TSNNt1038->extract ($result);// /* , Call: 2455, Return: 2456, Exception Return: 2457, After: 2453, Exception After: 2454 */ method call
                                                                                     $TSNNt1039 = $this->count; // 2458
                                                                                     __log__ ("TSNNt1039", $TSNNt1039, 2408);
                                                                                     $Toa73 = $TSNNt1039; // 2459
                                                                                     __log__ ("Toa73", $Toa73, 2409);
                                                                                     $TLE453 = 1; // 2460
                                                                                     __log__ ("TLE453", $TLE453, 2410);
                                                                                     $Toa73 = $Toa73 - $TLE453; // 2461
                                                                                     __log__ ("Toa73", $Toa73, 2411);
                                                                                     $TSNNt1040 = $Toa73; // 2462
                                                                                     __log__ ("TSNNt1040", $TSNNt1040, 2412);
                                                                                     $this->count = $TSNNt1040; // 2463
                                                                                     return $result; // 2464
                                                                                 }
    public function gethead ()/* Entry: 2465, Exit: 2466, Exception Exit: 2467 */ 
                                                                                 {
                                                                                     $TLE454 = 0; // 2468
                                                                                     __log__ ("TLE454", $TLE454, 2418);
                                                                                     $TSNNt1041 = $this->count; // 2469
                                                                                     __log__ ("TSNNt1041", $TSNNt1041, 2419);
                                                                                     $TLE455 = $TSNNt1041 == $TLE454; // 2470
                                                                                     __log__ ("TLE455", $TLE455, 2420);
                                                                                     if ($TLE455){
                                                                                         $TLE456 = new containeremptyexception ();// /* , Call: 2474, Return: 2475, Exception Return: 2476, After: 2472, Exception After: 2473 */ constructor call
                                                                                         __log__ ("TLE456", $TLE456, 2422);
                                                                                         throw $TLE456; // 2477
                                                                                     }
                                                                                     else {
                                                                                          // "2478 skip"
                                                                                     }
                                                                                     $TSNNt1042 = $this->list; // 2479
                                                                                     __log__ ("TSNNt1042", $TSNNt1042, 2429);
                                                                                     $TLE457 = $TSNNt1042->getfirst ();// /* , Call: 2482, Return: 2483, Exception Return: 2484, After: 2480, Exception After: 2481 */ method call
                                                                                     __log__ ("TLE457", $TLE457, 2430);
                                                                                     return $TLE457; // 2485
                                                                                 }
    public function reduce (ireducefunction $f, $initialState)/* Entry: 2486, Exit: 2487, Exception Exit: 2488 */ 
                                                                                                                 {
                                                                                                                     $TSNNt1043 = $this->list; // 2489
                                                                                                                     __log__ ("TSNNt1043", $TSNNt1043, 2439);
                                                                                                                     $TLE458 = $TSNNt1043->reduce ($f, $initialState);// /* , Call: 2492, Return: 2493, Exception Return: 2494, After: 2490, Exception After: 2491 */ method call
                                                                                                                     __log__ ("TLE458", $TLE458, 2440);
                                                                                                                     return $TLE458; // 2495
                                                                                                                 }
    public function getiterator ()/* Entry: 2496, Exit: 2497, Exception Exit: 2498 */ 
                                                                                     {
                                                                                         $TLE459 = new queueaslinkedlist_iterator ($this);// /* , Call: 2501, Return: 2502, Exception Return: 2503, After: 2499, Exception After: 2500 */ constructor call
                                                                                         __log__ ("TLE459", $TLE459, 2449);
                                                                                         return $TLE459; // 2504
                                                                                     }
    public function compareto (icomparable $obj)/* Entry: 2505, Exit: 2506, Exception Exit: 2507 */ 
                                                                                                   {
                                                                                                       $TLE460 = new methodnotimplementedexception ();// /* , Call: 2510, Return: 2511, Exception Return: 2512, After: 2508, Exception After: 2509 */ constructor call
                                                                                                       __log__ ("TLE460", $TLE460, 2458);
                                                                                                       throw $TLE460; // 2513
                                                                                                   }
}
class countingvisitor extends abstractvisitor { // "2514"
    protected $count = 0;
    public function __construct ($count = 0)/* Entry: 2515, Exit: 2516, Exception Exit: 2517 */ 
                                                                                               {
                                                                                                   abstractvisitor::__construct ();// /* , Call: 2520, Return: 2521, Exception Return: 2522, After: 2518, Exception After: 2519 */ resolved method call
                                                                                                   $TLE461 = 0; // 2523
                                                                                                   __log__ ("TLE461", $TLE461, 2473);
                                                                                                   $TSNNt1044 = $TLE461; // 2524
                                                                                                   __log__ ("TSNNt1044", $TSNNt1044, 2474);
                                                                                                   $this->count = $TSNNt1044; // 2525
                                                                                               }
    public function getcount ()/* Entry: 2526, Exit: 2527, Exception Exit: 2528 */ 
                                                                                  {
                                                                                      $TSNNt1045 = $this->count; // 2529
                                                                                      __log__ ("TSNNt1045", $TSNNt1045, 2479);
                                                                                      return $TSNNt1045; // 2530
                                                                                  }
    public function setcount ($count)/* Entry: 2531, Exit: 2532, Exception Exit: 2533 */ 
                                                                                        {
                                                                                            $TLE462 = "count"; // 2534 // "lookup"
                                                                                            $TSNNt1046 = $TLE462; // 2535
                                                                                            __log__ ("TSNNt1046", $TSNNt1046, 2485);
                                                                                            $this->count = $TSNNt1046; // 2536
                                                                                        }
    public function visit (iobject $obj)/* Entry: 2537, Exit: 2538, Exception Exit: 2539 */ 
                                                                                           {
                                                                                               $TSNNt1047 = $this->count; // 2540
                                                                                               __log__ ("TSNNt1047", $TSNNt1047, 2490);
                                                                                               ++$TSNNt1047; // 2541
                                                                                               __log__ ("TSNNt1047", $TSNNt1047, 2491);
                                                                                               $this->count = $TSNNt1047; // 2542
                                                                                           }
}
interface iprepostvisitor {
    public function previsit (iobject $obj)/* Entry: 2543, Exit: 2544, Exception Exit: 2545 */ 
                                                                                              ;
    public function invisit (iobject $obj)/* Entry: 2546, Exit: 2547, Exception Exit: 2548 */ 
                                                                                             ;
    public function postvisit (iobject $obj)/* Entry: 2549, Exit: 2550, Exception Exit: 2551 */ 
                                                                                               ;
    public function isdone ()/* Entry: 2552, Exit: 2553, Exception Exit: 2554 */ 
                                                                                ;
}
abstract class abstractprepostvisitor implements iprepostvisitor { // "2555"
    public function __construct ()/* Entry: 2556, Exit: 2557, Exception Exit: 2558 */ 
                                                                                     {
                                                                                          // "2559 skip"
                                                                                     }
    public function previsit (iobject $obj)/* Entry: 2560, Exit: 2561, Exception Exit: 2562 */ 
                                                                                              {
                                                                                                   // "2563 skip"
                                                                                              }
    public function invisit (iobject $obj)/* Entry: 2564, Exit: 2565, Exception Exit: 2566 */ 
                                                                                             {
                                                                                                  // "2567 skip"
                                                                                             }
    public function postvisit (iobject $obj)/* Entry: 2568, Exit: 2569, Exception Exit: 2570 */ 
                                                                                               {
                                                                                                    // "2571 skip"
                                                                                               }
    public function isdone ()/* Entry: 2572, Exit: 2573, Exception Exit: 2574 */ 
                                                                                {
                                                                                    $TLE463 = false; // 2575
                                                                                    __log__ ("TLE463", $TLE463, 2525);
                                                                                    return $TLE463; // 2576
                                                                                }
}
class preorder extends abstractprepostvisitor { // "2577"
    protected $visitor = null;
    public function __construct ($visitor)/* Entry: 2578, Exit: 2579, Exception Exit: 2580 */ 
                                                                                             {
                                                                                                 $TSNNt1048 = $visitor; // 2581
                                                                                                 __log__ ("TSNNt1048", $TSNNt1048, 2531);
                                                                                                 $this->visitor = $TSNNt1048; // 2582
                                                                                             }
    public function previsit (iobject $obj)/* Entry: 2583, Exit: 2584, Exception Exit: 2585 */ 
                                                                                              {
                                                                                                  $TSNNt1049 = $this->visitor; // 2586
                                                                                                  __log__ ("TSNNt1049", $TSNNt1049, 2536);
                                                                                                  $TSNNt1049->visit ($obj);// /* , Call: 2589, Return: 2590, Exception Return: 2591, After: 2587, Exception After: 2588 */ method call
                                                                                              }
    public function isdone ()/* Entry: 2592, Exit: 2593, Exception Exit: 2594 */ 
                                                                                {
                                                                                    $TSNNt1050 = $this->visitor; // 2595
                                                                                    __log__ ("TSNNt1050", $TSNNt1050, 2545);
                                                                                    $TLE464 = $TSNNt1050->isdone ();// /* , Call: 2598, Return: 2599, Exception Return: 2600, After: 2596, Exception After: 2597 */ method call
                                                                                    __log__ ("TLE464", $TLE464, 2546);
                                                                                    return $TLE464; // 2601
                                                                                }
}
class printingvisitor extends abstractvisitor { // "2602"
    protected $stream = null;
    public function __construct ($stream)/* Entry: 2603, Exit: 2604, Exception Exit: 2605 */ 
                                                                                            {
                                                                                                abstractvisitor::__construct ();// /* , Call: 2608, Return: 2609, Exception Return: 2610, After: 2606, Exception After: 2607 */ resolved method call
                                                                                                $TSNNt1051 = $stream; // 2611
                                                                                                __log__ ("TSNNt1051", $TSNNt1051, 2561);
                                                                                                $this->stream = $TSNNt1051; // 2612
                                                                                            }
    public function visit (iobject $obj)/* Entry: 2613, Exit: 2614, Exception Exit: 2615 */ 
                                                                                           {
                                                                                               $TLE465 = "%s\n"; // 2616
                                                                                               __log__ ("TLE465", $TLE465, 2566);
                                                                                               $TLE466 = $obj->__tostring ();// /* , Call: 2619, Return: 2620, Exception Return: 2621, After: 2617, Exception After: 2618 */ method call
                                                                                               __log__ ("TLE466", $TLE466, 2567);
                                                                                               $TSNNt1052 = $this->stream; // 2622
                                                                                               __log__ ("TSNNt1052", $TSNNt1052, 2572);
                                                                                               fprintf ($TSNNt1052, $TLE465, $TLE466); // "2623native call"
                                                                                           }
}
class abstractgraph_tostringvisitor extends abstractvisitor { // "2624"
    protected $text = '';
    public function __construct ()/* Entry: 2625, Exit: 2626, Exception Exit: 2627 */ 
                                                                                     {
                                                                                         abstractvisitor::__construct ();// /* , Call: 2630, Return: 2631, Exception Return: 2632, After: 2628, Exception After: 2629 */ resolved method call
                                                                                     }
    public function gettext ()/* Entry: 2633, Exit: 2634, Exception Exit: 2635 */ 
                                                                                 {
                                                                                     $TSNNt1053 = $this->text; // 2636
                                                                                     __log__ ("TSNNt1053", $TSNNt1053, 2586);
                                                                                     return $TSNNt1053; // 2637
                                                                                 }
    public function visit (iobject $obj)/* Entry: 2638, Exit: 2639, Exception Exit: 2640 */ 
                                                                                           {
                                                                                               $TSNNt1054 = $this->text; // 2641
                                                                                               __log__ ("TSNNt1054", $TSNNt1054, 2591);
                                                                                               $Toa74 = $TSNNt1054; // 2642
                                                                                               __log__ ("Toa74", $Toa74, 2592);
                                                                                               $TLE467 = $obj->__tostring ();// /* , Call: 2645, Return: 2646, Exception Return: 2647, After: 2643, Exception After: 2644 */ method call
                                                                                               __log__ ("TLE467", $TLE467, 2593);
                                                                                               $TLE468 = "\n"; // 2648
                                                                                               __log__ ("TLE468", $TLE468, 2598);
                                                                                               $TLE469 = $TLE467 . $TLE468; // 2649
                                                                                               __log__ ("TLE469", $TLE469, 2599);
                                                                                               $Toa74 = $Toa74 . $TLE469; // 2650
                                                                                               __log__ ("Toa74", $Toa74, 2600);
                                                                                               $TSNNt1055 = $Toa74; // 2651
                                                                                               __log__ ("TSNNt1055", $TSNNt1055, 2601);
                                                                                               $this->text = $TSNNt1055; // 2652
                                                                                               $TLE470 = $obj->getemanatingedges ();// /* , Call: 2655, Return: 2656, Exception Return: 2657, After: 2653, Exception After: 2654 */ method call
                                                                                               __log__ ("TLE470", $TLE470, 2603);
                                                                                               $it = $TLE470->getiterator ();// /* , Call: 2660, Return: 2661, Exception Return: 2662, After: 2658, Exception After: 2659 */ method call
                                                                                               __log__ ("it", $it, 2608);
                                                                                               $it->rewind ();// /* , Call: 2665, Return: 2666, Exception Return: 2667, After: 2663, Exception After: 2664 */ method call
                                                                                               while (True){
                                                                                                   $TLE471 = $it->valid ();// /* , Call: 2671, Return: 2672, Exception Return: 2673, After: 2669, Exception After: 2670 */ method call
                                                                                                   __log__ ("TLE471", $TLE471, 2619);
                                                                                                   $TLE472 = !$TLE471; // 2674
                                                                                                   __log__ ("TLE472", $TLE472, 2624);
                                                                                                   if ($TLE472){
                                                                                                       break; // 2676
                                                                                                   }
                                                                                                   else {
                                                                                                        // "2677 skip"
                                                                                                   }
                                                                                                   $edge = $it->current ();// /* , Call: 2680, Return: 2681, Exception Return: 2682, After: 2678, Exception After: 2679 */ method call
                                                                                                   __log__ ("edge", $edge, 2628);
                                                                                                   $TSNNt1056 = $this->text; // 2683
                                                                                                   __log__ ("TSNNt1056", $TSNNt1056, 2633);
                                                                                                   $Toa75 = $TSNNt1056; // 2684
                                                                                                   __log__ ("Toa75", $Toa75, 2634);
                                                                                                   $TLE473 = "    "; // 2685
                                                                                                   __log__ ("TLE473", $TLE473, 2635);
                                                                                                   $TLE474 = $edge->__tostring ();// /* , Call: 2688, Return: 2689, Exception Return: 2690, After: 2686, Exception After: 2687 */ method call
                                                                                                   __log__ ("TLE474", $TLE474, 2636);
                                                                                                   $TLE475 = $TLE473 . $TLE474; // 2691
                                                                                                   __log__ ("TLE475", $TLE475, 2641);
                                                                                                   $TLE476 = "\n"; // 2692
                                                                                                   __log__ ("TLE476", $TLE476, 2642);
                                                                                                   $TLE477 = $TLE475 . $TLE476; // 2693
                                                                                                   __log__ ("TLE477", $TLE477, 2643);
                                                                                                   $Toa75 = $Toa75 . $TLE477; // 2694
                                                                                                   __log__ ("Toa75", $Toa75, 2644);
                                                                                                   $TSNNt1057 = $Toa75; // 2695
                                                                                                   __log__ ("TSNNt1057", $TSNNt1057, 2645);
                                                                                                   $this->text = $TSNNt1057; // 2696
                                                                                                   $it->next ();// /* , Call: 2699, Return: 2700, Exception Return: 2701, After: 2697, Exception After: 2698 */ method call
                                                                                               }
                                                                                           }
}
class abstractgraph_vertexiterator extends abstractiterator { // "2702"
    protected $graph = null;
    protected $v = 0;
    public function __construct (abstractgraph $graph)/* Entry: 2703, Exit: 2704, Exception Exit: 2705 */ 
                                                                                                         {
                                                                                                             abstractiterator::__construct ();// /* , Call: 2708, Return: 2709, Exception Return: 2710, After: 2706, Exception After: 2707 */ resolved method call
                                                                                                             $TSNNt1058 = $graph; // 2711
                                                                                                             __log__ ("TSNNt1058", $TSNNt1058, 2661);
                                                                                                             $this->graph = $TSNNt1058; // 2712
                                                                                                             $TLE478 = 0; // 2713
                                                                                                             __log__ ("TLE478", $TLE478, 2663);
                                                                                                             $TSNNt1059 = $TLE478; // 2714
                                                                                                             __log__ ("TSNNt1059", $TSNNt1059, 2664);
                                                                                                             $this->v = $TSNNt1059; // 2715
                                                                                                         }
    public function valid ()/* Entry: 2716, Exit: 2717, Exception Exit: 2718 */ 
                                                                               {
                                                                                   $TSNNt1060 = $this->graph; // 2719
                                                                                   __log__ ("TSNNt1060", $TSNNt1060, 2669);
                                                                                   $TLE479 = $TSNNt1060->getnumberofvertices ();// /* , Call: 2722, Return: 2723, Exception Return: 2724, After: 2720, Exception After: 2721 */ method call
                                                                                   __log__ ("TLE479", $TLE479, 2670);
                                                                                   $TSNNt1061 = $this->v; // 2725
                                                                                   __log__ ("TSNNt1061", $TSNNt1061, 2675);
                                                                                   $TLE480 = $TSNNt1061 < $TLE479; // 2726
                                                                                   __log__ ("TLE480", $TLE480, 2676);
                                                                                   return $TLE480; // 2727
                                                                               }
    public function key ()/* Entry: 2728, Exit: 2729, Exception Exit: 2730 */ 
                                                                             {
                                                                                 $TSNNt1062 = $this->v; // 2731
                                                                                 __log__ ("TSNNt1062", $TSNNt1062, 2681);
                                                                                 return $TSNNt1062; // 2732
                                                                             }
    public function current ()/* Entry: 2733, Exit: 2734, Exception Exit: 2735 */ 
                                                                                 {
                                                                                     $TSNNt1063 = $this->graph; // 2736
                                                                                     __log__ ("TSNNt1063", $TSNNt1063, 2686);
                                                                                     $TSNNt1064 = $this->v; // 2737
                                                                                     __log__ ("TSNNt1064", $TSNNt1064, 2687);
                                                                                     $TLE481 = $TSNNt1063->getvertex ($TSNNt1064);// /* , Call: 2740, Return: 2741, Exception Return: 2742, After: 2738, Exception After: 2739 */ method call
                                                                                     __log__ ("TLE481", $TLE481, 2688);
                                                                                     return $TLE481; // 2743
                                                                                 }
    public function next ()/* Entry: 2744, Exit: 2745, Exception Exit: 2746 */ 
                                                                              {
                                                                                  $TSNNt1065 = $this->v; // 2747
                                                                                  __log__ ("TSNNt1065", $TSNNt1065, 2697);
                                                                                  ++$TSNNt1065; // 2748
                                                                                  __log__ ("TSNNt1065", $TSNNt1065, 2698);
                                                                                  $this->v = $TSNNt1065; // 2749
                                                                              }
    public function rewind ()/* Entry: 2750, Exit: 2751, Exception Exit: 2752 */ 
                                                                                {
                                                                                    $TLE482 = 0; // 2753
                                                                                    __log__ ("TLE482", $TLE482, 2703);
                                                                                    $TSNNt1066 = $TLE482; // 2754
                                                                                    __log__ ("TSNNt1066", $TSNNt1066, 2704);
                                                                                    $this->v = $TSNNt1066; // 2755
                                                                                }
}
class abstractgraph_vertexaggregate implements iteratoraggregate { // "2756"
    protected $graph = null;
    public function __construct (abstractgraph $graph)/* Entry: 2757, Exit: 2758, Exception Exit: 2759 */ 
                                                                                                         {
                                                                                                             $TSNNt1067 = $graph; // 2760
                                                                                                             __log__ ("TSNNt1067", $TSNNt1067, 2710);
                                                                                                             $this->graph = $TSNNt1067; // 2761
                                                                                                         }
    public function getiterator ()/* Entry: 2762, Exit: 2763, Exception Exit: 2764 */ 
                                                                                     {
                                                                                         $TSNNt1068 = $this->graph; // 2765
                                                                                         __log__ ("TSNNt1068", $TSNNt1068, 2715);
                                                                                         $TLE483 = $TSNNt1068->getiterator ();// /* , Call: 2768, Return: 2769, Exception Return: 2770, After: 2766, Exception After: 2767 */ method call
                                                                                         __log__ ("TLE483", $TLE483, 2716);
                                                                                         return $TLE483; // 2771
                                                                                     }
}
abstract class abstractgraph extends abstractcontainer implements igraph { // "2772"
    protected $numberOfVertices = 0;
    protected $numberOfEdges = 0;
    protected $vertex = null;
    public function __construct ($size)/* Entry: 2773, Exit: 2774, Exception Exit: 2775 */ 
                                                                                          {
                                                                                              abstractcontainer::__construct ();// /* , Call: 2778, Return: 2779, Exception Return: 2780, After: 2776, Exception After: 2777 */ resolved method call
                                                                                              $TLE484 = 0; // 2781
                                                                                              __log__ ("TLE484", $TLE484, 2731);
                                                                                              $TSNNt1069 = $TLE484; // 2782
                                                                                              __log__ ("TSNNt1069", $TSNNt1069, 2732);
                                                                                              $this->numberOfVertices = $TSNNt1069; // 2783
                                                                                              $TLE485 = 0; // 2784
                                                                                              __log__ ("TLE485", $TLE485, 2734);
                                                                                              $TSNNt1070 = $TLE485; // 2785
                                                                                              __log__ ("TSNNt1070", $TSNNt1070, 2735);
                                                                                              $this->numberOfEdges = $TSNNt1070; // 2786
                                                                                              $TLE486 = new basicarray ($size);// /* , Call: 2789, Return: 2790, Exception Return: 2791, After: 2787, Exception After: 2788 */ constructor call
                                                                                              __log__ ("TLE486", $TLE486, 2737);
                                                                                              $TSNNt1071 = $TLE486; // 2792
                                                                                              __log__ ("TSNNt1071", $TSNNt1071, 2742);
                                                                                              $this->vertex = $TSNNt1071; // 2793
                                                                                          }
    public abstract function getincidentedges ($v)/* Entry: 2794, Exit: 2795, Exception Exit: 2796 */;
    public abstract function getemanatingedges ($v)/* Entry: 2797, Exit: 2798, Exception Exit: 2799 */;
    public function purge ()/* Entry: 2800, Exit: 2801, Exception Exit: 2802 */ 
                                                                               {
                                                                                   $i = 0; // 2803
                                                                                   __log__ ("i", $i, 2753);
                                                                                   $ElcfPF8 = true; // 2804
                                                                                   __log__ ("ElcfPF8", $ElcfPF8, 2754);
                                                                                   while (True){
                                                                                       if ($ElcfPF8){
                                                                                           $ElcfPF8 = false; // 2807
                                                                                           __log__ ("ElcfPF8", $ElcfPF8, 2757);
                                                                                       }
                                                                                       else {
                                                                                           ++$i; // 2808
                                                                                           __log__ ("i", $i, 2758);
                                                                                       }
                                                                                       $TSNNt1072 = $this->numberOfVertices; // 2809
                                                                                       __log__ ("TSNNt1072", $TSNNt1072, 2759);
                                                                                       $TLE487 = $i < $TSNNt1072; // 2810
                                                                                       __log__ ("TLE487", $TLE487, 2760);
                                                                                       if ($TLE487){
                                                                                            // "2812 skip"
                                                                                       }
                                                                                       else {
                                                                                           break; // 2813
                                                                                       }
                                                                                       $TLE488 = null; // 2814
                                                                                       __log__ ("TLE488", $TLE488, 2764);
                                                                                       $TSNNt1073 = $this->vertex; // 2815
                                                                                       __log__ ("TSNNt1073", $TSNNt1073, 2765);
                                                                                       $TSNNt1073->offsetset ($i, $TLE488);// /* , Call: 2818, Return: 2819, Exception Return: 2820, After: 2816, Exception After: 2817 */ method call
                                                                                   }
                                                                                   $TLE489 = 0; // 2821
                                                                                   __log__ ("TLE489", $TLE489, 2771);
                                                                                   $TSNNt1074 = $TLE489; // 2822
                                                                                   __log__ ("TSNNt1074", $TSNNt1074, 2772);
                                                                                   $this->numberOfVertices = $TSNNt1074; // 2823
                                                                                   $TLE490 = 0; // 2824
                                                                                   __log__ ("TLE490", $TLE490, 2774);
                                                                                   $TSNNt1075 = $TLE490; // 2825
                                                                                   __log__ ("TSNNt1075", $TSNNt1075, 2775);
                                                                                   $this->numberOfEdges = $TSNNt1075; // 2826
                                                                               }
    protected function insertvertex (vertex $v)/* Entry: 2827, Exit: 2828, Exception Exit: 2829 */ 
                                                                                                  {
                                                                                                      $TSNNt1076 = $this->vertex; // 2830
                                                                                                      __log__ ("TSNNt1076", $TSNNt1076, 2780);
                                                                                                      $TLE491 = $TSNNt1076->getlength ();// /* , Call: 2833, Return: 2834, Exception Return: 2835, After: 2831, Exception After: 2832 */ method call
                                                                                                      __log__ ("TLE491", $TLE491, 2781);
                                                                                                      $TSNNt1077 = $this->numberOfVertices; // 2836
                                                                                                      __log__ ("TSNNt1077", $TSNNt1077, 2786);
                                                                                                      $TLE492 = $TSNNt1077 == $TLE491; // 2837
                                                                                                      __log__ ("TLE492", $TLE492, 2787);
                                                                                                      if ($TLE492){
                                                                                                          $TLE493 = new containerfullexception ();// /* , Call: 2841, Return: 2842, Exception Return: 2843, After: 2839, Exception After: 2840 */ constructor call
                                                                                                          __log__ ("TLE493", $TLE493, 2789);
                                                                                                          throw $TLE493; // 2844
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2845 skip"
                                                                                                      }
                                                                                                      $TLE494 = $v->getnumber ();// /* , Call: 2848, Return: 2849, Exception Return: 2850, After: 2846, Exception After: 2847 */ method call
                                                                                                      __log__ ("TLE494", $TLE494, 2796);
                                                                                                      $TSNNt1078 = $this->numberOfVertices; // 2851
                                                                                                      __log__ ("TSNNt1078", $TSNNt1078, 2801);
                                                                                                      $TLE495 = $TLE494 != $TSNNt1078; // 2852
                                                                                                      __log__ ("TLE495", $TLE495, 2802);
                                                                                                      if ($TLE495){
                                                                                                          $TLE496 = new argumenterror ();// /* , Call: 2856, Return: 2857, Exception Return: 2858, After: 2854, Exception After: 2855 */ constructor call
                                                                                                          __log__ ("TLE496", $TLE496, 2804);
                                                                                                          throw $TLE496; // 2859
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2860 skip"
                                                                                                      }
                                                                                                      $TSNNt1079 = $this->vertex; // 2861
                                                                                                      __log__ ("TSNNt1079", $TSNNt1079, 2811);
                                                                                                      $TSNNt1080 = $this->numberOfVertices; // 2862
                                                                                                      __log__ ("TSNNt1080", $TSNNt1080, 2812);
                                                                                                      $TSNNt1079->offsetset ($TSNNt1080, $v);// /* , Call: 2865, Return: 2866, Exception Return: 2867, After: 2863, Exception After: 2864 */ method call
                                                                                                      $TSNNt1081 = $this->numberOfVertices; // 2868
                                                                                                      __log__ ("TSNNt1081", $TSNNt1081, 2818);
                                                                                                      ++$TSNNt1081; // 2869
                                                                                                      __log__ ("TSNNt1081", $TSNNt1081, 2819);
                                                                                                      $this->numberOfVertices = $TSNNt1081; // 2870
                                                                                                  }
    public function addvertex ($v, $weight = null)/* Entry: 2871, Exit: 2872, Exception Exit: 2873 */ 
                                                                                                     {
                                                                                                         $TLE497 = new vertex ($this, $v, $weight);// /* , Call: 2876, Return: 2877, Exception Return: 2878, After: 2874, Exception After: 2875 */ constructor call
                                                                                                         __log__ ("TLE497", $TLE497, 2824);
                                                                                                         $this->insertvertex ($TLE497);// /* , Call: 2881, Return: 2882, Exception Return: 2883, After: 2879, Exception After: 2880 */ method call
                                                                                                     }
    public function getvertex ($v)/* Entry: 2884, Exit: 2885, Exception Exit: 2886 */ 
                                                                                     {
                                                                                         $TLE498 = 0; // 2887
                                                                                         __log__ ("TLE498", $TLE498, 2837);
                                                                                         $TLE53 = $v < $TLE498; // 2888
                                                                                         __log__ ("TLE53", $TLE53, 2838);
                                                                                         if ($TLE53){
                                                                                             $TEF54 = $TLE53; // 2890
                                                                                             __log__ ("TEF54", $TEF54, 2840);
                                                                                         }
                                                                                         else {
                                                                                             $TSNNt1082 = $this->numberOfVertices; // 2891
                                                                                             __log__ ("TSNNt1082", $TSNNt1082, 2841);
                                                                                             $TEF54 = $TSNNt1082 <= $v; // 2892
                                                                                             __log__ ("TEF54", $TEF54, 2842);
                                                                                         }
                                                                                         $TLE499 = (bool) $TEF54; // 2893
                                                                                         __log__ ("TLE499", $TLE499, 2843);
                                                                                         if ($TLE499){
                                                                                             $TLE500 = new indexerror ();// /* , Call: 2897, Return: 2898, Exception Return: 2899, After: 2895, Exception After: 2896 */ constructor call
                                                                                             __log__ ("TLE500", $TLE500, 2845);
                                                                                             throw $TLE500; // 2900
                                                                                         }
                                                                                         else {
                                                                                              // "2901 skip"
                                                                                         }
                                                                                         $TSNNt1083 = $this->vertex; // 2902
                                                                                         __log__ ("TSNNt1083", $TSNNt1083, 2852);
                                                                                         $TLE501 = $TSNNt1083->offsetget ($v);// /* , Call: 2905, Return: 2906, Exception Return: 2907, After: 2903, Exception After: 2904 */ method call
                                                                                         __log__ ("TLE501", $TLE501, 2853);
                                                                                         return $TLE501; // 2908
                                                                                     }
    public function getvertices ()/* Entry: 2909, Exit: 2910, Exception Exit: 2911 */ 
                                                                                     {
                                                                                         $TLE502 = new abstractgraph_vertexaggregate ($this);// /* , Call: 2914, Return: 2915, Exception Return: 2916, After: 2912, Exception After: 2913 */ constructor call
                                                                                         __log__ ("TLE502", $TLE502, 2862);
                                                                                         return $TLE502; // 2917
                                                                                     }
    protected abstract function insertedge (edge $edge)/* Entry: 2918, Exit: 2919, Exception Exit: 2920 */;
    public function isdirected ()/* Entry: 2921, Exit: 2922, Exception Exit: 2923 */ 
                                                                                    {
                                                                                        $TLE503 = $this instanceof idigraph;
                                                                                        return $TLE503; // 2925
                                                                                    }
    public function addedge ($v, $w, $weight = null)/* Entry: 2926, Exit: 2927, Exception Exit: 2928 */ 
                                                                                                       {
                                                                                                           $TLE504 = new edge ($this, $v, $w, $weight);// /* , Call: 2931, Return: 2932, Exception Return: 2933, After: 2929, Exception After: 2930 */ constructor call
                                                                                                           __log__ ("TLE504", $TLE504, 2879);
                                                                                                           $this->insertedge ($TLE504);// /* , Call: 2936, Return: 2937, Exception Return: 2938, After: 2934, Exception After: 2935 */ method call
                                                                                                       }
    public function getnumberofvertices ()/* Entry: 2939, Exit: 2940, Exception Exit: 2941 */ 
                                                                                             {
                                                                                                 $TSNNt1084 = $this->numberOfVertices; // 2942
                                                                                                 __log__ ("TSNNt1084", $TSNNt1084, 2892);
                                                                                                 return $TSNNt1084; // 2943
                                                                                             }
    public function getnumberofedges ()/* Entry: 2944, Exit: 2945, Exception Exit: 2946 */ 
                                                                                          {
                                                                                              $TSNNt1085 = $this->numberOfEdges; // 2947
                                                                                              __log__ ("TSNNt1085", $TSNNt1085, 2897);
                                                                                              return $TSNNt1085; // 2948
                                                                                          }
    public function accept (ivisitor $visitor)/* Entry: 2949, Exit: 2950, Exception Exit: 2951 */ 
                                                                                                 {
                                                                                                     $v = 0; // 2952
                                                                                                     __log__ ("v", $v, 2902);
                                                                                                     $ElcfPF9 = true; // 2953
                                                                                                     __log__ ("ElcfPF9", $ElcfPF9, 2903);
                                                                                                     while (True){
                                                                                                         if ($ElcfPF9){
                                                                                                             $ElcfPF9 = false; // 2956
                                                                                                             __log__ ("ElcfPF9", $ElcfPF9, 2906);
                                                                                                         }
                                                                                                         else {
                                                                                                             ++$v; // 2957
                                                                                                             __log__ ("v", $v, 2907);
                                                                                                         }
                                                                                                         $TSNNt1086 = $this->numberOfVertices; // 2958
                                                                                                         __log__ ("TSNNt1086", $TSNNt1086, 2908);
                                                                                                         $TLE505 = $v < $TSNNt1086; // 2959
                                                                                                         __log__ ("TLE505", $TLE505, 2909);
                                                                                                         if ($TLE505){
                                                                                                              // "2961 skip"
                                                                                                         }
                                                                                                         else {
                                                                                                             break; // 2962
                                                                                                         }
                                                                                                         $TLE506 = $visitor->isdone ();// /* , Call: 2965, Return: 2966, Exception Return: 2967, After: 2963, Exception After: 2964 */ method call
                                                                                                         __log__ ("TLE506", $TLE506, 2913);
                                                                                                         if ($TLE506){
                                                                                                             break; // 2969
                                                                                                         }
                                                                                                         else {
                                                                                                              // "2970 skip"
                                                                                                         }
                                                                                                         $TSNNt1087 = $this->vertex; // 2971
                                                                                                         __log__ ("TSNNt1087", $TSNNt1087, 2921);
                                                                                                         $TLE507 = $TSNNt1087->offsetget ($v);// /* , Call: 2974, Return: 2975, Exception Return: 2976, After: 2972, Exception After: 2973 */ method call
                                                                                                         __log__ ("TLE507", $TLE507, 2922);
                                                                                                         $visitor->visit ($TLE507);// /* , Call: 2979, Return: 2980, Exception Return: 2981, After: 2977, Exception After: 2978 */ method call
                                                                                                     }
                                                                                                 }
    public function reduce (ireducefunction $f, $initialState)/* Entry: 2982, Exit: 2983, Exception Exit: 2984 */ 
                                                                                                                 {
                                                                                                                     $TSNNt1088 = $this->vertex; // 2985
                                                                                                                     __log__ ("TSNNt1088", $TSNNt1088, 2935);
                                                                                                                     $TLE508 = $TSNNt1088->reduce ($f, $initialState);// /* , Call: 2988, Return: 2989, Exception Return: 2990, After: 2986, Exception After: 2987 */ method call
                                                                                                                     __log__ ("TLE508", $TLE508, 2936);
                                                                                                                     return $TLE508; // 2991
                                                                                                                 }
    public function depthfirsttraversal (iprepostvisitor $visitor, $start)/* Entry: 2992, Exit: 2993, Exception Exit: 2994 */ 
                                                                                                                             {
                                                                                                                                 $TSNNt1089 = $this->numberOfVertices; // 2995
                                                                                                                                 __log__ ("TSNNt1089", $TSNNt1089, 2945);
                                                                                                                                 $visited = new basicarray ($TSNNt1089);// /* , Call: 2998, Return: 2999, Exception Return: 3000, After: 2996, Exception After: 2997 */ constructor call
                                                                                                                                 __log__ ("visited", $visited, 2946);
                                                                                                                                 $v = 0; // 3001
                                                                                                                                 __log__ ("v", $v, 2951);
                                                                                                                                 $ElcfPF10 = true; // 3002
                                                                                                                                 __log__ ("ElcfPF10", $ElcfPF10, 2952);
                                                                                                                                 while (True){
                                                                                                                                     if ($ElcfPF10){
                                                                                                                                         $ElcfPF10 = false; // 3005
                                                                                                                                         __log__ ("ElcfPF10", $ElcfPF10, 2955);
                                                                                                                                     }
                                                                                                                                     else {
                                                                                                                                         ++$v; // 3006
                                                                                                                                         __log__ ("v", $v, 2956);
                                                                                                                                     }
                                                                                                                                     $TSNNt1090 = $this->numberOfVertices; // 3007
                                                                                                                                     __log__ ("TSNNt1090", $TSNNt1090, 2957);
                                                                                                                                     $TLE509 = $v < $TSNNt1090; // 3008
                                                                                                                                     __log__ ("TLE509", $TLE509, 2958);
                                                                                                                                     if ($TLE509){
                                                                                                                                          // "3010 skip"
                                                                                                                                     }
                                                                                                                                     else {
                                                                                                                                         break; // 3011
                                                                                                                                     }
                                                                                                                                     $TLE510 = false; // 3012
                                                                                                                                     __log__ ("TLE510", $TLE510, 2962);
                                                                                                                                     $visited->offsetset ($v, $TLE510);// /* , Call: 3015, Return: 3016, Exception Return: 3017, After: 3013, Exception After: 3014 */ method call
                                                                                                                                 }
                                                                                                                                 $TSNNt1091 = $this->vertex; // 3018
                                                                                                                                 __log__ ("TSNNt1091", $TSNNt1091, 2968);
                                                                                                                                 $TLE511 = $TSNNt1091->offsetget ($start);// /* , Call: 3021, Return: 3022, Exception Return: 3023, After: 3019, Exception After: 3020 */ method call
                                                                                                                                 __log__ ("TLE511", $TLE511, 2969);
                                                                                                                                 $this->dodepthfirsttraversal ($visitor, $TLE511, $visited);// /* , Call: 3026, Return: 3027, Exception Return: 3028, After: 3024, Exception After: 3025 */ method call
                                                                                                                             }
    private function dodepthfirsttraversal (iprepostvisitor $visitor, $v, $visited)/* Entry: 3029, Exit: 3030, Exception Exit: 3031 */ 
                                                                                                                                      {
                                                                                                                                          $TLE512 = $visitor->isdone ();// /* , Call: 3034, Return: 3035, Exception Return: 3036, After: 3032, Exception After: 3033 */ method call
                                                                                                                                          __log__ ("TLE512", $TLE512, 2982);
                                                                                                                                          if ($TLE512){
                                                                                                                                              $TLE513 = null; // 3038
                                                                                                                                              __log__ ("TLE513", $TLE513, 2988);
                                                                                                                                              return $TLE513; // 3039
                                                                                                                                          }
                                                                                                                                          else {
                                                                                                                                               // "3040 skip"
                                                                                                                                          }
                                                                                                                                          $visitor->previsit ($v);// /* , Call: 3043, Return: 3044, Exception Return: 3045, After: 3041, Exception After: 3042 */ method call
                                                                                                                                          $TLE514 = $v->getnumber ();// /* , Call: 3048, Return: 3049, Exception Return: 3050, After: 3046, Exception After: 3047 */ method call
                                                                                                                                          __log__ ("TLE514", $TLE514, 2996);
                                                                                                                                          $TLE515 = true; // 3051
                                                                                                                                          __log__ ("TLE515", $TLE515, 3001);
                                                                                                                                          $visited->offsetset ($TLE514, $TLE515);// /* , Call: 3054, Return: 3055, Exception Return: 3056, After: 3052, Exception After: 3053 */ method call
                                                                                                                                          $TLE516 = $v->getsuccessors ();// /* , Call: 3059, Return: 3060, Exception Return: 3061, After: 3057, Exception After: 3058 */ method call
                                                                                                                                          __log__ ("TLE516", $TLE516, 3007);
                                                                                                                                          foreach ($TLE516 as $to) {
                                                                                                                                              $TLE517 = $to->getnumber ();// /* , Call: 3065, Return: 3066, Exception Return: 3067, After: 3063, Exception After: 3064 */ method call
                                                                                                                                              __log__ ("TLE517", $TLE517, 3013);
                                                                                                                                              $TLE518 = $visited->offsetget ($TLE517);// /* , Call: 3070, Return: 3071, Exception Return: 3072, After: 3068, Exception After: 3069 */ method call
                                                                                                                                              __log__ ("TLE518", $TLE518, 3018);
                                                                                                                                              $TLE519 = !$TLE518; // 3073
                                                                                                                                              __log__ ("TLE519", $TLE519, 3023);
                                                                                                                                              if ($TLE519){
                                                                                                                                                  $this->dodepthfirsttraversal ($visitor, $to, $visited);// /* , Call: 3077, Return: 3078, Exception Return: 3079, After: 3075, Exception After: 3076 */ method call
                                                                                                                                              }
                                                                                                                                              else {
                                                                                                                                                   // "3080 skip"
                                                                                                                                              }
                                                                                                                                          }
                                                                                                                                          $visitor->postvisit ($v);// /* , Call: 3083, Return: 3084, Exception Return: 3085, After: 3081, Exception After: 3082 */ method call
                                                                                                                                      }
    public function breadthfirsttraversal (ivisitor $visitor, $start)/* Entry: 3086, Exit: 3087, Exception Exit: 3088 */ 
                                                                                                                        {
                                                                                                                            $TSNNt1092 = $this->numberOfVertices; // 3089
                                                                                                                            __log__ ("TSNNt1092", $TSNNt1092, 3039);
                                                                                                                            $enqueued = new basicarray ($TSNNt1092);// /* , Call: 3092, Return: 3093, Exception Return: 3094, After: 3090, Exception After: 3091 */ constructor call
                                                                                                                            __log__ ("enqueued", $enqueued, 3040);
                                                                                                                            $v = 0; // 3095
                                                                                                                            __log__ ("v", $v, 3045);
                                                                                                                            $ElcfPF11 = true; // 3096
                                                                                                                            __log__ ("ElcfPF11", $ElcfPF11, 3046);
                                                                                                                            while (True){
                                                                                                                                if ($ElcfPF11){
                                                                                                                                    $ElcfPF11 = false; // 3099
                                                                                                                                    __log__ ("ElcfPF11", $ElcfPF11, 3049);
                                                                                                                                }
                                                                                                                                else {
                                                                                                                                    ++$v; // 3100
                                                                                                                                    __log__ ("v", $v, 3050);
                                                                                                                                }
                                                                                                                                $TSNNt1093 = $this->numberOfVertices; // 3101
                                                                                                                                __log__ ("TSNNt1093", $TSNNt1093, 3051);
                                                                                                                                $TLE520 = $v < $TSNNt1093; // 3102
                                                                                                                                __log__ ("TLE520", $TLE520, 3052);
                                                                                                                                if ($TLE520){
                                                                                                                                     // "3104 skip"
                                                                                                                                }
                                                                                                                                else {
                                                                                                                                    break; // 3105
                                                                                                                                }
                                                                                                                                $TLE521 = false; // 3106
                                                                                                                                __log__ ("TLE521", $TLE521, 3056);
                                                                                                                                $enqueued->offsetset ($v, $TLE521);// /* , Call: 3109, Return: 3110, Exception Return: 3111, After: 3107, Exception After: 3108 */ method call
                                                                                                                            }
                                                                                                                            $queue = new queueaslinkedlist ();// /* , Call: 3114, Return: 3115, Exception Return: 3116, After: 3112, Exception After: 3113 */ constructor call
                                                                                                                            __log__ ("queue", $queue, 3062);
                                                                                                                            $TLE522 = true; // 3117
                                                                                                                            __log__ ("TLE522", $TLE522, 3067);
                                                                                                                            $enqueued->offsetset ($start, $TLE522);// /* , Call: 3120, Return: 3121, Exception Return: 3122, After: 3118, Exception After: 3119 */ method call
                                                                                                                            $TSNNt1094 = $this->vertex; // 3123
                                                                                                                            __log__ ("TSNNt1094", $TSNNt1094, 3073);
                                                                                                                            $TLE523 = $TSNNt1094->offsetget ($start);// /* , Call: 3126, Return: 3127, Exception Return: 3128, After: 3124, Exception After: 3125 */ method call
                                                                                                                            __log__ ("TLE523", $TLE523, 3074);
                                                                                                                            $queue->enqueue ($TLE523);// /* , Call: 3131, Return: 3132, Exception Return: 3133, After: 3129, Exception After: 3130 */ method call
                                                                                                                            while (True){
                                                                                                                                $TLE524 = $queue->isempty ();// /* , Call: 3137, Return: 3138, Exception Return: 3139, After: 3135, Exception After: 3136 */ method call
                                                                                                                                __log__ ("TLE524", $TLE524, 3085);
                                                                                                                                $TLE55 = !$TLE524; // 3140
                                                                                                                                __log__ ("TLE55", $TLE55, 3090);
                                                                                                                                if ($TLE55){
                                                                                                                                    $TLE525 = $visitor->isdone ();// /* , Call: 3144, Return: 3145, Exception Return: 3146, After: 3142, Exception After: 3143 */ method call
                                                                                                                                    __log__ ("TLE525", $TLE525, 3092);
                                                                                                                                    $TEF56 = !$TLE525; // 3147
                                                                                                                                    __log__ ("TEF56", $TEF56, 3097);
                                                                                                                                }
                                                                                                                                else {
                                                                                                                                    $TEF56 = $TLE55; // 3148
                                                                                                                                    __log__ ("TEF56", $TEF56, 3098);
                                                                                                                                }
                                                                                                                                $TLE526 = (bool) $TEF56; // 3149
                                                                                                                                __log__ ("TLE526", $TLE526, 3099);
                                                                                                                                $TLE527 = !$TLE526; // 3150
                                                                                                                                __log__ ("TLE527", $TLE527, 3100);
                                                                                                                                if ($TLE527){
                                                                                                                                    break; // 3152
                                                                                                                                }
                                                                                                                                else {
                                                                                                                                     // "3153 skip"
                                                                                                                                }
                                                                                                                                $v = $queue->dequeue ();// /* , Call: 3156, Return: 3157, Exception Return: 3158, After: 3154, Exception After: 3155 */ method call
                                                                                                                                __log__ ("v", $v, 3104);
                                                                                                                                $visitor->visit ($v);// /* , Call: 3161, Return: 3162, Exception Return: 3163, After: 3159, Exception After: 3160 */ method call
                                                                                                                                $TLE528 = $v->getsuccessors ();// /* , Call: 3166, Return: 3167, Exception Return: 3168, After: 3164, Exception After: 3165 */ method call
                                                                                                                                __log__ ("TLE528", $TLE528, 3114);
                                                                                                                                foreach ($TLE528 as $to) {
                                                                                                                                    $TLE529 = $to->getnumber ();// /* , Call: 3172, Return: 3173, Exception Return: 3174, After: 3170, Exception After: 3171 */ method call
                                                                                                                                    __log__ ("TLE529", $TLE529, 3120);
                                                                                                                                    $TLE530 = $enqueued->offsetget ($TLE529);// /* , Call: 3177, Return: 3178, Exception Return: 3179, After: 3175, Exception After: 3176 */ method call
                                                                                                                                    __log__ ("TLE530", $TLE530, 3125);
                                                                                                                                    $TLE531 = !$TLE530; // 3180
                                                                                                                                    __log__ ("TLE531", $TLE531, 3130);
                                                                                                                                    if ($TLE531){
                                                                                                                                        $TLE532 = $to->getnumber ();// /* , Call: 3184, Return: 3185, Exception Return: 3186, After: 3182, Exception After: 3183 */ method call
                                                                                                                                        __log__ ("TLE532", $TLE532, 3132);
                                                                                                                                        $TLE533 = true; // 3187
                                                                                                                                        __log__ ("TLE533", $TLE533, 3137);
                                                                                                                                        $enqueued->offsetset ($TLE532, $TLE533);// /* , Call: 3190, Return: 3191, Exception Return: 3192, After: 3188, Exception After: 3189 */ method call
                                                                                                                                        $queue->enqueue ($to);// /* , Call: 3195, Return: 3196, Exception Return: 3197, After: 3193, Exception After: 3194 */ method call
                                                                                                                                    }
                                                                                                                                    else {
                                                                                                                                         // "3198 skip"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
    public function topologicalordertraversal (ivisitor $visitor)/* Entry: 3199, Exit: 3200, Exception Exit: 3201 */ 
                                                                                                                    {
                                                                                                                        $TSNNt1095 = $this->numberOfVertices; // 3202
                                                                                                                        __log__ ("TSNNt1095", $TSNNt1095, 3152);
                                                                                                                        $inDegree = new basicarray ($TSNNt1095);// /* , Call: 3205, Return: 3206, Exception Return: 3207, After: 3203, Exception After: 3204 */ constructor call
                                                                                                                        __log__ ("inDegree", $inDegree, 3153);
                                                                                                                        $v = 0; // 3208
                                                                                                                        __log__ ("v", $v, 3158);
                                                                                                                        $ElcfPF12 = true; // 3209
                                                                                                                        __log__ ("ElcfPF12", $ElcfPF12, 3159);
                                                                                                                        while (True){
                                                                                                                            if ($ElcfPF12){
                                                                                                                                $ElcfPF12 = false; // 3212
                                                                                                                                __log__ ("ElcfPF12", $ElcfPF12, 3162);
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                ++$v; // 3213
                                                                                                                                __log__ ("v", $v, 3163);
                                                                                                                            }
                                                                                                                            $TSNNt1096 = $this->numberOfVertices; // 3214
                                                                                                                            __log__ ("TSNNt1096", $TSNNt1096, 3164);
                                                                                                                            $TLE534 = $v < $TSNNt1096; // 3215
                                                                                                                            __log__ ("TLE534", $TLE534, 3165);
                                                                                                                            if ($TLE534){
                                                                                                                                 // "3217 skip"
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                break; // 3218
                                                                                                                            }
                                                                                                                            $TLE535 = 0; // 3219
                                                                                                                            __log__ ("TLE535", $TLE535, 3169);
                                                                                                                            $inDegree->offsetset ($v, $TLE535);// /* , Call: 3222, Return: 3223, Exception Return: 3224, After: 3220, Exception After: 3221 */ method call
                                                                                                                        }
                                                                                                                        $TLE536 = $this->getedges ();// /* , Call: 3227, Return: 3228, Exception Return: 3229, After: 3225, Exception After: 3226 */ method call
                                                                                                                        __log__ ("TLE536", $TLE536, 3175);
                                                                                                                        foreach ($TLE536 as $edge) {
                                                                                                                            $to = $edge->getv1 ();// /* , Call: 3233, Return: 3234, Exception Return: 3235, After: 3231, Exception After: 3232 */ method call
                                                                                                                            __log__ ("to", $to, 3181);
                                                                                                                            $TLE537 = $to->getnumber ();// /* , Call: 3238, Return: 3239, Exception Return: 3240, After: 3236, Exception After: 3237 */ method call
                                                                                                                            __log__ ("TLE537", $TLE537, 3186);
                                                                                                                            $TLE538 = $to->getnumber ();// /* , Call: 3243, Return: 3244, Exception Return: 3245, After: 3241, Exception After: 3242 */ method call
                                                                                                                            __log__ ("TLE538", $TLE538, 3191);
                                                                                                                            $TLE539 = $inDegree->offsetget ($TLE538);// /* , Call: 3248, Return: 3249, Exception Return: 3250, After: 3246, Exception After: 3247 */ method call
                                                                                                                            __log__ ("TLE539", $TLE539, 3196);
                                                                                                                            $TLE540 = 1; // 3251
                                                                                                                            __log__ ("TLE540", $TLE540, 3201);
                                                                                                                            $TLE541 = $TLE539 + $TLE540; // 3252
                                                                                                                            __log__ ("TLE541", $TLE541, 3202);
                                                                                                                            $inDegree->offsetset ($TLE537, $TLE541);// /* , Call: 3255, Return: 3256, Exception Return: 3257, After: 3253, Exception After: 3254 */ method call
                                                                                                                        }
                                                                                                                        $queue = new queueaslinkedlist ();// /* , Call: 3260, Return: 3261, Exception Return: 3262, After: 3258, Exception After: 3259 */ constructor call
                                                                                                                        __log__ ("queue", $queue, 3208);
                                                                                                                        $v = 0; // 3263
                                                                                                                        __log__ ("v", $v, 3213);
                                                                                                                        $ElcfPF13 = true; // 3264
                                                                                                                        __log__ ("ElcfPF13", $ElcfPF13, 3214);
                                                                                                                        while (True){
                                                                                                                            if ($ElcfPF13){
                                                                                                                                $ElcfPF13 = false; // 3267
                                                                                                                                __log__ ("ElcfPF13", $ElcfPF13, 3217);
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                ++$v; // 3268
                                                                                                                                __log__ ("v", $v, 3218);
                                                                                                                            }
                                                                                                                            $TSNNt1097 = $this->numberOfVertices; // 3269
                                                                                                                            __log__ ("TSNNt1097", $TSNNt1097, 3219);
                                                                                                                            $TLE542 = $v < $TSNNt1097; // 3270
                                                                                                                            __log__ ("TLE542", $TLE542, 3220);
                                                                                                                            if ($TLE542){
                                                                                                                                 // "3272 skip"
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                break; // 3273
                                                                                                                            }
                                                                                                                            $TLE543 = $inDegree->offsetget ($v);// /* , Call: 3276, Return: 3277, Exception Return: 3278, After: 3274, Exception After: 3275 */ method call
                                                                                                                            __log__ ("TLE543", $TLE543, 3224);
                                                                                                                            $TLE544 = 0; // 3279
                                                                                                                            __log__ ("TLE544", $TLE544, 3229);
                                                                                                                            $TLE545 = $TLE543 == $TLE544; // 3280
                                                                                                                            __log__ ("TLE545", $TLE545, 3230);
                                                                                                                            if ($TLE545){
                                                                                                                                $TSNNt1098 = $this->vertex; // 3282
                                                                                                                                __log__ ("TSNNt1098", $TSNNt1098, 3232);
                                                                                                                                $TLE546 = $TSNNt1098->offsetget ($v);// /* , Call: 3285, Return: 3286, Exception Return: 3287, After: 3283, Exception After: 3284 */ method call
                                                                                                                                __log__ ("TLE546", $TLE546, 3233);
                                                                                                                                $queue->enqueue ($TLE546);// /* , Call: 3290, Return: 3291, Exception Return: 3292, After: 3288, Exception After: 3289 */ method call
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                 // "3293 skip"
                                                                                                                            }
                                                                                                                        }
                                                                                                                        while (True){
                                                                                                                            $TLE547 = $queue->isempty ();// /* , Call: 3297, Return: 3298, Exception Return: 3299, After: 3295, Exception After: 3296 */ method call
                                                                                                                            __log__ ("TLE547", $TLE547, 3245);
                                                                                                                            $TLE57 = !$TLE547; // 3300
                                                                                                                            __log__ ("TLE57", $TLE57, 3250);
                                                                                                                            if ($TLE57){
                                                                                                                                $TLE548 = $visitor->isdone ();// /* , Call: 3304, Return: 3305, Exception Return: 3306, After: 3302, Exception After: 3303 */ method call
                                                                                                                                __log__ ("TLE548", $TLE548, 3252);
                                                                                                                                $TEF58 = !$TLE548; // 3307
                                                                                                                                __log__ ("TEF58", $TEF58, 3257);
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                $TEF58 = $TLE57; // 3308
                                                                                                                                __log__ ("TEF58", $TEF58, 3258);
                                                                                                                            }
                                                                                                                            $TLE549 = (bool) $TEF58; // 3309
                                                                                                                            __log__ ("TLE549", $TLE549, 3259);
                                                                                                                            $TLE550 = !$TLE549; // 3310
                                                                                                                            __log__ ("TLE550", $TLE550, 3260);
                                                                                                                            if ($TLE550){
                                                                                                                                break; // 3312
                                                                                                                            }
                                                                                                                            else {
                                                                                                                                 // "3313 skip"
                                                                                                                            }
                                                                                                                            $v = $queue->dequeue ();// /* , Call: 3316, Return: 3317, Exception Return: 3318, After: 3314, Exception After: 3315 */ method call
                                                                                                                            __log__ ("v", $v, 3264);
                                                                                                                            $visitor->visit ($v);// /* , Call: 3321, Return: 3322, Exception Return: 3323, After: 3319, Exception After: 3320 */ method call
                                                                                                                            $TLE551 = $v->getsuccessors ();// /* , Call: 3326, Return: 3327, Exception Return: 3328, After: 3324, Exception After: 3325 */ method call
                                                                                                                            __log__ ("TLE551", $TLE551, 3274);
                                                                                                                            foreach ($TLE551 as $to) {
                                                                                                                                $TLE552 = $to->getnumber ();// /* , Call: 3332, Return: 3333, Exception Return: 3334, After: 3330, Exception After: 3331 */ method call
                                                                                                                                __log__ ("TLE552", $TLE552, 3280);
                                                                                                                                $TLE553 = $to->getnumber ();// /* , Call: 3337, Return: 3338, Exception Return: 3339, After: 3335, Exception After: 3336 */ method call
                                                                                                                                __log__ ("TLE553", $TLE553, 3285);
                                                                                                                                $TLE554 = $inDegree->offsetget ($TLE553);// /* , Call: 3342, Return: 3343, Exception Return: 3344, After: 3340, Exception After: 3341 */ method call
                                                                                                                                __log__ ("TLE554", $TLE554, 3290);
                                                                                                                                $TLE555 = 1; // 3345
                                                                                                                                __log__ ("TLE555", $TLE555, 3295);
                                                                                                                                $TLE556 = $TLE554 - $TLE555; // 3346
                                                                                                                                __log__ ("TLE556", $TLE556, 3296);
                                                                                                                                $inDegree->offsetset ($TLE552, $TLE556);// /* , Call: 3349, Return: 3350, Exception Return: 3351, After: 3347, Exception After: 3348 */ method call
                                                                                                                                $TLE557 = $to->getnumber ();// /* , Call: 3354, Return: 3355, Exception Return: 3356, After: 3352, Exception After: 3353 */ method call
                                                                                                                                __log__ ("TLE557", $TLE557, 3302);
                                                                                                                                $TLE558 = $inDegree->offsetget ($TLE557);// /* , Call: 3359, Return: 3360, Exception Return: 3361, After: 3357, Exception After: 3358 */ method call
                                                                                                                                __log__ ("TLE558", $TLE558, 3307);
                                                                                                                                $TLE559 = 0; // 3362
                                                                                                                                __log__ ("TLE559", $TLE559, 3312);
                                                                                                                                $TLE560 = $TLE558 == $TLE559; // 3363
                                                                                                                                __log__ ("TLE560", $TLE560, 3313);
                                                                                                                                if ($TLE560){
                                                                                                                                    $queue->enqueue ($to);// /* , Call: 3367, Return: 3368, Exception Return: 3369, After: 3365, Exception After: 3366 */ method call
                                                                                                                                }
                                                                                                                                else {
                                                                                                                                     // "3370 skip"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
    public function __tostring ()/* Entry: 3371, Exit: 3372, Exception Exit: 3373 */ 
                                                                                    {
                                                                                        $visitor = new abstractgraph_tostringvisitor ();// /* , Call: 3376, Return: 3377, Exception Return: 3378, After: 3374, Exception After: 3375 */ constructor call
                                                                                        __log__ ("visitor", $visitor, 3324);
                                                                                        $this->accept ($visitor);// /* , Call: 3381, Return: 3382, Exception Return: 3383, After: 3379, Exception After: 3380 */ method call
                                                                                        $TLE561 = $this->getclass ();// /* , Call: 3386, Return: 3387, Exception Return: 3388, After: 3384, Exception After: 3385 */ method call
                                                                                        __log__ ("TLE561", $TLE561, 3334);
                                                                                        $TLE562 = $TLE561->getname ();// /* , Call: 3391, Return: 3392, Exception Return: 3393, After: 3389, Exception After: 3390 */ method call
                                                                                        __log__ ("TLE562", $TLE562, 3339);
                                                                                        $TLE563 = "{\n"; // 3394
                                                                                        __log__ ("TLE563", $TLE563, 3344);
                                                                                        $TLE564 = $TLE562 . $TLE563; // 3395
                                                                                        __log__ ("TLE564", $TLE564, 3345);
                                                                                        $TLE565 = $visitor->gettext ();// /* , Call: 3398, Return: 3399, Exception Return: 3400, After: 3396, Exception After: 3397 */ method call
                                                                                        __log__ ("TLE565", $TLE565, 3346);
                                                                                        $TLE566 = $TLE564 . $TLE565; // 3401
                                                                                        __log__ ("TLE566", $TLE566, 3351);
                                                                                        $TLE567 = "}"; // 3402
                                                                                        __log__ ("TLE567", $TLE567, 3352);
                                                                                        $TLE568 = $TLE566 . $TLE567; // 3403
                                                                                        __log__ ("TLE568", $TLE568, 3353);
                                                                                        return $TLE568; // 3404
                                                                                    }
    public function isconnected ()/* Entry: 3405, Exit: 3406, Exception Exit: 3407 */ 
                                                                                     {
                                                                                         $visitor = new countingvisitor ();// /* , Call: 3410, Return: 3411, Exception Return: 3412, After: 3408, Exception After: 3409 */ constructor call
                                                                                         __log__ ("visitor", $visitor, 3358);
                                                                                         $TLE569 = new preorder ($visitor);// /* , Call: 3415, Return: 3416, Exception Return: 3417, After: 3413, Exception After: 3414 */ constructor call
                                                                                         __log__ ("TLE569", $TLE569, 3363);
                                                                                         $TLE570 = 0; // 3418
                                                                                         __log__ ("TLE570", $TLE570, 3368);
                                                                                         $this->depthfirsttraversal ($TLE569, $TLE570);// /* , Call: 3421, Return: 3422, Exception Return: 3423, After: 3419, Exception After: 3420 */ method call
                                                                                         $TLE571 = $visitor->getcount ();// /* , Call: 3426, Return: 3427, Exception Return: 3428, After: 3424, Exception After: 3425 */ method call
                                                                                         __log__ ("TLE571", $TLE571, 3374);
                                                                                         $TSNNt1099 = $this->numberOfVertices; // 3429
                                                                                         __log__ ("TSNNt1099", $TSNNt1099, 3379);
                                                                                         $TLE572 = $TLE571 == $TSNNt1099; // 3430
                                                                                         __log__ ("TLE572", $TLE572, 3380);
                                                                                         return $TLE572; // 3431
                                                                                     }
    public function isstronglyconnected ()/* Entry: 3432, Exit: 3433, Exception Exit: 3434 */ 
                                                                                             {
                                                                                                 $visitor = new countingvisitor ();// /* , Call: 3437, Return: 3438, Exception Return: 3439, After: 3435, Exception After: 3436 */ constructor call
                                                                                                 __log__ ("visitor", $visitor, 3385);
                                                                                                 $v = 0; // 3440
                                                                                                 __log__ ("v", $v, 3390);
                                                                                                 $ElcfPF14 = true; // 3441
                                                                                                 __log__ ("ElcfPF14", $ElcfPF14, 3391);
                                                                                                 while (True){
                                                                                                     if ($ElcfPF14){
                                                                                                         $ElcfPF14 = false; // 3444
                                                                                                         __log__ ("ElcfPF14", $ElcfPF14, 3394);
                                                                                                     }
                                                                                                     else {
                                                                                                         ++$v; // 3445
                                                                                                         __log__ ("v", $v, 3395);
                                                                                                     }
                                                                                                     $TSNNt1100 = $this->numberOfVertices; // 3446
                                                                                                     __log__ ("TSNNt1100", $TSNNt1100, 3396);
                                                                                                     $TLE573 = $v < $TSNNt1100; // 3447
                                                                                                     __log__ ("TLE573", $TLE573, 3397);
                                                                                                     if ($TLE573){
                                                                                                          // "3449 skip"
                                                                                                     }
                                                                                                     else {
                                                                                                         break; // 3450
                                                                                                     }
                                                                                                     $TLE574 = 0; // 3451
                                                                                                     __log__ ("TLE574", $TLE574, 3401);
                                                                                                     $visitor->setcount ($TLE574);// /* , Call: 3454, Return: 3455, Exception Return: 3456, After: 3452, Exception After: 3453 */ method call
                                                                                                     $TLE575 = new preorder ($visitor);// /* , Call: 3459, Return: 3460, Exception Return: 3461, After: 3457, Exception After: 3458 */ constructor call
                                                                                                     __log__ ("TLE575", $TLE575, 3407);
                                                                                                     $this->depthfirsttraversal ($TLE575, $v);// /* , Call: 3464, Return: 3465, Exception Return: 3466, After: 3462, Exception After: 3463 */ method call
                                                                                                     $TLE576 = $visitor->getcount ();// /* , Call: 3469, Return: 3470, Exception Return: 3471, After: 3467, Exception After: 3468 */ method call
                                                                                                     __log__ ("TLE576", $TLE576, 3417);
                                                                                                     $TSNNt1101 = $this->numberOfVertices; // 3472
                                                                                                     __log__ ("TSNNt1101", $TSNNt1101, 3422);
                                                                                                     $TLE577 = $TLE576 != $TSNNt1101; // 3473
                                                                                                     __log__ ("TLE577", $TLE577, 3423);
                                                                                                     if ($TLE577){
                                                                                                         $TLE578 = false; // 3475
                                                                                                         __log__ ("TLE578", $TLE578, 3425);
                                                                                                         return $TLE578; // 3476
                                                                                                     }
                                                                                                     else {
                                                                                                          // "3477 skip"
                                                                                                     }
                                                                                                 }
                                                                                                 $TLE579 = true; // 3478
                                                                                                 __log__ ("TLE579", $TLE579, 3428);
                                                                                                 return $TLE579; // 3479
                                                                                             }
    public function iscyclic ()/* Entry: 3480, Exit: 3481, Exception Exit: 3482 */ 
                                                                                  {
                                                                                      $visitor = new countingvisitor ();// /* , Call: 3485, Return: 3486, Exception Return: 3487, After: 3483, Exception After: 3484 */ constructor call
                                                                                      __log__ ("visitor", $visitor, 3433);
                                                                                      $this->topologicalordertraversal ($visitor);// /* , Call: 3490, Return: 3491, Exception Return: 3492, After: 3488, Exception After: 3489 */ method call
                                                                                      $TLE580 = $visitor->getcount ();// /* , Call: 3495, Return: 3496, Exception Return: 3497, After: 3493, Exception After: 3494 */ method call
                                                                                      __log__ ("TLE580", $TLE580, 3443);
                                                                                      $TSNNt1102 = $this->numberOfVertices; // 3498
                                                                                      __log__ ("TSNNt1102", $TSNNt1102, 3448);
                                                                                      $TLE581 = $TLE580 != $TSNNt1102; // 3499
                                                                                      __log__ ("TLE581", $TLE581, 3449);
                                                                                      return $TLE581; // 3500
                                                                                  }
    public function getiterator ()/* Entry: 3501, Exit: 3502, Exception Exit: 3503 */ 
                                                                                     {
                                                                                         $TLE582 = new abstractgraph_vertexiterator ($this);// /* , Call: 3506, Return: 3507, Exception Return: 3508, After: 3504, Exception After: 3505 */ constructor call
                                                                                         __log__ ("TLE582", $TLE582, 3454);
                                                                                         return $TLE582; // 3509
                                                                                     }
}
class graphaslists_edgeiterator extends abstractiterator { // "3510"
    protected $graph = null;
    protected $v = 0;
    protected $ptr = null;
    protected $pos = 0;
    public function __construct (graphaslists $graph)/* Entry: 3511, Exit: 3512, Exception Exit: 3513 */ 
                                                                                                        {
                                                                                                            abstractiterator::__construct ();// /* , Call: 3516, Return: 3517, Exception Return: 3518, After: 3514, Exception After: 3515 */ resolved method call
                                                                                                            $TSNNt1103 = $graph; // 3519
                                                                                                            __log__ ("TSNNt1103", $TSNNt1103, 3469);
                                                                                                            $this->graph = $TSNNt1103; // 3520
                                                                                                            $TSNNt1104 = $this->graph; // 3521
                                                                                                            __log__ ("TSNNt1104", $TSNNt1104, 3471);
                                                                                                            $list = $TSNNt1104->getadjacencylist ();// /* , Call: 3524, Return: 3525, Exception Return: 3526, After: 3522, Exception After: 3523 */ method call
                                                                                                            __log__ ("list", $list, 3472);
                                                                                                            $TLE583 = 0; // 3527
                                                                                                            __log__ ("TLE583", $TLE583, 3477);
                                                                                                            $TSNNt1105 = $TLE583; // 3528
                                                                                                            __log__ ("TSNNt1105", $TSNNt1105, 3478);
                                                                                                            $this->v = $TSNNt1105; // 3529
                                                                                                            $ElcfPF15 = true; // 3530
                                                                                                            __log__ ("ElcfPF15", $ElcfPF15, 3480);
                                                                                                            while (True){
                                                                                                                if ($ElcfPF15){
                                                                                                                    $ElcfPF15 = false; // 3533
                                                                                                                    __log__ ("ElcfPF15", $ElcfPF15, 3483);
                                                                                                                }
                                                                                                                else {
                                                                                                                    $TSNNt1106 = $this->v; // 3534
                                                                                                                    __log__ ("TSNNt1106", $TSNNt1106, 3484);
                                                                                                                    ++$TSNNt1106; // 3535
                                                                                                                    __log__ ("TSNNt1106", $TSNNt1106, 3485);
                                                                                                                    $this->v = $TSNNt1106; // 3536
                                                                                                                }
                                                                                                                $TSNNt1107 = $this->graph; // 3537
                                                                                                                __log__ ("TSNNt1107", $TSNNt1107, 3487);
                                                                                                                $TLE584 = $TSNNt1107->getnumberofvertices ();// /* , Call: 3540, Return: 3541, Exception Return: 3542, After: 3538, Exception After: 3539 */ method call
                                                                                                                __log__ ("TLE584", $TLE584, 3488);
                                                                                                                $TSNNt1108 = $this->v; // 3543
                                                                                                                __log__ ("TSNNt1108", $TSNNt1108, 3493);
                                                                                                                $TLE585 = $TSNNt1108 < $TLE584; // 3544
                                                                                                                __log__ ("TLE585", $TLE585, 3494);
                                                                                                                if ($TLE585){
                                                                                                                     // "3546 skip"
                                                                                                                }
                                                                                                                else {
                                                                                                                    break; // 3547
                                                                                                                }
                                                                                                                $TSNNt1109 = $this->v; // 3548
                                                                                                                __log__ ("TSNNt1109", $TSNNt1109, 3498);
                                                                                                                $TLE586 = $list->offsetget ($TSNNt1109);// /* , Call: 3551, Return: 3552, Exception Return: 3553, After: 3549, Exception After: 3550 */ method call
                                                                                                                __log__ ("TLE586", $TLE586, 3499);
                                                                                                                $TLE587 = $TLE586->gethead ();// /* , Call: 3556, Return: 3557, Exception Return: 3558, After: 3554, Exception After: 3555 */ method call
                                                                                                                __log__ ("TLE587", $TLE587, 3504);
                                                                                                                $TSNNt1110 = $TLE587; // 3559
                                                                                                                __log__ ("TSNNt1110", $TSNNt1110, 3509);
                                                                                                                $this->ptr = $TSNNt1110; // 3560
                                                                                                                $TLE588 = 0; // 3561
                                                                                                                __log__ ("TLE588", $TLE588, 3511);
                                                                                                                $TSNNt1111 = $TLE588; // 3562
                                                                                                                __log__ ("TSNNt1111", $TSNNt1111, 3512);
                                                                                                                $this->pos = $TSNNt1111; // 3563
                                                                                                                $TLE589 = null; // 3564
                                                                                                                __log__ ("TLE589", $TLE589, 3514);
                                                                                                                $TSNNt1112 = $this->ptr; // 3565
                                                                                                                __log__ ("TSNNt1112", $TSNNt1112, 3515);
                                                                                                                $TLE590 = $TSNNt1112 !== $TLE589; // 3566
                                                                                                                __log__ ("TLE590", $TLE590, 3516);
                                                                                                                if ($TLE590){
                                                                                                                    break; // 3568
                                                                                                                }
                                                                                                                else {
                                                                                                                     // "3569 skip"
                                                                                                                }
                                                                                                            }
                                                                                                        }
    public function valid ()/* Entry: 3570, Exit: 3571, Exception Exit: 3572 */ 
                                                                               {
                                                                                   $TLE591 = null; // 3573
                                                                                   __log__ ("TLE591", $TLE591, 3523);
                                                                                   $TSNNt1113 = $this->ptr; // 3574
                                                                                   __log__ ("TSNNt1113", $TSNNt1113, 3524);
                                                                                   $TLE592 = $TSNNt1113 !== $TLE591; // 3575
                                                                                   __log__ ("TLE592", $TLE592, 3525);
                                                                                   return $TLE592; // 3576
                                                                               }
    public function key ()/* Entry: 3577, Exit: 3578, Exception Exit: 3579 */ 
                                                                             {
                                                                                 $TSNNt1114 = $this->graph; // 3580
                                                                                 __log__ ("TSNNt1114", $TSNNt1114, 3530);
                                                                                 $TLE593 = $TSNNt1114->getnumberofvertices ();// /* , Call: 3583, Return: 3584, Exception Return: 3585, After: 3581, Exception After: 3582 */ method call
                                                                                 __log__ ("TLE593", $TLE593, 3531);
                                                                                 $TSNNt1115 = $this->v; // 3586
                                                                                 __log__ ("TSNNt1115", $TSNNt1115, 3536);
                                                                                 $TLE594 = $TSNNt1115 * $TLE593; // 3587
                                                                                 __log__ ("TLE594", $TLE594, 3537);
                                                                                 $TSNNt1116 = $this->pos; // 3588
                                                                                 __log__ ("TSNNt1116", $TSNNt1116, 3538);
                                                                                 $TLE595 = $TLE594 + $TSNNt1116; // 3589
                                                                                 __log__ ("TLE595", $TLE595, 3539);
                                                                                 return $TLE595; // 3590
                                                                             }
    public function current ()/* Entry: 3591, Exit: 3592, Exception Exit: 3593 */ 
                                                                                 {
                                                                                     $TSNNt1117 = $this->ptr; // 3594
                                                                                     __log__ ("TSNNt1117", $TSNNt1117, 3544);
                                                                                     $TLE596 = $TSNNt1117->getdatum ();// /* , Call: 3597, Return: 3598, Exception Return: 3599, After: 3595, Exception After: 3596 */ method call
                                                                                     __log__ ("TLE596", $TLE596, 3545);
                                                                                     return $TLE596; // 3600
                                                                                 }
    public function next ()/* Entry: 3601, Exit: 3602, Exception Exit: 3603 */ 
                                                                              {
                                                                                  $TSNNt1118 = $this->ptr; // 3604
                                                                                  __log__ ("TSNNt1118", $TSNNt1118, 3554);
                                                                                  $TLE597 = $TSNNt1118->getnext ();// /* , Call: 3607, Return: 3608, Exception Return: 3609, After: 3605, Exception After: 3606 */ method call
                                                                                  __log__ ("TLE597", $TLE597, 3555);
                                                                                  $TSNNt1119 = $TLE597; // 3610
                                                                                  __log__ ("TSNNt1119", $TSNNt1119, 3560);
                                                                                  $this->ptr = $TSNNt1119; // 3611
                                                                                  $TSNNt1120 = $this->pos; // 3612
                                                                                  __log__ ("TSNNt1120", $TSNNt1120, 3562);
                                                                                  $Toa76 = $TSNNt1120; // 3613
                                                                                  __log__ ("Toa76", $Toa76, 3563);
                                                                                  $TLE598 = 1; // 3614
                                                                                  __log__ ("TLE598", $TLE598, 3564);
                                                                                  $Toa76 = $Toa76 + $TLE598; // 3615
                                                                                  __log__ ("Toa76", $Toa76, 3565);
                                                                                  $TSNNt1121 = $Toa76; // 3616
                                                                                  __log__ ("TSNNt1121", $TSNNt1121, 3566);
                                                                                  $this->pos = $TSNNt1121; // 3617
                                                                                  $TLE599 = null; // 3618
                                                                                  __log__ ("TLE599", $TLE599, 3568);
                                                                                  $TSNNt1122 = $this->ptr; // 3619
                                                                                  __log__ ("TSNNt1122", $TSNNt1122, 3569);
                                                                                  $TLE600 = $TSNNt1122 !== $TLE599; // 3620
                                                                                  __log__ ("TLE600", $TLE600, 3570);
                                                                                  if ($TLE600){
                                                                                      $TLE601 = null; // 3622
                                                                                      __log__ ("TLE601", $TLE601, 3572);
                                                                                      return $TLE601; // 3623
                                                                                  }
                                                                                  else {
                                                                                       // "3624 skip"
                                                                                  }
                                                                                  $TSNNt1123 = $this->graph; // 3625
                                                                                  __log__ ("TSNNt1123", $TSNNt1123, 3575);
                                                                                  $list = $TSNNt1123->getadjacencylist ();// /* , Call: 3628, Return: 3629, Exception Return: 3630, After: 3626, Exception After: 3627 */ method call
                                                                                  __log__ ("list", $list, 3576);
                                                                                  $TSNNt1124 = $this->v; // 3631
                                                                                  __log__ ("TSNNt1124", $TSNNt1124, 3581);
                                                                                  ++$TSNNt1124; // 3632
                                                                                  __log__ ("TSNNt1124", $TSNNt1124, 3582);
                                                                                  $this->v = $TSNNt1124; // 3633
                                                                                  $ElcfPF16 = true; // 3634
                                                                                  __log__ ("ElcfPF16", $ElcfPF16, 3584);
                                                                                  while (True){
                                                                                      if ($ElcfPF16){
                                                                                          $ElcfPF16 = false; // 3637
                                                                                          __log__ ("ElcfPF16", $ElcfPF16, 3587);
                                                                                      }
                                                                                      else {
                                                                                          $TSNNt1125 = $this->v; // 3638
                                                                                          __log__ ("TSNNt1125", $TSNNt1125, 3588);
                                                                                          ++$TSNNt1125; // 3639
                                                                                          __log__ ("TSNNt1125", $TSNNt1125, 3589);
                                                                                          $this->v = $TSNNt1125; // 3640
                                                                                      }
                                                                                      $TSNNt1126 = $this->graph; // 3641
                                                                                      __log__ ("TSNNt1126", $TSNNt1126, 3591);
                                                                                      $TLE602 = $TSNNt1126->getnumberofvertices ();// /* , Call: 3644, Return: 3645, Exception Return: 3646, After: 3642, Exception After: 3643 */ method call
                                                                                      __log__ ("TLE602", $TLE602, 3592);
                                                                                      $TSNNt1127 = $this->v; // 3647
                                                                                      __log__ ("TSNNt1127", $TSNNt1127, 3597);
                                                                                      $TLE603 = $TSNNt1127 < $TLE602; // 3648
                                                                                      __log__ ("TLE603", $TLE603, 3598);
                                                                                      if ($TLE603){
                                                                                           // "3650 skip"
                                                                                      }
                                                                                      else {
                                                                                          break; // 3651
                                                                                      }
                                                                                      $TSNNt1128 = $this->v; // 3652
                                                                                      __log__ ("TSNNt1128", $TSNNt1128, 3602);
                                                                                      $TLE604 = $list->offsetget ($TSNNt1128);// /* , Call: 3655, Return: 3656, Exception Return: 3657, After: 3653, Exception After: 3654 */ method call
                                                                                      __log__ ("TLE604", $TLE604, 3603);
                                                                                      $TLE605 = $TLE604->gethead ();// /* , Call: 3660, Return: 3661, Exception Return: 3662, After: 3658, Exception After: 3659 */ method call
                                                                                      __log__ ("TLE605", $TLE605, 3608);
                                                                                      $TSNNt1129 = $TLE605; // 3663
                                                                                      __log__ ("TSNNt1129", $TSNNt1129, 3613);
                                                                                      $this->ptr = $TSNNt1129; // 3664
                                                                                      $TLE606 = 0; // 3665
                                                                                      __log__ ("TLE606", $TLE606, 3615);
                                                                                      $TSNNt1130 = $TLE606; // 3666
                                                                                      __log__ ("TSNNt1130", $TSNNt1130, 3616);
                                                                                      $this->pos = $TSNNt1130; // 3667
                                                                                      $TLE607 = null; // 3668
                                                                                      __log__ ("TLE607", $TLE607, 3618);
                                                                                      $TSNNt1131 = $this->ptr; // 3669
                                                                                      __log__ ("TSNNt1131", $TSNNt1131, 3619);
                                                                                      $TLE608 = $TSNNt1131 !== $TLE607; // 3670
                                                                                      __log__ ("TLE608", $TLE608, 3620);
                                                                                      if ($TLE608){
                                                                                          break; // 3672
                                                                                      }
                                                                                      else {
                                                                                           // "3673 skip"
                                                                                      }
                                                                                  }
                                                                              }
    public function rewind ()/* Entry: 3674, Exit: 3675, Exception Exit: 3676 */ 
                                                                                {
                                                                                    $TSNNt1132 = $this->graph; // 3677
                                                                                    __log__ ("TSNNt1132", $TSNNt1132, 3627);
                                                                                    $list = $TSNNt1132->getadjacencylist ();// /* , Call: 3680, Return: 3681, Exception Return: 3682, After: 3678, Exception After: 3679 */ method call
                                                                                    __log__ ("list", $list, 3628);
                                                                                    $TLE609 = 0; // 3683
                                                                                    __log__ ("TLE609", $TLE609, 3633);
                                                                                    $TSNNt1133 = $TLE609; // 3684
                                                                                    __log__ ("TSNNt1133", $TSNNt1133, 3634);
                                                                                    $this->v = $TSNNt1133; // 3685
                                                                                    $ElcfPF17 = true; // 3686
                                                                                    __log__ ("ElcfPF17", $ElcfPF17, 3636);
                                                                                    while (True){
                                                                                        if ($ElcfPF17){
                                                                                            $ElcfPF17 = false; // 3689
                                                                                            __log__ ("ElcfPF17", $ElcfPF17, 3639);
                                                                                        }
                                                                                        else {
                                                                                            $TSNNt1134 = $this->v; // 3690
                                                                                            __log__ ("TSNNt1134", $TSNNt1134, 3640);
                                                                                            ++$TSNNt1134; // 3691
                                                                                            __log__ ("TSNNt1134", $TSNNt1134, 3641);
                                                                                            $this->v = $TSNNt1134; // 3692
                                                                                        }
                                                                                        $TSNNt1135 = $this->graph; // 3693
                                                                                        __log__ ("TSNNt1135", $TSNNt1135, 3643);
                                                                                        $TLE610 = $TSNNt1135->getnumberofvertices ();// /* , Call: 3696, Return: 3697, Exception Return: 3698, After: 3694, Exception After: 3695 */ method call
                                                                                        __log__ ("TLE610", $TLE610, 3644);
                                                                                        $TSNNt1136 = $this->v; // 3699
                                                                                        __log__ ("TSNNt1136", $TSNNt1136, 3649);
                                                                                        $TLE611 = $TSNNt1136 < $TLE610; // 3700
                                                                                        __log__ ("TLE611", $TLE611, 3650);
                                                                                        if ($TLE611){
                                                                                             // "3702 skip"
                                                                                        }
                                                                                        else {
                                                                                            break; // 3703
                                                                                        }
                                                                                        $TSNNt1137 = $this->v; // 3704
                                                                                        __log__ ("TSNNt1137", $TSNNt1137, 3654);
                                                                                        $TLE612 = $list->offsetget ($TSNNt1137);// /* , Call: 3707, Return: 3708, Exception Return: 3709, After: 3705, Exception After: 3706 */ method call
                                                                                        __log__ ("TLE612", $TLE612, 3655);
                                                                                        $TLE613 = $TLE612->gethead ();// /* , Call: 3712, Return: 3713, Exception Return: 3714, After: 3710, Exception After: 3711 */ method call
                                                                                        __log__ ("TLE613", $TLE613, 3660);
                                                                                        $TSNNt1138 = $TLE613; // 3715
                                                                                        __log__ ("TSNNt1138", $TSNNt1138, 3665);
                                                                                        $this->ptr = $TSNNt1138; // 3716
                                                                                        $TLE614 = 0; // 3717
                                                                                        __log__ ("TLE614", $TLE614, 3667);
                                                                                        $TSNNt1139 = $TLE614; // 3718
                                                                                        __log__ ("TSNNt1139", $TSNNt1139, 3668);
                                                                                        $this->pos = $TSNNt1139; // 3719
                                                                                        $TLE615 = null; // 3720
                                                                                        __log__ ("TLE615", $TLE615, 3670);
                                                                                        $TSNNt1140 = $this->ptr; // 3721
                                                                                        __log__ ("TSNNt1140", $TSNNt1140, 3671);
                                                                                        $TLE616 = $TSNNt1140 !== $TLE615; // 3722
                                                                                        __log__ ("TLE616", $TLE616, 3672);
                                                                                        if ($TLE616){
                                                                                            break; // 3724
                                                                                        }
                                                                                        else {
                                                                                             // "3725 skip"
                                                                                        }
                                                                                    }
                                                                                }
}
class graphaslists_edgeaggregate implements iteratoraggregate { // "3726"
    protected $graph = null;
    public function __construct (graphaslists $graph)/* Entry: 3727, Exit: 3728, Exception Exit: 3729 */ 
                                                                                                        {
                                                                                                            $TSNNt1141 = $graph; // 3730
                                                                                                            __log__ ("TSNNt1141", $TSNNt1141, 3680);
                                                                                                            $this->graph = $TSNNt1141; // 3731
                                                                                                        }
    public function getiterator ()/* Entry: 3732, Exit: 3733, Exception Exit: 3734 */ 
                                                                                     {
                                                                                         $TSNNt1142 = $this->graph; // 3735
                                                                                         __log__ ("TSNNt1142", $TSNNt1142, 3685);
                                                                                         $TLE617 = new graphaslists_edgeiterator ($TSNNt1142);// /* , Call: 3738, Return: 3739, Exception Return: 3740, After: 3736, Exception After: 3737 */ constructor call
                                                                                         __log__ ("TLE617", $TLE617, 3686);
                                                                                         return $TLE617; // 3741
                                                                                     }
}
class graphaslists_emanatingedgeiterator extends abstractiterator { // "3742"
    protected $graph = null;
    protected $v = 0;
    protected $ptr = null;
    protected $pos = 0;
    public function __construct (graphaslists $graph, $v)/* Entry: 3743, Exit: 3744, Exception Exit: 3745 */ 
                                                                                                            {
                                                                                                                abstractiterator::__construct ();// /* , Call: 3748, Return: 3749, Exception Return: 3750, After: 3746, Exception After: 3747 */ resolved method call
                                                                                                                $TSNNt1143 = $graph; // 3751
                                                                                                                __log__ ("TSNNt1143", $TSNNt1143, 3701);
                                                                                                                $this->graph = $TSNNt1143; // 3752
                                                                                                                $TSNNt1144 = $v; // 3753
                                                                                                                __log__ ("TSNNt1144", $TSNNt1144, 3703);
                                                                                                                $this->v = $TSNNt1144; // 3754
                                                                                                                $TSNNt1145 = $this->graph; // 3755
                                                                                                                __log__ ("TSNNt1145", $TSNNt1145, 3705);
                                                                                                                $list = $TSNNt1145->getadjacencylist ();// /* , Call: 3758, Return: 3759, Exception Return: 3760, After: 3756, Exception After: 3757 */ method call
                                                                                                                __log__ ("list", $list, 3706);
                                                                                                                $TSNNt1146 = $this->v; // 3761
                                                                                                                __log__ ("TSNNt1146", $TSNNt1146, 3711);
                                                                                                                $TLE618 = $list->offsetget ($TSNNt1146);// /* , Call: 3764, Return: 3765, Exception Return: 3766, After: 3762, Exception After: 3763 */ method call
                                                                                                                __log__ ("TLE618", $TLE618, 3712);
                                                                                                                $TLE619 = $TLE618->gethead ();// /* , Call: 3769, Return: 3770, Exception Return: 3771, After: 3767, Exception After: 3768 */ method call
                                                                                                                __log__ ("TLE619", $TLE619, 3717);
                                                                                                                $TSNNt1147 = $TLE619; // 3772
                                                                                                                __log__ ("TSNNt1147", $TSNNt1147, 3722);
                                                                                                                $this->ptr = $TSNNt1147; // 3773
                                                                                                                $TLE620 = 0; // 3774
                                                                                                                __log__ ("TLE620", $TLE620, 3724);
                                                                                                                $TSNNt1148 = $TLE620; // 3775
                                                                                                                __log__ ("TSNNt1148", $TSNNt1148, 3725);
                                                                                                                $this->pos = $TSNNt1148; // 3776
                                                                                                            }
    public function valid ()/* Entry: 3777, Exit: 3778, Exception Exit: 3779 */ 
                                                                               {
                                                                                   $TLE621 = null; // 3780
                                                                                   __log__ ("TLE621", $TLE621, 3730);
                                                                                   $TSNNt1149 = $this->ptr; // 3781
                                                                                   __log__ ("TSNNt1149", $TSNNt1149, 3731);
                                                                                   $TLE622 = $TSNNt1149 !== $TLE621; // 3782
                                                                                   __log__ ("TLE622", $TLE622, 3732);
                                                                                   return $TLE622; // 3783
                                                                               }
    public function key ()/* Entry: 3784, Exit: 3785, Exception Exit: 3786 */ 
                                                                             {
                                                                                 $TSNNt1150 = $this->graph; // 3787
                                                                                 __log__ ("TSNNt1150", $TSNNt1150, 3737);
                                                                                 $TLE623 = $TSNNt1150->getnumberofvertices ();// /* , Call: 3790, Return: 3791, Exception Return: 3792, After: 3788, Exception After: 3789 */ method call
                                                                                 __log__ ("TLE623", $TLE623, 3738);
                                                                                 $TSNNt1151 = $this->v; // 3793
                                                                                 __log__ ("TSNNt1151", $TSNNt1151, 3743);
                                                                                 $TLE624 = $TSNNt1151 * $TLE623; // 3794
                                                                                 __log__ ("TLE624", $TLE624, 3744);
                                                                                 $TSNNt1152 = $this->pos; // 3795
                                                                                 __log__ ("TSNNt1152", $TSNNt1152, 3745);
                                                                                 $TLE625 = $TLE624 + $TSNNt1152; // 3796
                                                                                 __log__ ("TLE625", $TLE625, 3746);
                                                                                 return $TLE625; // 3797
                                                                             }
    public function current ()/* Entry: 3798, Exit: 3799, Exception Exit: 3800 */ 
                                                                                 {
                                                                                     $TSNNt1153 = $this->ptr; // 3801
                                                                                     __log__ ("TSNNt1153", $TSNNt1153, 3751);
                                                                                     $TLE626 = $TSNNt1153->getdatum ();// /* , Call: 3804, Return: 3805, Exception Return: 3806, After: 3802, Exception After: 3803 */ method call
                                                                                     __log__ ("TLE626", $TLE626, 3752);
                                                                                     return $TLE626; // 3807
                                                                                 }
    public function next ()/* Entry: 3808, Exit: 3809, Exception Exit: 3810 */ 
                                                                              {
                                                                                  $TSNNt1154 = $this->ptr; // 3811
                                                                                  __log__ ("TSNNt1154", $TSNNt1154, 3761);
                                                                                  $TLE627 = $TSNNt1154->getnext ();// /* , Call: 3814, Return: 3815, Exception Return: 3816, After: 3812, Exception After: 3813 */ method call
                                                                                  __log__ ("TLE627", $TLE627, 3762);
                                                                                  $TSNNt1155 = $TLE627; // 3817
                                                                                  __log__ ("TSNNt1155", $TSNNt1155, 3767);
                                                                                  $this->ptr = $TSNNt1155; // 3818
                                                                                  $TSNNt1156 = $this->pos; // 3819
                                                                                  __log__ ("TSNNt1156", $TSNNt1156, 3769);
                                                                                  $Toa77 = $TSNNt1156; // 3820
                                                                                  __log__ ("Toa77", $Toa77, 3770);
                                                                                  $TLE628 = 1; // 3821
                                                                                  __log__ ("TLE628", $TLE628, 3771);
                                                                                  $Toa77 = $Toa77 + $TLE628; // 3822
                                                                                  __log__ ("Toa77", $Toa77, 3772);
                                                                                  $TSNNt1157 = $Toa77; // 3823
                                                                                  __log__ ("TSNNt1157", $TSNNt1157, 3773);
                                                                                  $this->pos = $TSNNt1157; // 3824
                                                                              }
    public function rewind ()/* Entry: 3825, Exit: 3826, Exception Exit: 3827 */ 
                                                                                {
                                                                                    $TSNNt1158 = $this->graph; // 3828
                                                                                    __log__ ("TSNNt1158", $TSNNt1158, 3778);
                                                                                    $list = $TSNNt1158->getadjacencylist ();// /* , Call: 3831, Return: 3832, Exception Return: 3833, After: 3829, Exception After: 3830 */ method call
                                                                                    __log__ ("list", $list, 3779);
                                                                                    $TSNNt1159 = $this->v; // 3834
                                                                                    __log__ ("TSNNt1159", $TSNNt1159, 3784);
                                                                                    $TLE629 = $list->offsetget ($TSNNt1159);// /* , Call: 3837, Return: 3838, Exception Return: 3839, After: 3835, Exception After: 3836 */ method call
                                                                                    __log__ ("TLE629", $TLE629, 3785);
                                                                                    $TLE630 = $TLE629->gethead ();// /* , Call: 3842, Return: 3843, Exception Return: 3844, After: 3840, Exception After: 3841 */ method call
                                                                                    __log__ ("TLE630", $TLE630, 3790);
                                                                                    $TSNNt1160 = $TLE630; // 3845
                                                                                    __log__ ("TSNNt1160", $TSNNt1160, 3795);
                                                                                    $this->ptr = $TSNNt1160; // 3846
                                                                                    $TLE631 = 0; // 3847
                                                                                    __log__ ("TLE631", $TLE631, 3797);
                                                                                    $TSNNt1161 = $TLE631; // 3848
                                                                                    __log__ ("TSNNt1161", $TSNNt1161, 3798);
                                                                                    $this->pos = $TSNNt1161; // 3849
                                                                                }
}
class graphaslists_emanatingedgeaggregate implements iteratoraggregate { // "3850"
    protected $graph = null;
    protected $v = 0;
    public function __construct (graphaslists $graph, $v)/* Entry: 3851, Exit: 3852, Exception Exit: 3853 */ 
                                                                                                            {
                                                                                                                $TSNNt1162 = $graph; // 3854
                                                                                                                __log__ ("TSNNt1162", $TSNNt1162, 3804);
                                                                                                                $this->graph = $TSNNt1162; // 3855
                                                                                                                $TSNNt1163 = $v; // 3856
                                                                                                                __log__ ("TSNNt1163", $TSNNt1163, 3806);
                                                                                                                $this->v = $TSNNt1163; // 3857
                                                                                                            }
    public function getiterator ()/* Entry: 3858, Exit: 3859, Exception Exit: 3860 */ 
                                                                                     {
                                                                                         $TSNNt1164 = $this->graph; // 3861
                                                                                         __log__ ("TSNNt1164", $TSNNt1164, 3811);
                                                                                         $TSNNt1165 = $this->v; // 3862
                                                                                         __log__ ("TSNNt1165", $TSNNt1165, 3812);
                                                                                         $TLE632 = new graphaslists_emanatingedgeiterator ($TSNNt1164, $TSNNt1165);// /* , Call: 3865, Return: 3866, Exception Return: 3867, After: 3863, Exception After: 3864 */ constructor call
                                                                                         __log__ ("TLE632", $TLE632, 3813);
                                                                                         return $TLE632; // 3868
                                                                                     }
}
class graphaslists extends abstractgraph { // "3869"
    protected $adjacencyList = null;
    public function __construct ($size = 0)/* Entry: 3870, Exit: 3871, Exception Exit: 3872 */ 
                                                                                              {
                                                                                                  abstractgraph::__construct ($size);// /* , Call: 3875, Return: 3876, Exception Return: 3877, After: 3873, Exception After: 3874 */ resolved method call
                                                                                                  $TLE633 = new basicarray ($size);// /* , Call: 3880, Return: 3881, Exception Return: 3882, After: 3878, Exception After: 3879 */ constructor call
                                                                                                  __log__ ("TLE633", $TLE633, 3828);
                                                                                                  $TSNNt1166 = $TLE633; // 3883
                                                                                                  __log__ ("TSNNt1166", $TSNNt1166, 3833);
                                                                                                  $this->adjacencyList = $TSNNt1166; // 3884
                                                                                                  $i = 0; // 3885
                                                                                                  __log__ ("i", $i, 3835);
                                                                                                  $ElcfPF18 = true; // 3886
                                                                                                  __log__ ("ElcfPF18", $ElcfPF18, 3836);
                                                                                                  while (True){
                                                                                                      if ($ElcfPF18){
                                                                                                          $ElcfPF18 = false; // 3889
                                                                                                          __log__ ("ElcfPF18", $ElcfPF18, 3839);
                                                                                                      }
                                                                                                      else {
                                                                                                          ++$i; // 3890
                                                                                                          __log__ ("i", $i, 3840);
                                                                                                      }
                                                                                                      $TLE634 = $i < $size; // 3891
                                                                                                      __log__ ("TLE634", $TLE634, 3841);
                                                                                                      if ($TLE634){
                                                                                                           // "3893 skip"
                                                                                                      }
                                                                                                      else {
                                                                                                          break; // 3894
                                                                                                      }
                                                                                                      $TLE635 = new linkedlist ();// /* , Call: 3897, Return: 3898, Exception Return: 3899, After: 3895, Exception After: 3896 */ constructor call
                                                                                                      __log__ ("TLE635", $TLE635, 3845);
                                                                                                      $TSNNt1167 = $this->adjacencyList; // 3900
                                                                                                      __log__ ("TSNNt1167", $TSNNt1167, 3850);
                                                                                                      $TSNNt1167->offsetset ($i, $TLE635);// /* , Call: 3903, Return: 3904, Exception Return: 3905, After: 3901, Exception After: 3902 */ method call
                                                                                                  }
                                                                                              }
    public function &getadjacencylist ()/* Entry: 3906, Exit: 3907, Exception Exit: 3908 */ 
                                                                                           {
                                                                                               $TSNNt1168 = $this->adjacencyList; // 3909
                                                                                               __log__ ("TSNNt1168", $TSNNt1168, 3859);
                                                                                               return $TSNNt1168; // 3910
                                                                                           }
    public function purge ()/* Entry: 3911, Exit: 3912, Exception Exit: 3913 */ 
                                                                               {
                                                                                   $i = 0; // 3914
                                                                                   __log__ ("i", $i, 3864);
                                                                                   $ElcfPF19 = true; // 3915
                                                                                   __log__ ("ElcfPF19", $ElcfPF19, 3865);
                                                                                   while (True){
                                                                                       if ($ElcfPF19){
                                                                                           $ElcfPF19 = false; // 3918
                                                                                           __log__ ("ElcfPF19", $ElcfPF19, 3868);
                                                                                       }
                                                                                       else {
                                                                                           ++$i; // 3919
                                                                                           __log__ ("i", $i, 3869);
                                                                                       }
                                                                                       $TSNNt1169 = $this->numberOfVertices; // 3920
                                                                                       __log__ ("TSNNt1169", $TSNNt1169, 3870);
                                                                                       $TLE636 = $i < $TSNNt1169; // 3921
                                                                                       __log__ ("TLE636", $TLE636, 3871);
                                                                                       if ($TLE636){
                                                                                            // "3923 skip"
                                                                                       }
                                                                                       else {
                                                                                           break; // 3924
                                                                                       }
                                                                                       $TSNNt1170 = $this->adjacencyList; // 3925
                                                                                       __log__ ("TSNNt1170", $TSNNt1170, 3875);
                                                                                       $TLE637 = $TSNNt1170->offsetget ($i);// /* , Call: 3928, Return: 3929, Exception Return: 3930, After: 3926, Exception After: 3927 */ method call
                                                                                       __log__ ("TLE637", $TLE637, 3876);
                                                                                       $TLE637->purge ();// /* , Call: 3933, Return: 3934, Exception Return: 3935, After: 3931, Exception After: 3932 */ method call
                                                                                   }
                                                                                   abstractgraph::purge ();// /* , Call: 3938, Return: 3939, Exception Return: 3940, After: 3936, Exception After: 3937 */ resolved method call
                                                                               }
    protected function insertedge (edge $edge)/* Entry: 3941, Exit: 3942, Exception Exit: 3943 */ 
                                                                                                 {
                                                                                                     $TLE638 = $edge->getv0 ();// /* , Call: 3946, Return: 3947, Exception Return: 3948, After: 3944, Exception After: 3945 */ method call
                                                                                                     __log__ ("TLE638", $TLE638, 3894);
                                                                                                     $v = $TLE638->getnumber ();// /* , Call: 3951, Return: 3952, Exception Return: 3953, After: 3949, Exception After: 3950 */ method call
                                                                                                     __log__ ("v", $v, 3899);
                                                                                                     $TSNNt1171 = $this->adjacencyList; // 3954
                                                                                                     __log__ ("TSNNt1171", $TSNNt1171, 3904);
                                                                                                     $TLE639 = $TSNNt1171->offsetget ($v);// /* , Call: 3957, Return: 3958, Exception Return: 3959, After: 3955, Exception After: 3956 */ method call
                                                                                                     __log__ ("TLE639", $TLE639, 3905);
                                                                                                     $TLE639->append ($edge);// /* , Call: 3962, Return: 3963, Exception Return: 3964, After: 3960, Exception After: 3961 */ method call
                                                                                                     $TSNNt1172 = $this->numberOfEdges; // 3965
                                                                                                     __log__ ("TSNNt1172", $TSNNt1172, 3915);
                                                                                                     ++$TSNNt1172; // 3966
                                                                                                     __log__ ("TSNNt1172", $TSNNt1172, 3916);
                                                                                                     $this->numberOfEdges = $TSNNt1172; // 3967
                                                                                                 }
    public function getedge ($v, $w)/* Entry: 3968, Exit: 3969, Exception Exit: 3970 */ 
                                                                                       {
                                                                                           $TLE640 = 0; // 3971
                                                                                           __log__ ("TLE640", $TLE640, 3921);
                                                                                           $TLE59 = $v < $TLE640; // 3972
                                                                                           __log__ ("TLE59", $TLE59, 3922);
                                                                                           if ($TLE59){
                                                                                               $TEF60 = $TLE59; // 3974
                                                                                               __log__ ("TEF60", $TEF60, 3924);
                                                                                           }
                                                                                           else {
                                                                                               $TSNNt1173 = $this->numberOfVertices; // 3975
                                                                                               __log__ ("TSNNt1173", $TSNNt1173, 3925);
                                                                                               $TEF60 = $TSNNt1173 <= $v; // 3976
                                                                                               __log__ ("TEF60", $TEF60, 3926);
                                                                                           }
                                                                                           $TLE641 = (bool) $TEF60; // 3977
                                                                                           __log__ ("TLE641", $TLE641, 3927);
                                                                                           if ($TLE641){
                                                                                               $TLE642 = new indexerror ();// /* , Call: 3981, Return: 3982, Exception Return: 3983, After: 3979, Exception After: 3980 */ constructor call
                                                                                               __log__ ("TLE642", $TLE642, 3929);
                                                                                               throw $TLE642; // 3984
                                                                                           }
                                                                                           else {
                                                                                                // "3985 skip"
                                                                                           }
                                                                                           $TLE643 = 0; // 3986
                                                                                           __log__ ("TLE643", $TLE643, 3936);
                                                                                           $TLE61 = $w < $TLE643; // 3987
                                                                                           __log__ ("TLE61", $TLE61, 3937);
                                                                                           if ($TLE61){
                                                                                               $TEF62 = $TLE61; // 3989
                                                                                               __log__ ("TEF62", $TEF62, 3939);
                                                                                           }
                                                                                           else {
                                                                                               $TSNNt1174 = $this->numberOfVertices; // 3990
                                                                                               __log__ ("TSNNt1174", $TSNNt1174, 3940);
                                                                                               $TEF62 = $TSNNt1174 <= $w; // 3991
                                                                                               __log__ ("TEF62", $TEF62, 3941);
                                                                                           }
                                                                                           $TLE644 = (bool) $TEF62; // 3992
                                                                                           __log__ ("TLE644", $TLE644, 3942);
                                                                                           if ($TLE644){
                                                                                               $TLE645 = new indexerror ();// /* , Call: 3996, Return: 3997, Exception Return: 3998, After: 3994, Exception After: 3995 */ constructor call
                                                                                               __log__ ("TLE645", $TLE645, 3944);
                                                                                               throw $TLE645; // 3999
                                                                                           }
                                                                                           else {
                                                                                                // "4000 skip"
                                                                                           }
                                                                                           $TSNNt1175 = $this->adjacencyList; // 4001
                                                                                           __log__ ("TSNNt1175", $TSNNt1175, 3951);
                                                                                           $TLE646 = $TSNNt1175->offsetget ($v);// /* , Call: 4004, Return: 4005, Exception Return: 4006, After: 4002, Exception After: 4003 */ method call
                                                                                           __log__ ("TLE646", $TLE646, 3952);
                                                                                           $ptr = $TLE646->gethead ();// /* , Call: 4009, Return: 4010, Exception Return: 4011, After: 4007, Exception After: 4008 */ method call
                                                                                           __log__ ("ptr", $ptr, 3957);
                                                                                           $ElcfPF20 = true; // 4012
                                                                                           __log__ ("ElcfPF20", $ElcfPF20, 3962);
                                                                                           while (True){
                                                                                               if ($ElcfPF20){
                                                                                                   $ElcfPF20 = false; // 4015
                                                                                                   __log__ ("ElcfPF20", $ElcfPF20, 3965);
                                                                                               }
                                                                                               else {
                                                                                                   $ptr = $ptr->getnext ();// /* , Call: 4018, Return: 4019, Exception Return: 4020, After: 4016, Exception After: 4017 */ method call
                                                                                                   __log__ ("ptr", $ptr, 3966);
                                                                                               }
                                                                                               $TLE647 = null; // 4021
                                                                                               __log__ ("TLE647", $TLE647, 3971);
                                                                                               $TLE648 = $ptr !== $TLE647; // 4022
                                                                                               __log__ ("TLE648", $TLE648, 3972);
                                                                                               if ($TLE648){
                                                                                                    // "4024 skip"
                                                                                               }
                                                                                               else {
                                                                                                   break; // 4025
                                                                                               }
                                                                                               $edge = $ptr->getdatum ();// /* , Call: 4028, Return: 4029, Exception Return: 4030, After: 4026, Exception After: 4027 */ method call
                                                                                               __log__ ("edge", $edge, 3976);
                                                                                               $TLE649 = $edge->getv1 ();// /* , Call: 4033, Return: 4034, Exception Return: 4035, After: 4031, Exception After: 4032 */ method call
                                                                                               __log__ ("TLE649", $TLE649, 3981);
                                                                                               $TLE650 = $TLE649->getnumber ();// /* , Call: 4038, Return: 4039, Exception Return: 4040, After: 4036, Exception After: 4037 */ method call
                                                                                               __log__ ("TLE650", $TLE650, 3986);
                                                                                               $TLE651 = $TLE650 == $w; // 4041
                                                                                               __log__ ("TLE651", $TLE651, 3991);
                                                                                               if ($TLE651){
                                                                                                   return $edge; // 4043
                                                                                               }
                                                                                               else {
                                                                                                    // "4044 skip"
                                                                                               }
                                                                                           }
                                                                                           $TLE652 = new argumenterror ();// /* , Call: 4047, Return: 4048, Exception Return: 4049, After: 4045, Exception After: 4046 */ constructor call
                                                                                           __log__ ("TLE652", $TLE652, 3995);
                                                                                           throw $TLE652; // 4050
                                                                                       }
    public function isedge ($v, $w)/* Entry: 4051, Exit: 4052, Exception Exit: 4053 */ 
                                                                                      {
                                                                                          $TLE653 = 0; // 4054
                                                                                          __log__ ("TLE653", $TLE653, 4004);
                                                                                          $TLE63 = $v < $TLE653; // 4055
                                                                                          __log__ ("TLE63", $TLE63, 4005);
                                                                                          if ($TLE63){
                                                                                              $TEF64 = $TLE63; // 4057
                                                                                              __log__ ("TEF64", $TEF64, 4007);
                                                                                          }
                                                                                          else {
                                                                                              $TSNNt1176 = $this->numberOfVertices; // 4058
                                                                                              __log__ ("TSNNt1176", $TSNNt1176, 4008);
                                                                                              $TEF64 = $TSNNt1176 <= $v; // 4059
                                                                                              __log__ ("TEF64", $TEF64, 4009);
                                                                                          }
                                                                                          $TLE654 = (bool) $TEF64; // 4060
                                                                                          __log__ ("TLE654", $TLE654, 4010);
                                                                                          if ($TLE654){
                                                                                              $TLE655 = new indexerror ();// /* , Call: 4064, Return: 4065, Exception Return: 4066, After: 4062, Exception After: 4063 */ constructor call
                                                                                              __log__ ("TLE655", $TLE655, 4012);
                                                                                              throw $TLE655; // 4067
                                                                                          }
                                                                                          else {
                                                                                               // "4068 skip"
                                                                                          }
                                                                                          $TLE656 = 0; // 4069
                                                                                          __log__ ("TLE656", $TLE656, 4019);
                                                                                          $TLE65 = $w < $TLE656; // 4070
                                                                                          __log__ ("TLE65", $TLE65, 4020);
                                                                                          if ($TLE65){
                                                                                              $TEF66 = $TLE65; // 4072
                                                                                              __log__ ("TEF66", $TEF66, 4022);
                                                                                          }
                                                                                          else {
                                                                                              $TSNNt1177 = $this->numberOfVertices; // 4073
                                                                                              __log__ ("TSNNt1177", $TSNNt1177, 4023);
                                                                                              $TEF66 = $TSNNt1177 <= $w; // 4074
                                                                                              __log__ ("TEF66", $TEF66, 4024);
                                                                                          }
                                                                                          $TLE657 = (bool) $TEF66; // 4075
                                                                                          __log__ ("TLE657", $TLE657, 4025);
                                                                                          if ($TLE657){
                                                                                              $TLE658 = new indexerror ();// /* , Call: 4079, Return: 4080, Exception Return: 4081, After: 4077, Exception After: 4078 */ constructor call
                                                                                              __log__ ("TLE658", $TLE658, 4027);
                                                                                              throw $TLE658; // 4082
                                                                                          }
                                                                                          else {
                                                                                               // "4083 skip"
                                                                                          }
                                                                                          $TSNNt1178 = $this->adjacencyList; // 4084
                                                                                          __log__ ("TSNNt1178", $TSNNt1178, 4034);
                                                                                          $TLE659 = $TSNNt1178->offsetget ($v);// /* , Call: 4087, Return: 4088, Exception Return: 4089, After: 4085, Exception After: 4086 */ method call
                                                                                          __log__ ("TLE659", $TLE659, 4035);
                                                                                          $ptr = $TLE659->gethead ();// /* , Call: 4092, Return: 4093, Exception Return: 4094, After: 4090, Exception After: 4091 */ method call
                                                                                          __log__ ("ptr", $ptr, 4040);
                                                                                          $ElcfPF21 = true; // 4095
                                                                                          __log__ ("ElcfPF21", $ElcfPF21, 4045);
                                                                                          while (True){
                                                                                              if ($ElcfPF21){
                                                                                                  $ElcfPF21 = false; // 4098
                                                                                                  __log__ ("ElcfPF21", $ElcfPF21, 4048);
                                                                                              }
                                                                                              else {
                                                                                                  $ptr = $ptr->getnext ();// /* , Call: 4101, Return: 4102, Exception Return: 4103, After: 4099, Exception After: 4100 */ method call
                                                                                                  __log__ ("ptr", $ptr, 4049);
                                                                                              }
                                                                                              $TLE660 = null; // 4104
                                                                                              __log__ ("TLE660", $TLE660, 4054);
                                                                                              $TLE661 = $ptr !== $TLE660; // 4105
                                                                                              __log__ ("TLE661", $TLE661, 4055);
                                                                                              if ($TLE661){
                                                                                                   // "4107 skip"
                                                                                              }
                                                                                              else {
                                                                                                  break; // 4108
                                                                                              }
                                                                                              $edge = $ptr->getdatum ();// /* , Call: 4111, Return: 4112, Exception Return: 4113, After: 4109, Exception After: 4110 */ method call
                                                                                              __log__ ("edge", $edge, 4059);
                                                                                              $TLE662 = $edge->getv1 ();// /* , Call: 4116, Return: 4117, Exception Return: 4118, After: 4114, Exception After: 4115 */ method call
                                                                                              __log__ ("TLE662", $TLE662, 4064);
                                                                                              $TLE663 = $TLE662->getnumber ();// /* , Call: 4121, Return: 4122, Exception Return: 4123, After: 4119, Exception After: 4120 */ method call
                                                                                              __log__ ("TLE663", $TLE663, 4069);
                                                                                              $TLE664 = $TLE663 == $w; // 4124
                                                                                              __log__ ("TLE664", $TLE664, 4074);
                                                                                              if ($TLE664){
                                                                                                  $TLE665 = true; // 4126
                                                                                                  __log__ ("TLE665", $TLE665, 4076);
                                                                                                  return $TLE665; // 4127
                                                                                              }
                                                                                              else {
                                                                                                   // "4128 skip"
                                                                                              }
                                                                                          }
                                                                                          $TLE666 = false; // 4129
                                                                                          __log__ ("TLE666", $TLE666, 4079);
                                                                                          return $TLE666; // 4130
                                                                                      }
    public function getedges ()/* Entry: 4131, Exit: 4132, Exception Exit: 4133 */ 
                                                                                  {
                                                                                      $TLE667 = new graphaslists_edgeaggregate ($this);// /* , Call: 4136, Return: 4137, Exception Return: 4138, After: 4134, Exception After: 4135 */ constructor call
                                                                                      __log__ ("TLE667", $TLE667, 4084);
                                                                                      return $TLE667; // 4139
                                                                                  }
    public function getemanatingedges ($v)/* Entry: 4140, Exit: 4141, Exception Exit: 4142 */ 
                                                                                             {
                                                                                                 $TLE668 = new graphaslists_emanatingedgeaggregate ($this, $v);// /* , Call: 4145, Return: 4146, Exception Return: 4147, After: 4143, Exception After: 4144 */ constructor call
                                                                                                 __log__ ("TLE668", $TLE668, 4093);
                                                                                                 return $TLE668; // 4148
                                                                                             }
    public function getincidentedges ($w)/* Entry: 4149, Exit: 4150, Exception Exit: 4151 */ 
                                                                                            {
                                                                                                $TLE669 = new methodnotimplementedexception ();// /* , Call: 4154, Return: 4155, Exception Return: 4156, After: 4152, Exception After: 4153 */ constructor call
                                                                                                __log__ ("TLE669", $TLE669, 4102);
                                                                                                throw $TLE669; // 4157
                                                                                            }
    protected function compareto (icomparable $arg)/* Entry: 4158, Exit: 4159, Exception Exit: 4160 */ 
                                                                                                      {
                                                                                                          $TLE670 = new methodnotimplementedexception ();// /* , Call: 4163, Return: 4164, Exception Return: 4165, After: 4161, Exception After: 4162 */ constructor call
                                                                                                          __log__ ("TLE670", $TLE670, 4111);
                                                                                                          throw $TLE670; // 4166
                                                                                                      }
}
abstract class abstractdigraph extends abstractgraph implements idigraph { // "4167"
    public function __construct ($size)/* Entry: 4168, Exit: 4169, Exception Exit: 4170 */ 
                                                                                          {
                                                                                              abstractgraph::__construct ();// /* , Call: 4173, Return: 4174, Exception Return: 4175, After: 4171, Exception After: 4172 */ resolved method call
                                                                                          }
}
class digraphaslists extends graphaslists implements idigraph { // "4176"
    public function __construct ($size = 0)/* Entry: 4177, Exit: 4178, Exception Exit: 4179 */ 
                                                                                              {
                                                                                                  graphaslists::__construct ($size);// /* , Call: 4182, Return: 4183, Exception Return: 4184, After: 4180, Exception After: 4181 */ resolved method call
                                                                                              }
    protected function insertedge (edge $edge)/* Entry: 4185, Exit: 4186, Exception Exit: 4187 */ 
                                                                                                 {
                                                                                                     $TLE671 = $edge->getv0 ();// /* , Call: 4190, Return: 4191, Exception Return: 4192, After: 4188, Exception After: 4189 */ method call
                                                                                                     __log__ ("TLE671", $TLE671, 4138);
                                                                                                     $v = $TLE671->getnumber ();// /* , Call: 4195, Return: 4196, Exception Return: 4197, After: 4193, Exception After: 4194 */ method call
                                                                                                     __log__ ("v", $v, 4143);
                                                                                                     $TSNNt1179 = $this->adjacencyList; // 4198
                                                                                                     __log__ ("TSNNt1179", $TSNNt1179, 4148);
                                                                                                     $TLE672 = $TSNNt1179->offsetget ($v);// /* , Call: 4201, Return: 4202, Exception Return: 4203, After: 4199, Exception After: 4200 */ method call
                                                                                                     __log__ ("TLE672", $TLE672, 4149);
                                                                                                     $TLE672->append ($edge);// /* , Call: 4206, Return: 4207, Exception Return: 4208, After: 4204, Exception After: 4205 */ method call
                                                                                                     $TSNNt1180 = $this->numberOfEdges; // 4209
                                                                                                     __log__ ("TSNNt1180", $TSNNt1180, 4159);
                                                                                                     ++$TSNNt1180; // 4210
                                                                                                     __log__ ("TSNNt1180", $TSNNt1180, 4160);
                                                                                                     $this->numberOfEdges = $TSNNt1180; // 4211
                                                                                                 }
}
class association extends abstractcomparable { // "4212"
    protected $key = null;
    protected $value = null;
    public function __construct (icomparable $key, $value = null)/* Entry: 4213, Exit: 4214, Exception Exit: 4215 */ 
                                                                                                                    {
                                                                                                                        abstractcomparable::__construct ();// /* , Call: 4218, Return: 4219, Exception Return: 4220, After: 4216, Exception After: 4217 */ resolved method call
                                                                                                                        $TSNNt1181 = $key; // 4221
                                                                                                                        __log__ ("TSNNt1181", $TSNNt1181, 4171);
                                                                                                                        $this->key = $TSNNt1181; // 4222
                                                                                                                        $TSNNt1182 = $value; // 4223
                                                                                                                        __log__ ("TSNNt1182", $TSNNt1182, 4173);
                                                                                                                        $this->value = $TSNNt1182; // 4224
                                                                                                                    }
    public function getkey ()/* Entry: 4225, Exit: 4226, Exception Exit: 4227 */ 
                                                                                {
                                                                                    $TSNNt1183 = $this->key; // 4228
                                                                                    __log__ ("TSNNt1183", $TSNNt1183, 4178);
                                                                                    return $TSNNt1183; // 4229
                                                                                }
    public function getvalue ()/* Entry: 4230, Exit: 4231, Exception Exit: 4232 */ 
                                                                                  {
                                                                                      $TSNNt1184 = $this->value; // 4233
                                                                                      __log__ ("TSNNt1184", $TSNNt1184, 4183);
                                                                                      return $TSNNt1184; // 4234
                                                                                  }
    public function setvalue (icomparable $value)/* Entry: 4235, Exit: 4236, Exception Exit: 4237 */ 
                                                                                                    {
                                                                                                        $TSNNt1185 = $value; // 4238
                                                                                                        __log__ ("TSNNt1185", $TSNNt1185, 4188);
                                                                                                        $this->value = $TSNNt1185; // 4239
                                                                                                    }
    public function unsetvalue ()/* Entry: 4240, Exit: 4241, Exception Exit: 4242 */ 
                                                                                    {
                                                                                        $TLE673 = null; // 4243
                                                                                        __log__ ("TLE673", $TLE673, 4193);
                                                                                        $TSNNt1186 = $TLE673; // 4244
                                                                                        __log__ ("TSNNt1186", $TSNNt1186, 4194);
                                                                                        $this->value = $TSNNt1186; // 4245
                                                                                    }
    protected function compareto (icomparable $obj)/* Entry: 4246, Exit: 4247, Exception Exit: 4248 */ 
                                                                                                      {
                                                                                                          $TLE674 = $obj->getkey ();// /* , Call: 4251, Return: 4252, Exception Return: 4253, After: 4249, Exception After: 4250 */ method call
                                                                                                          __log__ ("TLE674", $TLE674, 4199);
                                                                                                          $TSNNt1187 = $this->key; // 4254
                                                                                                          __log__ ("TSNNt1187", $TSNNt1187, 4204);
                                                                                                          $TLE675 = $TSNNt1187->compare ($TLE674);// /* , Call: 4257, Return: 4258, Exception Return: 4259, After: 4255, Exception After: 4256 */ method call
                                                                                                          __log__ ("TLE675", $TLE675, 4205);
                                                                                                          return $TLE675; // 4260
                                                                                                      }
    public function __tostring ()/* Entry: 4261, Exit: 4262, Exception Exit: 4263 */ 
                                                                                    {
                                                                                        $TLE676 = 'Association{'; // 4264
                                                                                        __log__ ("TLE676", $TLE676, 4214);
                                                                                        $TSNNt1188 = $this->key; // 4265
                                                                                        __log__ ("TSNNt1188", $TSNNt1188, 4215);
                                                                                        $TLE677 = $TSNNt1188->__tostring ();// /* , Call: 4268, Return: 4269, Exception Return: 4270, After: 4266, Exception After: 4267 */ method call
                                                                                        __log__ ("TLE677", $TLE677, 4216);
                                                                                        $result = $TLE676 . $TLE677; // 4271
                                                                                        __log__ ("result", $result, 4221);
                                                                                        $TLE678 = null; // 4272
                                                                                        __log__ ("TLE678", $TLE678, 4222);
                                                                                        $TSNNt1189 = $this->value; // 4273
                                                                                        __log__ ("TSNNt1189", $TSNNt1189, 4223);
                                                                                        $TLE679 = $TSNNt1189 !== $TLE678; // 4274
                                                                                        __log__ ("TLE679", $TLE679, 4224);
                                                                                        if ($TLE679){
                                                                                            $TLE680 = ', '; // 4276
                                                                                            __log__ ("TLE680", $TLE680, 4226);
                                                                                            $TSNNt1190 = $this->value; // 4277
                                                                                            __log__ ("TSNNt1190", $TSNNt1190, 4227);
                                                                                            $TLE681 = $TSNNt1190->__tostring ();// /* , Call: 4280, Return: 4281, Exception Return: 4282, After: 4278, Exception After: 4279 */ method call
                                                                                            __log__ ("TLE681", $TLE681, 4228);
                                                                                            $TLE682 = $TLE680 . $TLE681; // 4283
                                                                                            __log__ ("TLE682", $TLE682, 4233);
                                                                                            $result = $result . $TLE682; // 4284
                                                                                            __log__ ("result", $result, 4234);
                                                                                        }
                                                                                        else {
                                                                                             // "4285 skip"
                                                                                        }
                                                                                        $TLE683 = '}'; // 4286
                                                                                        __log__ ("TLE683", $TLE683, 4236);
                                                                                        $TLE684 = $result . $TLE683; // 4287
                                                                                        __log__ ("TLE684", $TLE684, 4237);
                                                                                        return $TLE684; // 4288
                                                                                    }
    public function gethashcode ()/* Entry: 4289, Exit: 4290, Exception Exit: 4291 */ 
                                                                                     {
                                                                                         $TSNNt1191 = $this->key; // 4292
                                                                                         __log__ ("TSNNt1191", $TSNNt1191, 4242);
                                                                                         $TLE685 = $TSNNt1191->gethashcode ();// /* , Call: 4295, Return: 4296, Exception Return: 4297, After: 4293, Exception After: 4294 */ method call
                                                                                         __log__ ("TLE685", $TLE685, 4243);
                                                                                         return $TLE685; // 4298
                                                                                     }
}
interface ipriorityqueue extends icontainer {
    public function enqueue (icomparable $obj)/* Entry: 4299, Exit: 4300, Exception Exit: 4301 */ 
                                                                                                 ;
    public function dequeuemin ()/* Entry: 4302, Exit: 4303, Exception Exit: 4304 */ 
                                                                                    ;
    public function findmin ()/* Entry: 4305, Exit: 4306, Exception Exit: 4307 */ 
                                                                                 ;
}
abstract class abstractpriorityqueue extends abstractcontainer implements ipriorityqueue { // "4308"
    public function __construct ()/* Entry: 4309, Exit: 4310, Exception Exit: 4311 */ 
                                                                                     {
                                                                                         abstractcontainer::__construct ();// /* , Call: 4314, Return: 4315, Exception Return: 4316, After: 4312, Exception After: 4313 */ resolved method call
                                                                                     }
}
class binaryheap_iterator extends abstractiterator { // "4317"
    protected $heap = null;
    protected $position = 0;
    public function __construct (binaryheap $heap)/* Entry: 4318, Exit: 4319, Exception Exit: 4320 */ 
                                                                                                     {
                                                                                                         abstractiterator::__construct ();// /* , Call: 4323, Return: 4324, Exception Return: 4325, After: 4321, Exception After: 4322 */ resolved method call
                                                                                                         $TSNNt1192 = $heap; // 4326
                                                                                                         __log__ ("TSNNt1192", $TSNNt1192, 4276);
                                                                                                         $this->heap = $TSNNt1192; // 4327
                                                                                                         $TLE686 = 1; // 4328
                                                                                                         __log__ ("TLE686", $TLE686, 4278);
                                                                                                         $TSNNt1193 = $TLE686; // 4329
                                                                                                         __log__ ("TSNNt1193", $TSNNt1193, 4279);
                                                                                                         $this->position = $TSNNt1193; // 4330
                                                                                                     }
    public function valid ()/* Entry: 4331, Exit: 4332, Exception Exit: 4333 */ 
                                                                               {
                                                                                   $TSNNt1194 = $this->heap; // 4334
                                                                                   __log__ ("TSNNt1194", $TSNNt1194, 4284);
                                                                                   $TLE687 = $TSNNt1194->getcount ();// /* , Call: 4337, Return: 4338, Exception Return: 4339, After: 4335, Exception After: 4336 */ method call
                                                                                   __log__ ("TLE687", $TLE687, 4285);
                                                                                   $TSNNt1195 = $this->position; // 4340
                                                                                   __log__ ("TSNNt1195", $TSNNt1195, 4290);
                                                                                   $TLE688 = $TSNNt1195 <= $TLE687; // 4341
                                                                                   __log__ ("TLE688", $TLE688, 4291);
                                                                                   return $TLE688; // 4342
                                                                               }
    public function key ()/* Entry: 4343, Exit: 4344, Exception Exit: 4345 */ 
                                                                             {
                                                                                 $TSNNt1196 = $this->position; // 4346
                                                                                 __log__ ("TSNNt1196", $TSNNt1196, 4296);
                                                                                 return $TSNNt1196; // 4347
                                                                             }
    public function current ()/* Entry: 4348, Exit: 4349, Exception Exit: 4350 */ 
                                                                                 {
                                                                                     $TSNNt1197 = $this->heap; // 4351
                                                                                     __log__ ("TSNNt1197", $TSNNt1197, 4301);
                                                                                     $array = $TSNNt1197->getarray ();// /* , Call: 4354, Return: 4355, Exception Return: 4356, After: 4352, Exception After: 4353 */ method call
                                                                                     __log__ ("array", $array, 4302);
                                                                                     $TSNNt1198 = $this->position; // 4357
                                                                                     __log__ ("TSNNt1198", $TSNNt1198, 4307);
                                                                                     $TLE689 = $array->offsetget ($TSNNt1198);// /* , Call: 4360, Return: 4361, Exception Return: 4362, After: 4358, Exception After: 4359 */ method call
                                                                                     __log__ ("TLE689", $TLE689, 4308);
                                                                                     return $TLE689; // 4363
                                                                                 }
    public function next ()/* Entry: 4364, Exit: 4365, Exception Exit: 4366 */ 
                                                                              {
                                                                                  $TSNNt1199 = $this->position; // 4367
                                                                                  __log__ ("TSNNt1199", $TSNNt1199, 4317);
                                                                                  $Toa78 = $TSNNt1199; // 4368
                                                                                  __log__ ("Toa78", $Toa78, 4318);
                                                                                  $TLE690 = 1; // 4369
                                                                                  __log__ ("TLE690", $TLE690, 4319);
                                                                                  $Toa78 = $Toa78 + $TLE690; // 4370
                                                                                  __log__ ("Toa78", $Toa78, 4320);
                                                                                  $TSNNt1200 = $Toa78; // 4371
                                                                                  __log__ ("TSNNt1200", $TSNNt1200, 4321);
                                                                                  $this->position = $TSNNt1200; // 4372
                                                                              }
    public function rewind ()/* Entry: 4373, Exit: 4374, Exception Exit: 4375 */ 
                                                                                {
                                                                                    $TLE691 = 1; // 4376
                                                                                    __log__ ("TLE691", $TLE691, 4326);
                                                                                    $TSNNt1201 = $TLE691; // 4377
                                                                                    __log__ ("TSNNt1201", $TSNNt1201, 4327);
                                                                                    $this->position = $TSNNt1201; // 4378
                                                                                }
}
class binaryheap extends abstractpriorityqueue { // "4379"
    protected $array = null;
    public function __construct ($size = 0)/* Entry: 4380, Exit: 4381, Exception Exit: 4382 */ 
                                                                                              {
                                                                                                  abstractpriorityqueue::__construct ();// /* , Call: 4385, Return: 4386, Exception Return: 4387, After: 4383, Exception After: 4384 */ resolved method call
                                                                                                  $TLE692 = 1; // 4388
                                                                                                  __log__ ("TLE692", $TLE692, 4338);
                                                                                                  $TLE693 = new basicarray ($size, $TLE692);// /* , Call: 4391, Return: 4392, Exception Return: 4393, After: 4389, Exception After: 4390 */ constructor call
                                                                                                  __log__ ("TLE693", $TLE693, 4339);
                                                                                                  $TSNNt1202 = $TLE693; // 4394
                                                                                                  __log__ ("TSNNt1202", $TSNNt1202, 4344);
                                                                                                  $this->array = $TSNNt1202; // 4395
                                                                                              }
    public function &getarray ()/* Entry: 4396, Exit: 4397, Exception Exit: 4398 */ 
                                                                                   {
                                                                                       $TSNNt1203 = $this->array; // 4399
                                                                                       __log__ ("TSNNt1203", $TSNNt1203, 4349);
                                                                                       return $TSNNt1203; // 4400
                                                                                   }
    public function purge ()/* Entry: 4401, Exit: 4402, Exception Exit: 4403 */ 
                                                                               {
                                                                                   while (True){
                                                                                       $TLE694 = 0; // 4405
                                                                                       __log__ ("TLE694", $TLE694, 4355);
                                                                                       $TSNNt1204 = $this->count; // 4406
                                                                                       __log__ ("TSNNt1204", $TSNNt1204, 4356);
                                                                                       $TLE695 = $TLE694 < $TSNNt1204; // 4407
                                                                                       __log__ ("TLE695", $TLE695, 4357);
                                                                                       $TLE696 = !$TLE695; // 4408
                                                                                       __log__ ("TLE696", $TLE696, 4358);
                                                                                       if ($TLE696){
                                                                                           break; // 4410
                                                                                       }
                                                                                       else {
                                                                                            // "4411 skip"
                                                                                       }
                                                                                       $TLE697 = null; // 4412
                                                                                       __log__ ("TLE697", $TLE697, 4362);
                                                                                       $TSNNt1205 = $this->array; // 4413
                                                                                       __log__ ("TSNNt1205", $TSNNt1205, 4363);
                                                                                       $TSNNt1206 = $this->count; // 4414
                                                                                       __log__ ("TSNNt1206", $TSNNt1206, 4364);
                                                                                       $TSNNt1205->offsetset ($TSNNt1206, $TLE697);// /* , Call: 4417, Return: 4418, Exception Return: 4419, After: 4415, Exception After: 4416 */ method call
                                                                                       --$TSNNt1206; // 4420
                                                                                       __log__ ("TSNNt1206", $TSNNt1206, 4370);
                                                                                       $this->count = $TSNNt1206; // 4421
                                                                                   }
                                                                               }
    public function enqueue (icomparable $obj)/* Entry: 4422, Exit: 4423, Exception Exit: 4424 */ 
                                                                                                 {
                                                                                                     $TSNNt1207 = $this->array; // 4425
                                                                                                     __log__ ("TSNNt1207", $TSNNt1207, 4375);
                                                                                                     $TLE698 = $TSNNt1207->getlength ();// /* , Call: 4428, Return: 4429, Exception Return: 4430, After: 4426, Exception After: 4427 */ method call
                                                                                                     __log__ ("TLE698", $TLE698, 4376);
                                                                                                     $TSNNt1208 = $this->count; // 4431
                                                                                                     __log__ ("TSNNt1208", $TSNNt1208, 4381);
                                                                                                     $TLE699 = $TSNNt1208 == $TLE698; // 4432
                                                                                                     __log__ ("TLE699", $TLE699, 4382);
                                                                                                     if ($TLE699){
                                                                                                         $TLE700 = new containerfullexception ();// /* , Call: 4436, Return: 4437, Exception Return: 4438, After: 4434, Exception After: 4435 */ constructor call
                                                                                                         __log__ ("TLE700", $TLE700, 4384);
                                                                                                         throw $TLE700; // 4439
                                                                                                     }
                                                                                                     else {
                                                                                                          // "4440 skip"
                                                                                                     }
                                                                                                     $TSNNt1209 = $this->count; // 4441
                                                                                                     __log__ ("TSNNt1209", $TSNNt1209, 4391);
                                                                                                     ++$TSNNt1209; // 4442
                                                                                                     __log__ ("TSNNt1209", $TSNNt1209, 4392);
                                                                                                     $this->count = $TSNNt1209; // 4443
                                                                                                     $TSNNt1210 = $this->count; // 4444
                                                                                                     __log__ ("TSNNt1210", $TSNNt1210, 4394);
                                                                                                     $i = $TSNNt1210; // 4445
                                                                                                     __log__ ("i", $i, 4395);
                                                                                                     while (True){
                                                                                                         $TLE701 = 1; // 4447
                                                                                                         __log__ ("TLE701", $TLE701, 4397);
                                                                                                         $TLE67 = $TLE701 < $i; // 4448
                                                                                                         __log__ ("TLE67", $TLE67, 4398);
                                                                                                         if ($TLE67){
                                                                                                             $TLE702 = 2; // 4450
                                                                                                             __log__ ("TLE702", $TLE702, 4400);
                                                                                                             $TLE703 = $i / $TLE702; // 4451
                                                                                                             __log__ ("TLE703", $TLE703, 4401);
                                                                                                             $TLE704 = intval ($TLE703); // "4452native call"
                                                                                                             __log__ ("TLE704", $TLE704, 4402);
                                                                                                             $TSNNt1211 = $this->array; // 4453
                                                                                                             __log__ ("TSNNt1211", $TSNNt1211, 4403);
                                                                                                             $TLE705 = $TSNNt1211->offsetget ($TLE704);// /* , Call: 4456, Return: 4457, Exception Return: 4458, After: 4454, Exception After: 4455 */ method call
                                                                                                             __log__ ("TLE705", $TLE705, 4404);
                                                                                                             $TEF68 = gt ($TLE705, $obj);// /* , Call: 4461, Return: 4462, Exception Return: 4463, After: 4459, Exception After: 4460 */ function call
                                                                                                             __log__ ("TEF68", $TEF68, 4409);
                                                                                                         }
                                                                                                         else {
                                                                                                             $TEF68 = $TLE67; // 4464
                                                                                                             __log__ ("TEF68", $TEF68, 4414);
                                                                                                         }
                                                                                                         $TLE706 = (bool) $TEF68; // 4465
                                                                                                         __log__ ("TLE706", $TLE706, 4415);
                                                                                                         $TLE707 = !$TLE706; // 4466
                                                                                                         __log__ ("TLE707", $TLE707, 4416);
                                                                                                         if ($TLE707){
                                                                                                             break; // 4468
                                                                                                         }
                                                                                                         else {
                                                                                                              // "4469 skip"
                                                                                                         }
                                                                                                         $TLE708 = 2; // 4470
                                                                                                         __log__ ("TLE708", $TLE708, 4420);
                                                                                                         $TLE709 = $i / $TLE708; // 4471
                                                                                                         __log__ ("TLE709", $TLE709, 4421);
                                                                                                         $TLE710 = intval ($TLE709); // "4472native call"
                                                                                                         __log__ ("TLE710", $TLE710, 4422);
                                                                                                         $TSNNt1212 = $this->array; // 4473
                                                                                                         __log__ ("TSNNt1212", $TSNNt1212, 4423);
                                                                                                         $TLE711 = $TSNNt1212->offsetget ($TLE710);// /* , Call: 4476, Return: 4477, Exception Return: 4478, After: 4474, Exception After: 4475 */ method call
                                                                                                         __log__ ("TLE711", $TLE711, 4424);
                                                                                                         $TSNNt1213 = $this->array; // 4479
                                                                                                         __log__ ("TSNNt1213", $TSNNt1213, 4429);
                                                                                                         $TSNNt1213->offsetset ($i, $TLE711);// /* , Call: 4482, Return: 4483, Exception Return: 4484, After: 4480, Exception After: 4481 */ method call
                                                                                                         $TLE712 = 2; // 4485
                                                                                                         __log__ ("TLE712", $TLE712, 4435);
                                                                                                         $TLE713 = $i / $TLE712; // 4486
                                                                                                         __log__ ("TLE713", $TLE713, 4436);
                                                                                                         $i = intval ($TLE713); // "4487native call"
                                                                                                         __log__ ("i", $i, 4437);
                                                                                                     }
                                                                                                     $TSNNt1214 = $this->array; // 4488
                                                                                                     __log__ ("TSNNt1214", $TSNNt1214, 4438);
                                                                                                     $TSNNt1214->offsetset ($i, $obj);// /* , Call: 4491, Return: 4492, Exception Return: 4493, After: 4489, Exception After: 4490 */ method call
                                                                                                 }
    public function findmin ()/* Entry: 4494, Exit: 4495, Exception Exit: 4496 */ 
                                                                                 {
                                                                                     $TLE714 = 0; // 4497
                                                                                     __log__ ("TLE714", $TLE714, 4447);
                                                                                     $TSNNt1215 = $this->count; // 4498
                                                                                     __log__ ("TSNNt1215", $TSNNt1215, 4448);
                                                                                     $TLE715 = $TSNNt1215 == $TLE714; // 4499
                                                                                     __log__ ("TLE715", $TLE715, 4449);
                                                                                     if ($TLE715){
                                                                                         $TLE716 = new containeremptyexception ();// /* , Call: 4503, Return: 4504, Exception Return: 4505, After: 4501, Exception After: 4502 */ constructor call
                                                                                         __log__ ("TLE716", $TLE716, 4451);
                                                                                         throw $TLE716; // 4506
                                                                                     }
                                                                                     else {
                                                                                          // "4507 skip"
                                                                                     }
                                                                                     $TLE717 = 1; // 4508
                                                                                     __log__ ("TLE717", $TLE717, 4458);
                                                                                     $TSNNt1216 = $this->array; // 4509
                                                                                     __log__ ("TSNNt1216", $TSNNt1216, 4459);
                                                                                     $TLE718 = $TSNNt1216->offsetget ($TLE717);// /* , Call: 4512, Return: 4513, Exception Return: 4514, After: 4510, Exception After: 4511 */ method call
                                                                                     __log__ ("TLE718", $TLE718, 4460);
                                                                                     return $TLE718; // 4515
                                                                                 }
    public function dequeuemin ()/* Entry: 4516, Exit: 4517, Exception Exit: 4518 */ 
                                                                                    {
                                                                                        $TLE719 = 0; // 4519
                                                                                        __log__ ("TLE719", $TLE719, 4469);
                                                                                        $TSNNt1217 = $this->count; // 4520
                                                                                        __log__ ("TSNNt1217", $TSNNt1217, 4470);
                                                                                        $TLE720 = $TSNNt1217 == $TLE719; // 4521
                                                                                        __log__ ("TLE720", $TLE720, 4471);
                                                                                        if ($TLE720){
                                                                                            $TLE721 = new containeremptyexception ();// /* , Call: 4525, Return: 4526, Exception Return: 4527, After: 4523, Exception After: 4524 */ constructor call
                                                                                            __log__ ("TLE721", $TLE721, 4473);
                                                                                            throw $TLE721; // 4528
                                                                                        }
                                                                                        else {
                                                                                             // "4529 skip"
                                                                                        }
                                                                                        $TLE722 = 1; // 4530
                                                                                        __log__ ("TLE722", $TLE722, 4480);
                                                                                        $TSNNt1218 = $this->array; // 4531
                                                                                        __log__ ("TSNNt1218", $TSNNt1218, 4481);
                                                                                        $result = $TSNNt1218->offsetget ($TLE722);// /* , Call: 4534, Return: 4535, Exception Return: 4536, After: 4532, Exception After: 4533 */ method call
                                                                                        __log__ ("result", $result, 4482);
                                                                                        $TSNNt1219 = $this->array; // 4537
                                                                                        __log__ ("TSNNt1219", $TSNNt1219, 4487);
                                                                                        $TSNNt1220 = $this->count; // 4538
                                                                                        __log__ ("TSNNt1220", $TSNNt1220, 4488);
                                                                                        $last = $TSNNt1219->offsetget ($TSNNt1220);// /* , Call: 4541, Return: 4542, Exception Return: 4543, After: 4539, Exception After: 4540 */ method call
                                                                                        __log__ ("last", $last, 4489);
                                                                                        $TSNNt1221 = $this->count; // 4544
                                                                                        __log__ ("TSNNt1221", $TSNNt1221, 4494);
                                                                                        --$TSNNt1221; // 4545
                                                                                        __log__ ("TSNNt1221", $TSNNt1221, 4495);
                                                                                        $this->count = $TSNNt1221; // 4546
                                                                                        $i = 1; // 4547
                                                                                        __log__ ("i", $i, 4497);
                                                                                        while (True){
                                                                                            $TLE723 = 2; // 4549
                                                                                            __log__ ("TLE723", $TLE723, 4499);
                                                                                            $TLE724 = $TLE723 * $i; // 4550
                                                                                            __log__ ("TLE724", $TLE724, 4500);
                                                                                            $TLE725 = 1; // 4551
                                                                                            __log__ ("TLE725", $TLE725, 4501);
                                                                                            $TSNNt1222 = $this->count; // 4552
                                                                                            __log__ ("TSNNt1222", $TSNNt1222, 4502);
                                                                                            $TLE726 = $TSNNt1222 + $TLE725; // 4553
                                                                                            __log__ ("TLE726", $TLE726, 4503);
                                                                                            $TLE727 = $TLE724 < $TLE726; // 4554
                                                                                            __log__ ("TLE727", $TLE727, 4504);
                                                                                            $TLE728 = !$TLE727; // 4555
                                                                                            __log__ ("TLE728", $TLE728, 4505);
                                                                                            if ($TLE728){
                                                                                                break; // 4557
                                                                                            }
                                                                                            else {
                                                                                                 // "4558 skip"
                                                                                            }
                                                                                            $TLE729 = 2; // 4559
                                                                                            __log__ ("TLE729", $TLE729, 4509);
                                                                                            $child = $TLE729 * $i; // 4560
                                                                                            __log__ ("child", $child, 4510);
                                                                                            $TLE730 = 1; // 4561
                                                                                            __log__ ("TLE730", $TLE730, 4511);
                                                                                            $TLE731 = $child + $TLE730; // 4562
                                                                                            __log__ ("TLE731", $TLE731, 4512);
                                                                                            $TLE732 = 1; // 4563
                                                                                            __log__ ("TLE732", $TLE732, 4513);
                                                                                            $TSNNt1223 = $this->count; // 4564
                                                                                            __log__ ("TSNNt1223", $TSNNt1223, 4514);
                                                                                            $TLE733 = $TSNNt1223 + $TLE732; // 4565
                                                                                            __log__ ("TLE733", $TLE733, 4515);
                                                                                            $TLE69 = $TLE731 < $TLE733; // 4566
                                                                                            __log__ ("TLE69", $TLE69, 4516);
                                                                                            if ($TLE69){
                                                                                                $TLE734 = 1; // 4568
                                                                                                __log__ ("TLE734", $TLE734, 4518);
                                                                                                $TLE735 = $child + $TLE734; // 4569
                                                                                                __log__ ("TLE735", $TLE735, 4519);
                                                                                                $TSNNt1224 = $this->array; // 4570
                                                                                                __log__ ("TSNNt1224", $TSNNt1224, 4520);
                                                                                                $TLE736 = $TSNNt1224->offsetget ($TLE735);// /* , Call: 4573, Return: 4574, Exception Return: 4575, After: 4571, Exception After: 4572 */ method call
                                                                                                __log__ ("TLE736", $TLE736, 4521);
                                                                                                $TSNNt1225 = $this->array; // 4576
                                                                                                __log__ ("TSNNt1225", $TSNNt1225, 4526);
                                                                                                $TLE737 = $TSNNt1225->offsetget ($child);// /* , Call: 4579, Return: 4580, Exception Return: 4581, After: 4577, Exception After: 4578 */ method call
                                                                                                __log__ ("TLE737", $TLE737, 4527);
                                                                                                $TEF70 = lt ($TLE736, $TLE737);// /* , Call: 4584, Return: 4585, Exception Return: 4586, After: 4582, Exception After: 4583 */ function call
                                                                                                __log__ ("TEF70", $TEF70, 4532);
                                                                                            }
                                                                                            else {
                                                                                                $TEF70 = $TLE69; // 4587
                                                                                                __log__ ("TEF70", $TEF70, 4537);
                                                                                            }
                                                                                            $TLE738 = (bool) $TEF70; // 4588
                                                                                            __log__ ("TLE738", $TLE738, 4538);
                                                                                            if ($TLE738){
                                                                                                $TLE739 = 1; // 4590
                                                                                                __log__ ("TLE739", $TLE739, 4540);
                                                                                                $child = $child + $TLE739; // 4591
                                                                                                __log__ ("child", $child, 4541);
                                                                                            }
                                                                                            else {
                                                                                                 // "4592 skip"
                                                                                            }
                                                                                            $TSNNt1226 = $this->array; // 4593
                                                                                            __log__ ("TSNNt1226", $TSNNt1226, 4543);
                                                                                            $TLE740 = $TSNNt1226->offsetget ($child);// /* , Call: 4596, Return: 4597, Exception Return: 4598, After: 4594, Exception After: 4595 */ method call
                                                                                            __log__ ("TLE740", $TLE740, 4544);
                                                                                            $TLE741 = le ($last, $TLE740);// /* , Call: 4601, Return: 4602, Exception Return: 4603, After: 4599, Exception After: 4600 */ function call
                                                                                            __log__ ("TLE741", $TLE741, 4549);
                                                                                            if ($TLE741){
                                                                                                break; // 4605
                                                                                            }
                                                                                            else {
                                                                                                 // "4606 skip"
                                                                                            }
                                                                                            $TSNNt1227 = $this->array; // 4607
                                                                                            __log__ ("TSNNt1227", $TSNNt1227, 4557);
                                                                                            $TLE742 = $TSNNt1227->offsetget ($child);// /* , Call: 4610, Return: 4611, Exception Return: 4612, After: 4608, Exception After: 4609 */ method call
                                                                                            __log__ ("TLE742", $TLE742, 4558);
                                                                                            $TSNNt1228 = $this->array; // 4613
                                                                                            __log__ ("TSNNt1228", $TSNNt1228, 4563);
                                                                                            $TSNNt1228->offsetset ($i, $TLE742);// /* , Call: 4616, Return: 4617, Exception Return: 4618, After: 4614, Exception After: 4615 */ method call
                                                                                            $i = $child; // 4619
                                                                                            __log__ ("i", $i, 4569);
                                                                                        }
                                                                                        $TSNNt1229 = $this->array; // 4620
                                                                                        __log__ ("TSNNt1229", $TSNNt1229, 4570);
                                                                                        $TSNNt1229->offsetset ($i, $last);// /* , Call: 4623, Return: 4624, Exception Return: 4625, After: 4621, Exception After: 4622 */ method call
                                                                                        return $result; // 4626
                                                                                    }
    public function isfull ()/* Entry: 4627, Exit: 4628, Exception Exit: 4629 */ 
                                                                                {
                                                                                    $TSNNt1230 = $this->array; // 4630
                                                                                    __log__ ("TSNNt1230", $TSNNt1230, 4580);
                                                                                    $TLE743 = $TSNNt1230->getlength ();// /* , Call: 4633, Return: 4634, Exception Return: 4635, After: 4631, Exception After: 4632 */ method call
                                                                                    __log__ ("TLE743", $TLE743, 4581);
                                                                                    $TSNNt1231 = $this->count; // 4636
                                                                                    __log__ ("TSNNt1231", $TSNNt1231, 4586);
                                                                                    $TLE744 = $TSNNt1231 == $TLE743; // 4637
                                                                                    __log__ ("TLE744", $TLE744, 4587);
                                                                                    return $TLE744; // 4638
                                                                                }
    public function accept (ivisitor $visitor)/* Entry: 4639, Exit: 4640, Exception Exit: 4641 */ 
                                                                                                 {
                                                                                                     $i = 1; // 4642
                                                                                                     __log__ ("i", $i, 4592);
                                                                                                     $ElcfPF22 = true; // 4643
                                                                                                     __log__ ("ElcfPF22", $ElcfPF22, 4593);
                                                                                                     while (True){
                                                                                                         if ($ElcfPF22){
                                                                                                             $ElcfPF22 = false; // 4646
                                                                                                             __log__ ("ElcfPF22", $ElcfPF22, 4596);
                                                                                                         }
                                                                                                         else {
                                                                                                             ++$i; // 4647
                                                                                                             __log__ ("i", $i, 4597);
                                                                                                         }
                                                                                                         $TLE745 = 1; // 4648
                                                                                                         __log__ ("TLE745", $TLE745, 4598);
                                                                                                         $TSNNt1232 = $this->count; // 4649
                                                                                                         __log__ ("TSNNt1232", $TSNNt1232, 4599);
                                                                                                         $TLE746 = $TSNNt1232 + $TLE745; // 4650
                                                                                                         __log__ ("TLE746", $TLE746, 4600);
                                                                                                         $TLE747 = $i < $TLE746; // 4651
                                                                                                         __log__ ("TLE747", $TLE747, 4601);
                                                                                                         if ($TLE747){
                                                                                                              // "4653 skip"
                                                                                                         }
                                                                                                         else {
                                                                                                             break; // 4654
                                                                                                         }
                                                                                                         $TLE748 = $visitor->isdone ();// /* , Call: 4657, Return: 4658, Exception Return: 4659, After: 4655, Exception After: 4656 */ method call
                                                                                                         __log__ ("TLE748", $TLE748, 4605);
                                                                                                         if ($TLE748){
                                                                                                             $TLE749 = null; // 4661
                                                                                                             __log__ ("TLE749", $TLE749, 4611);
                                                                                                             return $TLE749; // 4662
                                                                                                         }
                                                                                                         else {
                                                                                                              // "4663 skip"
                                                                                                         }
                                                                                                         $TSNNt1233 = $this->array; // 4664
                                                                                                         __log__ ("TSNNt1233", $TSNNt1233, 4614);
                                                                                                         $TLE750 = $TSNNt1233->offsetget ($i);// /* , Call: 4667, Return: 4668, Exception Return: 4669, After: 4665, Exception After: 4666 */ method call
                                                                                                         __log__ ("TLE750", $TLE750, 4615);
                                                                                                         $visitor->visit ($TLE750);// /* , Call: 4672, Return: 4673, Exception Return: 4674, After: 4670, Exception After: 4671 */ method call
                                                                                                     }
                                                                                                 }
    public function getiterator ()/* Entry: 4675, Exit: 4676, Exception Exit: 4677 */ 
                                                                                     {
                                                                                         $TLE751 = new binaryheap_iterator ($this);// /* , Call: 4680, Return: 4681, Exception Return: 4682, After: 4678, Exception After: 4679 */ constructor call
                                                                                         __log__ ("TLE751", $TLE751, 4628);
                                                                                         return $TLE751; // 4683
                                                                                     }
    protected function compareto (icomparable $arg)/* Entry: 4684, Exit: 4685, Exception Exit: 4686 */ 
                                                                                                      {
                                                                                                          $TLE752 = new methodnotimplementedexception ();// /* , Call: 4689, Return: 4690, Exception Return: 4691, After: 4687, Exception After: 4688 */ constructor call
                                                                                                          __log__ ("TLE752", $TLE752, 4637);
                                                                                                          throw $TLE752; // 4692
                                                                                                      }
}
class limits { // "4693"
    const INTBITS = 32;
    const MAXINT = 2147483647;
    const MININT = -2147483648;
}
class entry { // "4694"
    public $known = false;
    public $distance = limits::MAXINT;
    public $predecessor = -1;
}
function dijkstrasalgorithm (idigraph $g, $s)  // "ln: 4695, lx: 4696, lxe: 4697"
{
    $n = $g->getnumberofvertices ();// /* , Call: 4700, Return: 4701, Exception Return: 4702, After: 4698, Exception After: 4699 */ method call
    __log__ ("n", $n, 4648);
    $table = new basicarray ($n);// /* , Call: 4705, Return: 4706, Exception Return: 4707, After: 4703, Exception After: 4704 */ constructor call
    __log__ ("table", $table, 4653);
    $v = 0; // 4708
    __log__ ("v", $v, 4658);
    $ElcfPF23 = true; // 4709
    __log__ ("ElcfPF23", $ElcfPF23, 4659);
    while (True){
        if ($ElcfPF23){
            $ElcfPF23 = false; // 4712
            __log__ ("ElcfPF23", $ElcfPF23, 4662);
        }
        else {
            ++$v; // 4713
            __log__ ("v", $v, 4663);
        }
        $TLE753 = $v < $n; // 4714
        __log__ ("TLE753", $TLE753, 4664);
        if ($TLE753){
             // "4716 skip"
        }
        else {
            break; // 4717
        }
        $TLE754 = new entry ();// /* , Call: 4720, Return: 4721, Exception Return: 4722, After: 4718, Exception After: 4719 */ constructor call
        __log__ ("TLE754", $TLE754, 4668);
        $table->offsetset ($v, $TLE754);// /* , Call: 4725, Return: 4726, Exception Return: 4727, After: 4723, Exception After: 4724 */ method call
    }
    $TLE755 = $table->offsetget ($s);// /* , Call: 4730, Return: 4731, Exception Return: 4732, After: 4728, Exception After: 4729 */ method call
    __log__ ("TLE755", $TLE755, 4678);
    $TLE756 = 0; // 4733
    __log__ ("TLE756", $TLE756, 4683);
    $TSNNt1234 = $TLE756; // 4734
    __log__ ("TSNNt1234", $TSNNt1234, 4684);
    $TLE755->distance = $TSNNt1234; // 4735
    $TLE757 = $g->getnumberofedges ();// /* , Call: 4738, Return: 4739, Exception Return: 4740, After: 4736, Exception After: 4737 */ method call
    __log__ ("TLE757", $TLE757, 4686);
    $queue = new binaryheap ($TLE757);// /* , Call: 4743, Return: 4744, Exception Return: 4745, After: 4741, Exception After: 4742 */ constructor call
    __log__ ("queue", $queue, 4691);
    $TLE758 = 0; // 4746
    __log__ ("TLE758", $TLE758, 4696);
    $TLE759 = new boxedinteger ($TLE758);// /* , Call: 4749, Return: 4750, Exception Return: 4751, After: 4747, Exception After: 4748 */ constructor call
    __log__ ("TLE759", $TLE759, 4697);
    $TLE760 = $g->getvertex ($s);// /* , Call: 4754, Return: 4755, Exception Return: 4756, After: 4752, Exception After: 4753 */ method call
    __log__ ("TLE760", $TLE760, 4702);
    $TLE761 = new association ($TLE759, $TLE760);// /* , Call: 4759, Return: 4760, Exception Return: 4761, After: 4757, Exception After: 4758 */ constructor call
    __log__ ("TLE761", $TLE761, 4707);
    $queue->enqueue ($TLE761);// /* , Call: 4764, Return: 4765, Exception Return: 4766, After: 4762, Exception After: 4763 */ method call
    while (True){
        $TLE762 = $queue->isempty ();// /* , Call: 4770, Return: 4771, Exception Return: 4772, After: 4768, Exception After: 4769 */ method call
        __log__ ("TLE762", $TLE762, 4718);
        $TLE763 = !$TLE762; // 4773
        __log__ ("TLE763", $TLE763, 4723);
        $TLE764 = !$TLE763; // 4774
        __log__ ("TLE764", $TLE764, 4724);
        if ($TLE764){
            break; // 4776
        }
        else {
             // "4777 skip"
        }
        $assoc = $queue->dequeuemin ();// /* , Call: 4780, Return: 4781, Exception Return: 4782, After: 4778, Exception After: 4779 */ method call
        __log__ ("assoc", $assoc, 4728);
        $v0 = $assoc->getvalue ();// /* , Call: 4785, Return: 4786, Exception Return: 4787, After: 4783, Exception After: 4784 */ method call
        __log__ ("v0", $v0, 4733);
        $n0 = $v0->getnumber ();// /* , Call: 4790, Return: 4791, Exception Return: 4792, After: 4788, Exception After: 4789 */ method call
        __log__ ("n0", $n0, 4738);
        $TLE765 = $table->offsetget ($n0);// /* , Call: 4795, Return: 4796, Exception Return: 4797, After: 4793, Exception After: 4794 */ method call
        __log__ ("TLE765", $TLE765, 4743);
        $TSNNt1235 = $TLE765->known; // 4798
        __log__ ("TSNNt1235", $TSNNt1235, 4748);
        $TLE766 = !$TSNNt1235; // 4799
        __log__ ("TLE766", $TLE766, 4749);
        if ($TLE766){
            $TLE767 = $table->offsetget ($n0);// /* , Call: 4803, Return: 4804, Exception Return: 4805, After: 4801, Exception After: 4802 */ method call
            __log__ ("TLE767", $TLE767, 4751);
            $TLE768 = true; // 4806
            __log__ ("TLE768", $TLE768, 4756);
            $TSNNt1236 = $TLE768; // 4807
            __log__ ("TSNNt1236", $TSNNt1236, 4757);
            $TLE767->known = $TSNNt1236; // 4808
            $TLE769 = $v0->getemanatingedges ();// /* , Call: 4811, Return: 4812, Exception Return: 4813, After: 4809, Exception After: 4810 */ method call
            __log__ ("TLE769", $TLE769, 4759);
            $it = $TLE769->getiterator ();// /* , Call: 4816, Return: 4817, Exception Return: 4818, After: 4814, Exception After: 4815 */ method call
            __log__ ("it", $it, 4764);
            $it->rewind ();// /* , Call: 4821, Return: 4822, Exception Return: 4823, After: 4819, Exception After: 4820 */ method call
            while (True){
                $TLE770 = $it->valid ();// /* , Call: 4827, Return: 4828, Exception Return: 4829, After: 4825, Exception After: 4826 */ method call
                __log__ ("TLE770", $TLE770, 4775);
                $TLE771 = !$TLE770; // 4830
                __log__ ("TLE771", $TLE771, 4780);
                if ($TLE771){
                    break; // 4832
                }
                else {
                     // "4833 skip"
                }
                $edge = $it->current ();// /* , Call: 4836, Return: 4837, Exception Return: 4838, After: 4834, Exception After: 4835 */ method call
                __log__ ("edge", $edge, 4784);
                $v1 = $edge->getmate ($v0);// /* , Call: 4841, Return: 4842, Exception Return: 4843, After: 4839, Exception After: 4840 */ method call
                __log__ ("v1", $v1, 4789);
                $n1 = $v1->getnumber ();// /* , Call: 4846, Return: 4847, Exception Return: 4848, After: 4844, Exception After: 4845 */ method call
                __log__ ("n1", $n1, 4794);
                $wt = $edge->getweight ();// /* , Call: 4851, Return: 4852, Exception Return: 4853, After: 4849, Exception After: 4850 */ method call
                __log__ ("wt", $wt, 4799);
                $TLE772 = $table->offsetget ($n0);// /* , Call: 4856, Return: 4857, Exception Return: 4858, After: 4854, Exception After: 4855 */ method call
                __log__ ("TLE772", $TLE772, 4804);
                $TLE773 = unbox ($wt);// /* , Call: 4861, Return: 4862, Exception Return: 4863, After: 4859, Exception After: 4860 */ function call
                __log__ ("TLE773", $TLE773, 4809);
                $TSNNt1237 = $TLE772->distance; // 4864
                __log__ ("TSNNt1237", $TSNNt1237, 4814);
                $d = $TSNNt1237 + $TLE773; // 4865
                __log__ ("d", $d, 4815);
                $TLE774 = $table->offsetget ($n1);// /* , Call: 4868, Return: 4869, Exception Return: 4870, After: 4866, Exception After: 4867 */ method call
                __log__ ("TLE774", $TLE774, 4816);
                $TSNNt1238 = $TLE774->distance; // 4871
                __log__ ("TSNNt1238", $TSNNt1238, 4821);
                $TLE775 = $d < $TSNNt1238; // 4872
                __log__ ("TLE775", $TLE775, 4822);
                if ($TLE775){
                    $TLE776 = $table->offsetget ($n1);// /* , Call: 4876, Return: 4877, Exception Return: 4878, After: 4874, Exception After: 4875 */ method call
                    __log__ ("TLE776", $TLE776, 4824);
                    $TSNNt1239 = $d; // 4879
                    __log__ ("TSNNt1239", $TSNNt1239, 4829);
                    $TLE776->distance = $TSNNt1239; // 4880
                    $TLE777 = $table->offsetget ($n1);// /* , Call: 4883, Return: 4884, Exception Return: 4885, After: 4881, Exception After: 4882 */ method call
                    __log__ ("TLE777", $TLE777, 4831);
                    $TSNNt1240 = $n0; // 4886
                    __log__ ("TSNNt1240", $TSNNt1240, 4836);
                    $TLE777->predecessor = $TSNNt1240; // 4887
                    $TLE778 = new boxedinteger ($d);// /* , Call: 4890, Return: 4891, Exception Return: 4892, After: 4888, Exception After: 4889 */ constructor call
                    __log__ ("TLE778", $TLE778, 4838);
                    $TLE779 = new association ($TLE778, $v1);// /* , Call: 4895, Return: 4896, Exception Return: 4897, After: 4893, Exception After: 4894 */ constructor call
                    __log__ ("TLE779", $TLE779, 4843);
                    $queue->enqueue ($TLE779);// /* , Call: 4900, Return: 4901, Exception Return: 4902, After: 4898, Exception After: 4899 */ method call
                }
                else {
                     // "4903 skip"
                }
                $it->next ();// /* , Call: 4906, Return: 4907, Exception Return: 4908, After: 4904, Exception After: 4905 */ method call
            }
        }
        else {
             // "4909 skip"
        }
    }
    $result = new digraphaslists ($n);// /* , Call: 4912, Return: 4913, Exception Return: 4914, After: 4910, Exception After: 4911 */ constructor call
    __log__ ("result", $result, 4860);
    $v = 0; // 4915
    __log__ ("v", $v, 4865);
    $ElcfPF24 = true; // 4916
    __log__ ("ElcfPF24", $ElcfPF24, 4866);
    while (True){
        if ($ElcfPF24){
            $ElcfPF24 = false; // 4919
            __log__ ("ElcfPF24", $ElcfPF24, 4869);
        }
        else {
            ++$v; // 4920
            __log__ ("v", $v, 4870);
        }
        $TLE780 = $v < $n; // 4921
        __log__ ("TLE780", $TLE780, 4871);
        if ($TLE780){
             // "4923 skip"
        }
        else {
            break; // 4924
        }
        $TLE781 = $table->offsetget ($v);// /* , Call: 4927, Return: 4928, Exception Return: 4929, After: 4925, Exception After: 4926 */ method call
        __log__ ("TLE781", $TLE781, 4875);
        $TSNNt1241 = $TLE781->distance; // 4930
        __log__ ("TSNNt1241", $TSNNt1241, 4880);
        $TLE782 = new boxedinteger ($TSNNt1241);// /* , Call: 4933, Return: 4934, Exception Return: 4935, After: 4931, Exception After: 4932 */ constructor call
        __log__ ("TLE782", $TLE782, 4881);
        $result->addvertex ($v, $TLE782);// /* , Call: 4938, Return: 4939, Exception Return: 4940, After: 4936, Exception After: 4937 */ method call
    }
    $v = 0; // 4941
    __log__ ("v", $v, 4891);
    $ElcfPF25 = true; // 4942
    __log__ ("ElcfPF25", $ElcfPF25, 4892);
    while (True){
        if ($ElcfPF25){
            $ElcfPF25 = false; // 4945
            __log__ ("ElcfPF25", $ElcfPF25, 4895);
        }
        else {
            ++$v; // 4946
            __log__ ("v", $v, 4896);
        }
        $TLE783 = $v < $n; // 4947
        __log__ ("TLE783", $TLE783, 4897);
        if ($TLE783){
             // "4949 skip"
        }
        else {
            break; // 4950
        }
        $TLE784 = $v != $s; // 4951
        __log__ ("TLE784", $TLE784, 4901);
        if ($TLE784){
            $TLE785 = $table->offsetget ($v);// /* , Call: 4955, Return: 4956, Exception Return: 4957, After: 4953, Exception After: 4954 */ method call
            __log__ ("TLE785", $TLE785, 4903);
            $TSNNt1242 = $TLE785->predecessor; // 4958
            __log__ ("TSNNt1242", $TSNNt1242, 4908);
            $result->addedge ($v, $TSNNt1242);// /* , Call: 4961, Return: 4962, Exception Return: 4963, After: 4959, Exception After: 4960 */ method call
        }
        else {
             // "4964 skip"
        }
    }
    return $result; // 4965
}
$TLE786 = 32; // 4966
__log__ ("TLE786", $TLE786, 4916);
$g = new digraphaslists ($TLE786);// /* , Call: 4969, Return: 4970, Exception Return: 4971, After: 4967, Exception After: 4968 */ constructor call
__log__ ("g", $g, 4917);
$TLE787 = 0; // 4972
__log__ ("TLE787", $TLE787, 4922);
$TLE788 = 123; // 4973
__log__ ("TLE788", $TLE788, 4923);
$TLE789 = new boxedinteger ($TLE788);// /* , Call: 4976, Return: 4977, Exception Return: 4978, After: 4974, Exception After: 4975 */ constructor call
__log__ ("TLE789", $TLE789, 4924);
$g->addvertex ($TLE787, $TLE789);// /* , Call: 4981, Return: 4982, Exception Return: 4983, After: 4979, Exception After: 4980 */ method call
$TLE790 = 1; // 4984
__log__ ("TLE790", $TLE790, 4934);
$TLE791 = 234; // 4985
__log__ ("TLE791", $TLE791, 4935);
$TLE792 = new boxedinteger ($TLE791);// /* , Call: 4988, Return: 4989, Exception Return: 4990, After: 4986, Exception After: 4987 */ constructor call
__log__ ("TLE792", $TLE792, 4936);
$g->addvertex ($TLE790, $TLE792);// /* , Call: 4993, Return: 4994, Exception Return: 4995, After: 4991, Exception After: 4992 */ method call
$TLE793 = 2; // 4996
__log__ ("TLE793", $TLE793, 4946);
$TLE794 = 345; // 4997
__log__ ("TLE794", $TLE794, 4947);
$TLE795 = new boxedinteger ($TLE794);// /* , Call: 5000, Return: 5001, Exception Return: 5002, After: 4998, Exception After: 4999 */ constructor call
__log__ ("TLE795", $TLE795, 4948);
$g->addvertex ($TLE793, $TLE795);// /* , Call: 5005, Return: 5006, Exception Return: 5007, After: 5003, Exception After: 5004 */ method call
$TLE796 = 0; // 5008
__log__ ("TLE796", $TLE796, 4958);
$TLE797 = 1; // 5009
__log__ ("TLE797", $TLE797, 4959);
$TLE798 = 3; // 5010
__log__ ("TLE798", $TLE798, 4960);
$TLE799 = new boxedinteger ($TLE798);// /* , Call: 5013, Return: 5014, Exception Return: 5015, After: 5011, Exception After: 5012 */ constructor call
__log__ ("TLE799", $TLE799, 4961);
$g->addedge ($TLE796, $TLE797, $TLE799);// /* , Call: 5018, Return: 5019, Exception Return: 5020, After: 5016, Exception After: 5017 */ method call
$TLE800 = 0; // 5021
__log__ ("TLE800", $TLE800, 4971);
$TLE801 = 2; // 5022
__log__ ("TLE801", $TLE801, 4972);
$TLE802 = 1; // 5023
__log__ ("TLE802", $TLE802, 4973);
$TLE803 = new boxedinteger ($TLE802);// /* , Call: 5026, Return: 5027, Exception Return: 5028, After: 5024, Exception After: 5025 */ constructor call
__log__ ("TLE803", $TLE803, 4974);
$g->addedge ($TLE800, $TLE801, $TLE803);// /* , Call: 5031, Return: 5032, Exception Return: 5033, After: 5029, Exception After: 5030 */ method call
$TLE804 = 1; // 5034
__log__ ("TLE804", $TLE804, 4984);
$TLE805 = 2; // 5035
__log__ ("TLE805", $TLE805, 4985);
$TLE806 = 4; // 5036
__log__ ("TLE806", $TLE806, 4986);
$TLE807 = new boxedinteger ($TLE806);// /* , Call: 5039, Return: 5040, Exception Return: 5041, After: 5037, Exception After: 5038 */ constructor call
__log__ ("TLE807", $TLE807, 4987);
$g->addedge ($TLE804, $TLE805, $TLE807);// /* , Call: 5044, Return: 5045, Exception Return: 5046, After: 5042, Exception After: 5043 */ method call
$TLE808 = 0; // 5047
__log__ ("TLE808", $TLE808, 4997);
$g2 = dijkstrasalgorithm ($g, $TLE808);// /* , Call: 5050, Return: 5051, Exception Return: 5052, After: 5048, Exception After: 5049 */ function call
__log__ ("g2", $g2, 4998);
$TLE809 = "%s\n"; // 5053
__log__ ("TLE809", $TLE809, 5003);
$TLE810 = $g2->__tostring ();// /* , Call: 5056, Return: 5057, Exception Return: 5058, After: 5054, Exception After: 5055 */ method call
__log__ ("TLE810", $TLE810, 5004);
printf ($TLE809, $TLE810); // "5059native call"
/*
Native classes and their program labels
class directoryiterator (5061 )
class domdocument (5064 )
    load 5066 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}}})
class domelement (5069 )
class domnode (5072 )
class domnodelist (5075 )
    item 5077 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeObject "domnode"]}})
class exception (5080 )
    getmessage 5082 (TValue {value = fromList [NativeString]})
    getprevious 5084 (TValue {value = fromList [NativeObject "exception"]})
    getcode 5086 (TValue {value = fromList [NativeString,NativeInteger]})
    getfile 5088 (TValue {value = fromList [NativeString]})
    getline 5090 (TValue {value = fromList [NativeInteger]})
    gettraceasstring 5092 (TValue {value = fromList [NativeString]})
    __tostring 5094 (TValue {value = fromList [NativeString]})
    __clone 5096 (TValue {value = fromList [NativeNull]})
class filesystemiterator (5099 )
class invalidargumentexception (5102 )
class logicexception (5105 )
class outofboundsexception (5108 )
class recursivedirectoryiterator (5111 )
class recursiveiteratoriterator (5114 )
class reflectionclass (5117 )
    getname 5119 (TValue {value = fromList [NativeString]})
class runtimeexception (5122 )
class simplexmlelement (5125 )
    asxml 5127 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeString,NativeBoolean]}})
    attributes 5129 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeBoolean]}, right = TValue {value = fromList [NativeObject "simplexmlelement"]}}})
class splfileinfo (5132 )
    getatime 5134 (TValue {value = fromList [NativeInteger]})
    getbasename 5136 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeString]}})
    getctime 5138 (TValue {value = fromList [NativeInteger]})
    getextension 5140 (TValue {value = fromList [NativeString]})
    getfileinfo 5142 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeObject "splfileinfo"]}})
    getfilename 5144 (TValue {value = fromList [NativeString]})
    getgroup 5146 (TValue {value = fromList [NativeInteger]})
    getinode 5148 (TValue {value = fromList [NativeInteger]})
    getlinktarget 5150 (TValue {value = fromList [NativeString]})
    getmtime 5152 (TValue {value = fromList [NativeInteger]})
    getowner 5154 (TValue {value = fromList [NativeInteger]})
    getpath 5156 (TValue {value = fromList [NativeString]})
    getpathinfo 5158 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeObject "splfileinfo"]}})
    getpathname 5160 (TValue {value = fromList [NativeString]})
    getperms 5162 (TValue {value = fromList [NativeInteger]})
    getrealpath 5164 (TValue {value = fromList [NativeString]})
    getsize 5166 (TValue {value = fromList [NativeInteger]})
    gettype 5168 (TValue {value = fromList [NativeString]})
    isdir 5170 (TValue {value = fromList [NativeBoolean]})
    isexecutable 5172 (TValue {value = fromList [NativeBoolean]})
    isfile 5174 (TValue {value = fromList [NativeBoolean]})
    islink 5176 (TValue {value = fromList [NativeBoolean]})
    isreadable 5178 (TValue {value = fromList [NativeBoolean]})
    iswritable 5180 (TValue {value = fromList [NativeBoolean]})
    openFile 5182 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeBoolean]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeResource File]}, right = TValue {value = fromList [NativeObject "splfileobject"]}}}})
    setfileclass 5184 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeNull]}})
    setinfoclass 5186 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeNull]}})
    __toString 5188 (TValue {value = fromList [NativeString]})
class ziparchive (5191 )
    addemptydir 5193 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    addfile 5195 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}}}}})
    addfromstring 5197 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    addglob 5199 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeBoolean])]}, right = TValue {value = fromList [NativeBoolean]}}}})
    addpattern 5201 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeBoolean])]}, right = TValue {value = fromList [NativeBoolean]}}}})
    close 5203 (TValue {value = fromList [NativeBoolean]})
    deleteindex 5205 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}})
    deletename 5207 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    extractto 5209 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString,NativeArray (fromList [NativeInteger]) (fromList [NativeString])]}, right = TValue {value = fromList [NativeBoolean]}}})
    getarchivecomment 5211 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}})
    getcommentindex 5213 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getcommentname 5215 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getfromindex 5217 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}}})
    getfromname 5219 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}}})
    getnameindex 5221 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getstatusstring 5223 (TValue {value = fromList [NativeString]})
    getstream 5225 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeResource File]}})
    locatename 5227 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeInteger]}}})
    open 5229 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean,NativeInteger]}}})
    renameindex 5231 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    renamename 5233 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    setarchivecomment 5235 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    setcommentindex 5237 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    setcommentname 5239 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    statindex 5241 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeInteger])]}}})
    statname 5243 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeFalse,NativeArray (fromList [NativeString]) (fromList [NativeString,NativeInteger])]}}})
    unchangeall 5245 (TValue {value = fromList [NativeBoolean]})
    unchangearchive 5247 (TValue {value = fromList [NativeBoolean]})
    unchangeindex 5249 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}})
    unchangename 5251 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
*/
?>
