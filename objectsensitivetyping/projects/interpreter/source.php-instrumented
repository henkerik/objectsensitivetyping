<?php
function __log__ ($var, $value, $label)  // "ln: 5, lx: 6, lxe: 7"
{
    $type = gettype ($value);// /* , Call: 10, Return: 11, Exception Return: 12, After: 8, Exception After: 9 */ function call
    $cmp = "object"; // 13
    $is_object = $type == $cmp; // 14
    $open = "["; // 15
    $close = "]"; // 16
    if ($is_object){
        $clazz = get_class ($value);// /* , Call: 20, Return: 21, Exception Return: 22, After: 18, Exception After: 19 */ function call
        $object = "object"; // 23
        $type = $object . $open; // 24
        $type = $type . $clazz; // 25
        $type = $type . $close; // 26
    }
    else {
         // "27 skip"
    }
    $cmp = "resource"; // 28
    $is_resource = $type == $cmp; // 29
    if ($is_resource){
        $resourcetype = get_resource_type ($value);// /* , Call: 33, Return: 34, Exception Return: 35, After: 31, Exception After: 32 */ function call
        $resource = "resource"; // 36
        $type = $resource . $open; // 37
        $type = $type . $resourcetype; // 38
        $type = $type . $close; // 39
    }
    else {
         // "40 skip"
    }
    $file = "log.txt"; // 41
    $newline = "\n"; // 42
    $flags = FILE_APPEND; // 43
    $colon = ":"; // 44
    $line = $label . $colon; // 45
    $line = $line . $var; // 46
    $line = $line . $colon; // 47
    $line = $line . $type; // 48
    $line = $line . $newline; // 49
    file_put_contents ($file, $line, $flags);// /* , Call: 52, Return: 53, Exception Return: 54, After: 50, Exception After: 51 */ function call
}
 // "55 skip"
class undefinedvariableexception extends exception { // "56"
}
class env { // "57"
    protected $env;
    public function __construct ()/* Entry: 58, Exit: 59, Exception Exit: 60 */ 
                                                                               {
                                                                                   unset ($TSa43); // 61
                                                                                   $TSa43 = (array) $TSa43; // 62
                                                                                   __log__ ("TSa43", $TSa43, 12);
                                                                                   $TSNNt368 = $TSa43; // 63
                                                                                   __log__ ("TSNNt368", $TSNNt368, 13);
                                                                                   $this->env = $TSNNt368; // 64
                                                                               }
    public function lookup ($var)/* Entry: 65, Exit: 66, Exception Exit: 67 */ 
                                                                              {
                                                                                  $TSNNt369 = $this->env; // 68
                                                                                  __log__ ("TSNNt369", $TSNNt369, 18);
                                                                                  $TSNNi370 = $TSNNt369[$var]; // 69
                                                                                  __log__ ("TSNNi370", $TSNNi370, 19);
                                                                                  $TLE44 = isset ($TSNNi370); // "70native call"
                                                                                  __log__ ("TLE44", $TLE44, 20);
                                                                                  $TSNNt369[$var] = $TSNNi370; // 71
                                                                                  $this->env = $TSNNt369; // 72
                                                                                  if ($TLE44){
                                                                                      $TSNNt371 = $this->env; // 74
                                                                                      __log__ ("TSNNt371", $TSNNt371, 24);
                                                                                      $TSNNi372 = $TSNNt371[$var]; // 75
                                                                                      __log__ ("TSNNi372", $TSNNi372, 25);
                                                                                      return $TSNNi372; // 76
                                                                                  }
                                                                                  else {
                                                                                      $TLE45 = new undefinedvariableexception ();// /* , Call: 79, Return: 80, Exception Return: 81, After: 77, Exception After: 78 */ constructor call
                                                                                      __log__ ("TLE45", $TLE45, 27);
                                                                                      throw $TLE45; // 82
                                                                                  }
                                                                              }
    public function store ($var, $value)/* Entry: 83, Exit: 84, Exception Exit: 85 */ 
                                                                                     {
                                                                                         $TSNNt373 = $this->env; // 86
                                                                                         __log__ ("TSNNt373", $TSNNt373, 36);
                                                                                         $TSNNt373[$var] = $value; // 87
                                                                                         $this->env = $TSNNt373; // 88
                                                                                     }
}
abstract class expr { // "89"
    protected $hashCode;
    public function __construct ($hashCode)/* Entry: 90, Exit: 91, Exception Exit: 92 */ 
                                                                                        {
                                                                                            $TLE46 = 8191; // 93
                                                                                            __log__ ("TLE46", $TLE46, 43);
                                                                                            $TLE47 = $hashCode & $TLE46; // 94
                                                                                            __log__ ("TLE47", $TLE47, 44);
                                                                                            $TSNNt374 = $TLE47; // 95
                                                                                            __log__ ("TSNNt374", $TSNNt374, 45);
                                                                                            $this->hashCode = $TSNNt374; // 96
                                                                                        }
    public function hashcode ()/* Entry: 97, Exit: 98, Exception Exit: 99 */ 
                                                                            {
                                                                                $TSNNt375 = $this->hashCode; // 100
                                                                                __log__ ("TSNNt375", $TSNNt375, 50);
                                                                                return $TSNNt375; // 101
                                                                            }
    public abstract function evaluate (env $env)/* Entry: 102, Exit: 103, Exception Exit: 104 */;
    public abstract function visit (visitor $visitor)/* Entry: 105, Exit: 106, Exception Exit: 107 */;
}
abstract class binaryexpr extends expr { // "108"
    protected $left;
    protected $right;
    public function __construct ($hashCode, expr $left, expr $right)/* Entry: 109, Exit: 110, Exception Exit: 111 */ 
                                                                                                                    {
                                                                                                                        expr::__construct ($hashCode);// /* , Call: 114, Return: 115, Exception Return: 116, After: 112, Exception After: 113 */ resolved method call
                                                                                                                        $TSNNt376 = $left; // 117
                                                                                                                        __log__ ("TSNNt376", $TSNNt376, 67);
                                                                                                                        $this->left = $TSNNt376; // 118
                                                                                                                        $TSNNt377 = $right; // 119
                                                                                                                        __log__ ("TSNNt377", $TSNNt377, 69);
                                                                                                                        $this->right = $TSNNt377; // 120
                                                                                                                    }
    public function getleft ()/* Entry: 121, Exit: 122, Exception Exit: 123 */ 
                                                                              {
                                                                                  $TSNNt378 = $this->left; // 124
                                                                                  __log__ ("TSNNt378", $TSNNt378, 74);
                                                                                  return $TSNNt378; // 125
                                                                              }
    public function getright ()/* Entry: 126, Exit: 127, Exception Exit: 128 */ 
                                                                               {
                                                                                   $TSNNt379 = $this->right; // 129
                                                                                   __log__ ("TSNNt379", $TSNNt379, 79);
                                                                                   return $TSNNt379; // 130
                                                                               }
}
class factor extends expr { // "131"
    protected $expr;
    public function __construct (expr $expr)/* Entry: 132, Exit: 133, Exception Exit: 134 */ 
                                                                                            {
                                                                                                $TSNNt380 = $expr; // 135
                                                                                                __log__ ("TSNNt380", $TSNNt380, 85);
                                                                                                $this->expr = $TSNNt380; // 136
                                                                                            }
    public function getexpr ()/* Entry: 137, Exit: 138, Exception Exit: 139 */ 
                                                                              {
                                                                                  $TSNNt381 = $this->expr; // 140
                                                                                  __log__ ("TSNNt381", $TSNNt381, 90);
                                                                                  return $TSNNt381; // 141
                                                                              }
    public function evaluate (env $env)/* Entry: 142, Exit: 143, Exception Exit: 144 */ 
                                                                                       {
                                                                                           $TSNNt382 = $this->expr; // 145
                                                                                           __log__ ("TSNNt382", $TSNNt382, 95);
                                                                                           $n = $TSNNt382->evaluate ($env);// /* , Call: 148, Return: 149, Exception Return: 150, After: 146, Exception After: 147 */ method call
                                                                                           __log__ ("n", $n, 96);
                                                                                           $factor = 1; // 151
                                                                                           __log__ ("factor", $factor, 101);
                                                                                           while (True){
                                                                                               $TLE48 = 1; // 153
                                                                                               __log__ ("TLE48", $TLE48, 103);
                                                                                               $TLE49 = $TLE48 < $n; // 154
                                                                                               __log__ ("TLE49", $TLE49, 104);
                                                                                               $TLE50 = !$TLE49; // 155
                                                                                               __log__ ("TLE50", $TLE50, 105);
                                                                                               if ($TLE50){
                                                                                                   break; // 157
                                                                                               }
                                                                                               else {
                                                                                                    // "158 skip"
                                                                                               }
                                                                                               $factor = $factor * $n; // 159
                                                                                               __log__ ("factor", $factor, 109);
                                                                                               --$n; // 160
                                                                                               __log__ ("n", $n, 110);
                                                                                           }
                                                                                           return $factor; // 161
                                                                                       }
    public function equals ($other)/* Entry: 162, Exit: 163, Exception Exit: 164 */ 
                                                                                   {
                                                                                       $TLE51 = $other instanceof factor;
                                                                                       if ($TLE51){
                                                                                           $TLE52 = $other->getexpr ();// /* , Call: 169, Return: 170, Exception Return: 171, After: 167, Exception After: 168 */ method call
                                                                                           __log__ ("TLE52", $TLE52, 117);
                                                                                           $TSNNt383 = $this->expr; // 172
                                                                                           __log__ ("TSNNt383", $TSNNt383, 122);
                                                                                           $TLE53 = $TSNNt383->equals ($TLE52);// /* , Call: 175, Return: 176, Exception Return: 177, After: 173, Exception After: 174 */ method call
                                                                                           __log__ ("TLE53", $TLE53, 123);
                                                                                           return $TLE53; // 178
                                                                                       }
                                                                                       else {
                                                                                           $TLE54 = false; // 179
                                                                                           __log__ ("TLE54", $TLE54, 129);
                                                                                           return $TLE54; // 180
                                                                                       }
                                                                                   }
    public function hashcode ()/* Entry: 181, Exit: 182, Exception Exit: 183 */ 
                                                                               {
                                                                                   $TLE55 = 17; // 184
                                                                                   __log__ ("TLE55", $TLE55, 134);
                                                                                   $TSNNt384 = $this->expr; // 185
                                                                                   __log__ ("TSNNt384", $TSNNt384, 135);
                                                                                   $TLE56 = $TSNNt384->hashcode ();// /* , Call: 188, Return: 189, Exception Return: 190, After: 186, Exception After: 187 */ method call
                                                                                   __log__ ("TLE56", $TLE56, 136);
                                                                                   $TLE57 = $TLE55 * $TLE56; // 191
                                                                                   __log__ ("TLE57", $TLE57, 141);
                                                                                   return $TLE57; // 192
                                                                               }
    public function visit (visitor $visitor)/* Entry: 193, Exit: 194, Exception Exit: 195 */ 
                                                                                            {
                                                                                                $visitor->onfactor ($this);// /* , Call: 198, Return: 199, Exception Return: 200, After: 196, Exception After: 197 */ method call
                                                                                            }
}
class min extends binaryexpr { // "201"
    public function __construct (expr $left, expr $right)/* Entry: 202, Exit: 203, Exception Exit: 204 */ 
                                                                                                         {
                                                                                                             $TLE58 = $left->hashcode ();// /* , Call: 207, Return: 208, Exception Return: 209, After: 205, Exception After: 206 */ method call
                                                                                                             __log__ ("TLE58", $TLE58, 155);
                                                                                                             $TLE59 = $right->hashcode ();// /* , Call: 212, Return: 213, Exception Return: 214, After: 210, Exception After: 211 */ method call
                                                                                                             __log__ ("TLE59", $TLE59, 160);
                                                                                                             $TLE60 = $TLE58 * $TLE59; // 215
                                                                                                             __log__ ("TLE60", $TLE60, 165);
                                                                                                             binaryexpr::__construct ($TLE60, $left, $right);// /* , Call: 218, Return: 219, Exception Return: 220, After: 216, Exception After: 217 */ resolved method call
                                                                                                         }
    public function evaluate (env $env)/* Entry: 221, Exit: 222, Exception Exit: 223 */ 
                                                                                       {
                                                                                           $TSNNt385 = $this->left; // 224
                                                                                           __log__ ("TSNNt385", $TSNNt385, 174);
                                                                                           $TLE61 = $TSNNt385->evaluate ($env);// /* , Call: 227, Return: 228, Exception Return: 229, After: 225, Exception After: 226 */ method call
                                                                                           __log__ ("TLE61", $TLE61, 175);
                                                                                           $TSNNt386 = $this->right; // 230
                                                                                           __log__ ("TSNNt386", $TSNNt386, 180);
                                                                                           $TLE62 = $TSNNt386->evaluate ($env);// /* , Call: 233, Return: 234, Exception Return: 235, After: 231, Exception After: 232 */ method call
                                                                                           __log__ ("TLE62", $TLE62, 181);
                                                                                           $TLE63 = $TLE61 - $TLE62; // 236
                                                                                           __log__ ("TLE63", $TLE63, 186);
                                                                                           return $TLE63; // 237
                                                                                       }
    public function equals ($other)/* Entry: 238, Exit: 239, Exception Exit: 240 */ 
                                                                                   {
                                                                                       $TLE64 = $other instanceof min;
                                                                                       if ($TLE64){
                                                                                           $TLE65 = $other->getleft ();// /* , Call: 245, Return: 246, Exception Return: 247, After: 243, Exception After: 244 */ method call
                                                                                           __log__ ("TLE65", $TLE65, 193);
                                                                                           $TSNNt387 = $this->left; // 248
                                                                                           __log__ ("TSNNt387", $TSNNt387, 198);
                                                                                           $TLE33 = $TSNNt387->equals ($TLE65);// /* , Call: 251, Return: 252, Exception Return: 253, After: 249, Exception After: 250 */ method call
                                                                                           __log__ ("TLE33", $TLE33, 199);
                                                                                           if ($TLE33){
                                                                                               $TLE66 = $other->getright ();// /* , Call: 257, Return: 258, Exception Return: 259, After: 255, Exception After: 256 */ method call
                                                                                               __log__ ("TLE66", $TLE66, 205);
                                                                                               $TSNNt388 = $this->right; // 260
                                                                                               __log__ ("TSNNt388", $TSNNt388, 210);
                                                                                               $TEF34 = $TSNNt388->equals ($TLE66);// /* , Call: 263, Return: 264, Exception Return: 265, After: 261, Exception After: 262 */ method call
                                                                                               __log__ ("TEF34", $TEF34, 211);
                                                                                           }
                                                                                           else {
                                                                                               $TEF34 = $TLE33; // 266
                                                                                               __log__ ("TEF34", $TEF34, 216);
                                                                                           }
                                                                                           $TLE67 = (bool) $TEF34; // 267
                                                                                           __log__ ("TLE67", $TLE67, 217);
                                                                                           return $TLE67; // 268
                                                                                       }
                                                                                       else {
                                                                                           $TLE68 = false; // 269
                                                                                           __log__ ("TLE68", $TLE68, 219);
                                                                                           return $TLE68; // 270
                                                                                       }
                                                                                   }
    public function visit (visitor $visitor)/* Entry: 271, Exit: 272, Exception Exit: 273 */ 
                                                                                            {
                                                                                                $visitor->onmin ($this);// /* , Call: 276, Return: 277, Exception Return: 278, After: 274, Exception After: 275 */ method call
                                                                                            }
}
class plus extends binaryexpr { // "279"
    public function __construct (expr $left, expr $right)/* Entry: 280, Exit: 281, Exception Exit: 282 */ 
                                                                                                         {
                                                                                                             $TLE69 = 3; // 283
                                                                                                             __log__ ("TLE69", $TLE69, 233);
                                                                                                             $TLE70 = $left->hashcode ();// /* , Call: 286, Return: 287, Exception Return: 288, After: 284, Exception After: 285 */ method call
                                                                                                             __log__ ("TLE70", $TLE70, 234);
                                                                                                             $TLE71 = $TLE69 * $TLE70; // 289
                                                                                                             __log__ ("TLE71", $TLE71, 239);
                                                                                                             $TLE72 = $right->hashcode ();// /* , Call: 292, Return: 293, Exception Return: 294, After: 290, Exception After: 291 */ method call
                                                                                                             __log__ ("TLE72", $TLE72, 240);
                                                                                                             $TLE73 = $TLE71 * $TLE72; // 295
                                                                                                             __log__ ("TLE73", $TLE73, 245);
                                                                                                             binaryexpr::__construct ($TLE73, $left, $right);// /* , Call: 298, Return: 299, Exception Return: 300, After: 296, Exception After: 297 */ resolved method call
                                                                                                         }
    public function evaluate (env $env)/* Entry: 301, Exit: 302, Exception Exit: 303 */ 
                                                                                       {
                                                                                           $TSNNt389 = $this->left; // 304
                                                                                           __log__ ("TSNNt389", $TSNNt389, 254);
                                                                                           $TLE74 = $TSNNt389->evaluate ($env);// /* , Call: 307, Return: 308, Exception Return: 309, After: 305, Exception After: 306 */ method call
                                                                                           __log__ ("TLE74", $TLE74, 255);
                                                                                           $TSNNt390 = $this->right; // 310
                                                                                           __log__ ("TSNNt390", $TSNNt390, 260);
                                                                                           $TLE75 = $TSNNt390->evaluate ($env);// /* , Call: 313, Return: 314, Exception Return: 315, After: 311, Exception After: 312 */ method call
                                                                                           __log__ ("TLE75", $TLE75, 261);
                                                                                           $TLE76 = $TLE74 + $TLE75; // 316
                                                                                           __log__ ("TLE76", $TLE76, 266);
                                                                                           return $TLE76; // 317
                                                                                       }
    public function equals ($other)/* Entry: 318, Exit: 319, Exception Exit: 320 */ 
                                                                                   {
                                                                                       $TLE77 = $other instanceof plus;
                                                                                       if ($TLE77){
                                                                                           $TLE78 = $other->getleft ();// /* , Call: 325, Return: 326, Exception Return: 327, After: 323, Exception After: 324 */ method call
                                                                                           __log__ ("TLE78", $TLE78, 273);
                                                                                           $TSNNt391 = $this->left; // 328
                                                                                           __log__ ("TSNNt391", $TSNNt391, 278);
                                                                                           $TLE35 = $TSNNt391->equals ($TLE78);// /* , Call: 331, Return: 332, Exception Return: 333, After: 329, Exception After: 330 */ method call
                                                                                           __log__ ("TLE35", $TLE35, 279);
                                                                                           if ($TLE35){
                                                                                               $TLE79 = $other->getright ();// /* , Call: 337, Return: 338, Exception Return: 339, After: 335, Exception After: 336 */ method call
                                                                                               __log__ ("TLE79", $TLE79, 285);
                                                                                               $TSNNt392 = $this->right; // 340
                                                                                               __log__ ("TSNNt392", $TSNNt392, 290);
                                                                                               $TEF36 = $TSNNt392->equals ($TLE79);// /* , Call: 343, Return: 344, Exception Return: 345, After: 341, Exception After: 342 */ method call
                                                                                               __log__ ("TEF36", $TEF36, 291);
                                                                                           }
                                                                                           else {
                                                                                               $TEF36 = $TLE35; // 346
                                                                                               __log__ ("TEF36", $TEF36, 296);
                                                                                           }
                                                                                           $TLE80 = (bool) $TEF36; // 347
                                                                                           __log__ ("TLE80", $TLE80, 297);
                                                                                           return $TLE80; // 348
                                                                                       }
                                                                                       else {
                                                                                           $TLE81 = false; // 349
                                                                                           __log__ ("TLE81", $TLE81, 299);
                                                                                           return $TLE81; // 350
                                                                                       }
                                                                                   }
    public function visit (visitor $visitor)/* Entry: 351, Exit: 352, Exception Exit: 353 */ 
                                                                                            {
                                                                                                $visitor->onplus ($this);// /* , Call: 356, Return: 357, Exception Return: 358, After: 354, Exception After: 355 */ method call
                                                                                            }
}
class mul extends binaryexpr { // "359"
    public function __construct (expr $left, expr $right)/* Entry: 360, Exit: 361, Exception Exit: 362 */ 
                                                                                                         {
                                                                                                             $TLE82 = 5; // 363
                                                                                                             __log__ ("TLE82", $TLE82, 313);
                                                                                                             $TLE83 = $left->hashcode ();// /* , Call: 366, Return: 367, Exception Return: 368, After: 364, Exception After: 365 */ method call
                                                                                                             __log__ ("TLE83", $TLE83, 314);
                                                                                                             $TLE84 = $TLE82 * $TLE83; // 369
                                                                                                             __log__ ("TLE84", $TLE84, 319);
                                                                                                             $TLE85 = $right->hashcode ();// /* , Call: 372, Return: 373, Exception Return: 374, After: 370, Exception After: 371 */ method call
                                                                                                             __log__ ("TLE85", $TLE85, 320);
                                                                                                             $TLE86 = $TLE84 * $TLE85; // 375
                                                                                                             __log__ ("TLE86", $TLE86, 325);
                                                                                                             binaryexpr::__construct ($TLE86, $left, $right);// /* , Call: 378, Return: 379, Exception Return: 380, After: 376, Exception After: 377 */ resolved method call
                                                                                                         }
    public function evaluate (env $env)/* Entry: 381, Exit: 382, Exception Exit: 383 */ 
                                                                                       {
                                                                                           $TSNNt393 = $this->left; // 384
                                                                                           __log__ ("TSNNt393", $TSNNt393, 334);
                                                                                           $TLE87 = $TSNNt393->evaluate ($env);// /* , Call: 387, Return: 388, Exception Return: 389, After: 385, Exception After: 386 */ method call
                                                                                           __log__ ("TLE87", $TLE87, 335);
                                                                                           $TSNNt394 = $this->right; // 390
                                                                                           __log__ ("TSNNt394", $TSNNt394, 340);
                                                                                           $TLE88 = $TSNNt394->evaluate ($env);// /* , Call: 393, Return: 394, Exception Return: 395, After: 391, Exception After: 392 */ method call
                                                                                           __log__ ("TLE88", $TLE88, 341);
                                                                                           $TLE89 = $TLE87 * $TLE88; // 396
                                                                                           __log__ ("TLE89", $TLE89, 346);
                                                                                           return $TLE89; // 397
                                                                                       }
    public function equals ($other)/* Entry: 398, Exit: 399, Exception Exit: 400 */ 
                                                                                   {
                                                                                       $TLE90 = $other instanceof mul;
                                                                                       if ($TLE90){
                                                                                           $TLE91 = $other->getleft ();// /* , Call: 405, Return: 406, Exception Return: 407, After: 403, Exception After: 404 */ method call
                                                                                           __log__ ("TLE91", $TLE91, 353);
                                                                                           $TSNNt395 = $this->left; // 408
                                                                                           __log__ ("TSNNt395", $TSNNt395, 358);
                                                                                           $TLE37 = $TSNNt395->equals ($TLE91);// /* , Call: 411, Return: 412, Exception Return: 413, After: 409, Exception After: 410 */ method call
                                                                                           __log__ ("TLE37", $TLE37, 359);
                                                                                           if ($TLE37){
                                                                                               $TLE92 = $other->getright ();// /* , Call: 417, Return: 418, Exception Return: 419, After: 415, Exception After: 416 */ method call
                                                                                               __log__ ("TLE92", $TLE92, 365);
                                                                                               $TSNNt396 = $this->right; // 420
                                                                                               __log__ ("TSNNt396", $TSNNt396, 370);
                                                                                               $TEF38 = $TSNNt396->equals ($TLE92);// /* , Call: 423, Return: 424, Exception Return: 425, After: 421, Exception After: 422 */ method call
                                                                                               __log__ ("TEF38", $TEF38, 371);
                                                                                           }
                                                                                           else {
                                                                                               $TEF38 = $TLE37; // 426
                                                                                               __log__ ("TEF38", $TEF38, 376);
                                                                                           }
                                                                                           $TLE93 = (bool) $TEF38; // 427
                                                                                           __log__ ("TLE93", $TLE93, 377);
                                                                                           return $TLE93; // 428
                                                                                       }
                                                                                       else {
                                                                                           $TLE94 = false; // 429
                                                                                           __log__ ("TLE94", $TLE94, 379);
                                                                                           return $TLE94; // 430
                                                                                       }
                                                                                   }
    public function visit (visitor $visitor)/* Entry: 431, Exit: 432, Exception Exit: 433 */ 
                                                                                            {
                                                                                                $visitor->onmul ($this);// /* , Call: 436, Return: 437, Exception Return: 438, After: 434, Exception After: 435 */ method call
                                                                                            }
}
class div extends binaryexpr { // "439"
    public function __construct (expr $left, expr $right)/* Entry: 440, Exit: 441, Exception Exit: 442 */ 
                                                                                                         {
                                                                                                             $TLE95 = 7; // 443
                                                                                                             __log__ ("TLE95", $TLE95, 393);
                                                                                                             $TLE96 = $left->hashcode ();// /* , Call: 446, Return: 447, Exception Return: 448, After: 444, Exception After: 445 */ method call
                                                                                                             __log__ ("TLE96", $TLE96, 394);
                                                                                                             $TLE97 = $TLE95 * $TLE96; // 449
                                                                                                             __log__ ("TLE97", $TLE97, 399);
                                                                                                             $TLE98 = $right->hashcode ();// /* , Call: 452, Return: 453, Exception Return: 454, After: 450, Exception After: 451 */ method call
                                                                                                             __log__ ("TLE98", $TLE98, 400);
                                                                                                             $TLE99 = $TLE97 * $TLE98; // 455
                                                                                                             __log__ ("TLE99", $TLE99, 405);
                                                                                                             binaryexpr::__construct ($TLE99, $left, $right);// /* , Call: 458, Return: 459, Exception Return: 460, After: 456, Exception After: 457 */ resolved method call
                                                                                                         }
    public function evaluate (env $env)/* Entry: 461, Exit: 462, Exception Exit: 463 */ 
                                                                                       {
                                                                                           $TSNNt397 = $this->left; // 464
                                                                                           __log__ ("TSNNt397", $TSNNt397, 414);
                                                                                           $TLE100 = $TSNNt397->evaluate ($env);// /* , Call: 467, Return: 468, Exception Return: 469, After: 465, Exception After: 466 */ method call
                                                                                           __log__ ("TLE100", $TLE100, 415);
                                                                                           $TSNNt398 = $this->right; // 470
                                                                                           __log__ ("TSNNt398", $TSNNt398, 420);
                                                                                           $TLE101 = $TSNNt398->evaluate ($env);// /* , Call: 473, Return: 474, Exception Return: 475, After: 471, Exception After: 472 */ method call
                                                                                           __log__ ("TLE101", $TLE101, 421);
                                                                                           $TLE102 = $TLE100 / $TLE101; // 476
                                                                                           __log__ ("TLE102", $TLE102, 426);
                                                                                           return $TLE102; // 477
                                                                                       }
    public function equals ($other)/* Entry: 478, Exit: 479, Exception Exit: 480 */ 
                                                                                   {
                                                                                       $TLE103 = $other instanceof div;
                                                                                       if ($TLE103){
                                                                                           $TLE104 = $other->getleft ();// /* , Call: 485, Return: 486, Exception Return: 487, After: 483, Exception After: 484 */ method call
                                                                                           __log__ ("TLE104", $TLE104, 433);
                                                                                           $TSNNt399 = $this->left; // 488
                                                                                           __log__ ("TSNNt399", $TSNNt399, 438);
                                                                                           $TLE39 = $TSNNt399->equals ($TLE104);// /* , Call: 491, Return: 492, Exception Return: 493, After: 489, Exception After: 490 */ method call
                                                                                           __log__ ("TLE39", $TLE39, 439);
                                                                                           if ($TLE39){
                                                                                               $TLE105 = $other->getright ();// /* , Call: 497, Return: 498, Exception Return: 499, After: 495, Exception After: 496 */ method call
                                                                                               __log__ ("TLE105", $TLE105, 445);
                                                                                               $TSNNt400 = $this->right; // 500
                                                                                               __log__ ("TSNNt400", $TSNNt400, 450);
                                                                                               $TEF40 = $TSNNt400->equals ($TLE105);// /* , Call: 503, Return: 504, Exception Return: 505, After: 501, Exception After: 502 */ method call
                                                                                               __log__ ("TEF40", $TEF40, 451);
                                                                                           }
                                                                                           else {
                                                                                               $TEF40 = $TLE39; // 506
                                                                                               __log__ ("TEF40", $TEF40, 456);
                                                                                           }
                                                                                           $TLE106 = (bool) $TEF40; // 507
                                                                                           __log__ ("TLE106", $TLE106, 457);
                                                                                           return $TLE106; // 508
                                                                                       }
                                                                                       else {
                                                                                           $TLE107 = false; // 509
                                                                                           __log__ ("TLE107", $TLE107, 459);
                                                                                           return $TLE107; // 510
                                                                                       }
                                                                                   }
    public function visit (visitor $visitor)/* Entry: 511, Exit: 512, Exception Exit: 513 */ 
                                                                                            {
                                                                                                $visitor->ondiv ($this);// /* , Call: 516, Return: 517, Exception Return: 518, After: 514, Exception After: 515 */ method call
                                                                                            }
}
class constant extends expr { // "519"
    protected $value;
    public function __construct ($value)/* Entry: 520, Exit: 521, Exception Exit: 522 */ 
                                                                                        {
                                                                                            $TLE108 = 11; // 523
                                                                                            __log__ ("TLE108", $TLE108, 473);
                                                                                            expr::__construct ($TLE108);// /* , Call: 526, Return: 527, Exception Return: 528, After: 524, Exception After: 525 */ resolved method call
                                                                                            $TSNNt401 = $value; // 529
                                                                                            __log__ ("TSNNt401", $TSNNt401, 479);
                                                                                            $this->value = $TSNNt401; // 530
                                                                                        }
    public function getvalue ()/* Entry: 531, Exit: 532, Exception Exit: 533 */ 
                                                                               {
                                                                                   $TSNNt402 = $this->value; // 534
                                                                                   __log__ ("TSNNt402", $TSNNt402, 484);
                                                                                   return $TSNNt402; // 535
                                                                               }
    public function evaluate (env $env)/* Entry: 536, Exit: 537, Exception Exit: 538 */ 
                                                                                       {
                                                                                           $TSNNt403 = $this->value; // 539
                                                                                           __log__ ("TSNNt403", $TSNNt403, 489);
                                                                                           return $TSNNt403; // 540
                                                                                       }
    public function equals ($other)/* Entry: 541, Exit: 542, Exception Exit: 543 */ 
                                                                                   {
                                                                                       $TLE109 = $other instanceof constant;
                                                                                       if ($TLE109){
                                                                                           $TLE110 = $other->getvalue ();// /* , Call: 548, Return: 549, Exception Return: 550, After: 546, Exception After: 547 */ method call
                                                                                           __log__ ("TLE110", $TLE110, 496);
                                                                                           $TSNNt404 = $this->value; // 551
                                                                                           __log__ ("TSNNt404", $TSNNt404, 501);
                                                                                           $TLE111 = $TSNNt404 == $TLE110; // 552
                                                                                           __log__ ("TLE111", $TLE111, 502);
                                                                                           return $TLE111; // 553
                                                                                       }
                                                                                       else {
                                                                                           $TLE112 = false; // 554
                                                                                           __log__ ("TLE112", $TLE112, 504);
                                                                                           return $TLE112; // 555
                                                                                       }
                                                                                   }
    public function visit (visitor $visitor)/* Entry: 556, Exit: 557, Exception Exit: 558 */ 
                                                                                            {
                                                                                                $visitor->onconst ($this);// /* , Call: 561, Return: 562, Exception Return: 563, After: 559, Exception After: 560 */ method call
                                                                                            }
}
class variable extends expr { // "564"
    protected $var;
    public function __construct ($var)/* Entry: 565, Exit: 566, Exception Exit: 567 */ 
                                                                                      {
                                                                                          $TLE113 = 13; // 568
                                                                                          __log__ ("TLE113", $TLE113, 518);
                                                                                          expr::__construct ($TLE113);// /* , Call: 571, Return: 572, Exception Return: 573, After: 569, Exception After: 570 */ resolved method call
                                                                                          $TSNNt405 = $var; // 574
                                                                                          __log__ ("TSNNt405", $TSNNt405, 524);
                                                                                          $this->var = $TSNNt405; // 575
                                                                                      }
    public function getvar ()/* Entry: 576, Exit: 577, Exception Exit: 578 */ 
                                                                             {
                                                                                 $TSNNt406 = $this->var; // 579
                                                                                 __log__ ("TSNNt406", $TSNNt406, 529);
                                                                                 return $TSNNt406; // 580
                                                                             }
    public function evaluate (env $env)/* Entry: 581, Exit: 582, Exception Exit: 583 */ 
                                                                                       {
                                                                                           $TSNNt407 = $this->var; // 584
                                                                                           __log__ ("TSNNt407", $TSNNt407, 534);
                                                                                           $TLE114 = $env->lookup ($TSNNt407);// /* , Call: 587, Return: 588, Exception Return: 589, After: 585, Exception After: 586 */ method call
                                                                                           __log__ ("TLE114", $TLE114, 535);
                                                                                           return $TLE114; // 590
                                                                                       }
    public function equals ($other)/* Entry: 591, Exit: 592, Exception Exit: 593 */ 
                                                                                   {
                                                                                       $TLE115 = $other instanceof variable;
                                                                                       if ($TLE115){
                                                                                           $TLE116 = $other->getvar ();// /* , Call: 598, Return: 599, Exception Return: 600, After: 596, Exception After: 597 */ method call
                                                                                           __log__ ("TLE116", $TLE116, 546);
                                                                                           $TSNNt408 = $this->var; // 601
                                                                                           __log__ ("TSNNt408", $TSNNt408, 551);
                                                                                           $TLE117 = $TSNNt408 == $TLE116; // 602
                                                                                           __log__ ("TLE117", $TLE117, 552);
                                                                                           return $TLE117; // 603
                                                                                       }
                                                                                       else {
                                                                                           $TLE118 = false; // 604
                                                                                           __log__ ("TLE118", $TLE118, 554);
                                                                                           return $TLE118; // 605
                                                                                       }
                                                                                   }
    public function visit (visitor $visitor)/* Entry: 606, Exit: 607, Exception Exit: 608 */ 
                                                                                            {
                                                                                                $visitor->onvar ($this);// /* , Call: 611, Return: 612, Exception Return: 613, After: 609, Exception After: 610 */ method call
                                                                                            }
}
class entry { // "614"
    protected $next = null;
    protected $epxr;
    public function __construct ($expr, $next)/* Entry: 615, Exit: 616, Exception Exit: 617 */ 
                                                                                              {
                                                                                                  $TSNNt409 = $expr; // 618
                                                                                                  __log__ ("TSNNt409", $TSNNt409, 568);
                                                                                                  $this->expr = $TSNNt409; // 619
                                                                                                  $TSNNt410 = $next; // 620
                                                                                                  __log__ ("TSNNt410", $TSNNt410, 570);
                                                                                                  $this->next = $TSNNt410; // 621
                                                                                              }
    public function getexpr ()/* Entry: 622, Exit: 623, Exception Exit: 624 */ 
                                                                              {
                                                                                  $TSNNt411 = $this->expr; // 625
                                                                                  __log__ ("TSNNt411", $TSNNt411, 575);
                                                                                  return $TSNNt411; // 626
                                                                              }
    public function getnext ()/* Entry: 627, Exit: 628, Exception Exit: 629 */ 
                                                                              {
                                                                                  $TSNNt412 = $this->next; // 630
                                                                                  __log__ ("TSNNt412", $TSNNt412, 580);
                                                                                  return $TSNNt412; // 631
                                                                              }
}
class hashtable { // "632"
    protected $table;
    protected $size;
    public function __construct ($size)/* Entry: 633, Exit: 634, Exception Exit: 635 */ 
                                                                                       {
                                                                                           $TLE119 = 0; // 636
                                                                                           __log__ ("TLE119", $TLE119, 586);
                                                                                           $TLE120 = null; // 637
                                                                                           __log__ ("TLE120", $TLE120, 587);
                                                                                           $TLE121 = array_fill ($TLE119, $size, $TLE120); // "638native call"
                                                                                           __log__ ("TLE121", $TLE121, 588);
                                                                                           $TSNNt413 = $TLE121; // 639
                                                                                           __log__ ("TSNNt413", $TSNNt413, 589);
                                                                                           $this->table = $TSNNt413; // 640
                                                                                           $TSNNt414 = $size; // 641
                                                                                           __log__ ("TSNNt414", $TSNNt414, 591);
                                                                                           $this->size = $TSNNt414; // 642
                                                                                       }
    protected function rehash ($hc)/* Entry: 643, Exit: 644, Exception Exit: 645 */ 
                                                                                   {
                                                                                       $TSNNt415 = $this->size; // 646
                                                                                       __log__ ("TSNNt415", $TSNNt415, 596);
                                                                                       $TLE122 = $hc & $TSNNt415; // 647
                                                                                       __log__ ("TLE122", $TLE122, 597);
                                                                                       return $TLE122; // 648
                                                                                   }
    public function contains ($expr)/* Entry: 649, Exit: 650, Exception Exit: 651 */ 
                                                                                    {
                                                                                        $TLE123 = $this->lookup ($expr);// /* , Call: 654, Return: 655, Exception Return: 656, After: 652, Exception After: 653 */ method call
                                                                                        __log__ ("TLE123", $TLE123, 602);
                                                                                        $TLE124 = null; // 657
                                                                                        __log__ ("TLE124", $TLE124, 607);
                                                                                        $TLE125 = $TLE123 != $TLE124; // 658
                                                                                        __log__ ("TLE125", $TLE125, 608);
                                                                                        return $TLE125; // 659
                                                                                    }
    public function insert ($expr)/* Entry: 660, Exit: 661, Exception Exit: 662 */ 
                                                                                  {
                                                                                      $TLE126 = $expr->hashcode ();// /* , Call: 665, Return: 666, Exception Return: 667, After: 663, Exception After: 664 */ method call
                                                                                      __log__ ("TLE126", $TLE126, 613);
                                                                                      $TLE127 = $this->rehash ($TLE126);// /* , Call: 670, Return: 671, Exception Return: 672, After: 668, Exception After: 669 */ method call
                                                                                      __log__ ("TLE127", $TLE127, 618);
                                                                                      $TSNNt416 = $this->table; // 673
                                                                                      __log__ ("TSNNt416", $TSNNt416, 623);
                                                                                      $TSNNi417 = $TSNNt416[$TLE127]; // 674
                                                                                      __log__ ("TSNNi417", $TSNNi417, 624);
                                                                                      $entry = $TSNNi417; // 675
                                                                                      __log__ ("entry", $entry, 625);
                                                                                      $TSNNt416[$TLE127] = $TSNNi417; // 676
                                                                                      $this->table = $TSNNt416; // 677
                                                                                      $TLE128 = $expr->hashcode ();// /* , Call: 680, Return: 681, Exception Return: 682, After: 678, Exception After: 679 */ method call
                                                                                      __log__ ("TLE128", $TLE128, 628);
                                                                                      $TLE129 = $this->rehash ($TLE128);// /* , Call: 685, Return: 686, Exception Return: 687, After: 683, Exception After: 684 */ method call
                                                                                      __log__ ("TLE129", $TLE129, 633);
                                                                                      $TLE130 = new entry ($expr, $entry);// /* , Call: 690, Return: 691, Exception Return: 692, After: 688, Exception After: 689 */ constructor call
                                                                                      __log__ ("TLE130", $TLE130, 638);
                                                                                      $TSNNt418 = $this->table; // 693
                                                                                      __log__ ("TSNNt418", $TSNNt418, 643);
                                                                                      $TSNNt418[$TLE129] = $TLE130; // 694
                                                                                      $this->table = $TSNNt418; // 695
                                                                                  }
    public function lookup ($expr)/* Entry: 696, Exit: 697, Exception Exit: 698 */ 
                                                                                  {
                                                                                      $TLE131 = $expr->hashcode ();// /* , Call: 701, Return: 702, Exception Return: 703, After: 699, Exception After: 700 */ method call
                                                                                      __log__ ("TLE131", $TLE131, 649);
                                                                                      $TLE132 = $this->rehash ($TLE131);// /* , Call: 706, Return: 707, Exception Return: 708, After: 704, Exception After: 705 */ method call
                                                                                      __log__ ("TLE132", $TLE132, 654);
                                                                                      $TSNNt419 = $this->table; // 709
                                                                                      __log__ ("TSNNt419", $TSNNt419, 659);
                                                                                      $TSNNi420 = $TSNNt419[$TLE132]; // 710
                                                                                      __log__ ("TSNNi420", $TSNNi420, 660);
                                                                                      $entry = $TSNNi420; // 711
                                                                                      __log__ ("entry", $entry, 661);
                                                                                      $TSNNt419[$TLE132] = $TSNNi420; // 712
                                                                                      $this->table = $TSNNt419; // 713
                                                                                      if ($entry){
                                                                                          while (True){
                                                                                              $TLE133 = !$entry; // 716
                                                                                              __log__ ("TLE133", $TLE133, 666);
                                                                                              if ($TLE133){
                                                                                                  break; // 718
                                                                                              }
                                                                                              else {
                                                                                                   // "719 skip"
                                                                                              }
                                                                                              $TLE134 = $entry->getexpr ();// /* , Call: 722, Return: 723, Exception Return: 724, After: 720, Exception After: 721 */ method call
                                                                                              __log__ ("TLE134", $TLE134, 670);
                                                                                              $TLE135 = $TLE134->equals ($expr);// /* , Call: 727, Return: 728, Exception Return: 729, After: 725, Exception After: 726 */ method call
                                                                                              __log__ ("TLE135", $TLE135, 675);
                                                                                              if ($TLE135){
                                                                                                  $TLE136 = $entry->getexpr ();// /* , Call: 733, Return: 734, Exception Return: 735, After: 731, Exception After: 732 */ method call
                                                                                                  __log__ ("TLE136", $TLE136, 681);
                                                                                                  return $TLE136; // 736
                                                                                              }
                                                                                              else {
                                                                                                   // "737 skip"
                                                                                              }
                                                                                              $entry = $entry->getnext ();// /* , Call: 740, Return: 741, Exception Return: 742, After: 738, Exception After: 739 */ method call
                                                                                              __log__ ("entry", $entry, 688);
                                                                                          }
                                                                                      }
                                                                                      else {
                                                                                           // "743 skip"
                                                                                      }
                                                                                      $TLE137 = null; // 744
                                                                                      __log__ ("TLE137", $TLE137, 694);
                                                                                      return $TLE137; // 745
                                                                                  }
}
class exprbuilder { // "746"
    protected $table;
    public function __construct ()/* Entry: 747, Exit: 748, Exception Exit: 749 */ 
                                                                                  {
                                                                                      $TLE138 = 8191; // 750
                                                                                      __log__ ("TLE138", $TLE138, 700);
                                                                                      $TLE139 = new hashtable ($TLE138);// /* , Call: 753, Return: 754, Exception Return: 755, After: 751, Exception After: 752 */ constructor call
                                                                                      __log__ ("TLE139", $TLE139, 701);
                                                                                      $TSNNt421 = $TLE139; // 756
                                                                                      __log__ ("TSNNt421", $TSNNt421, 706);
                                                                                      $this->table = $TSNNt421; // 757
                                                                                  }
    public function normalize ($expr)/* Entry: 758, Exit: 759, Exception Exit: 760 */ 
                                                                                     {
                                                                                         $TSNNt422 = $this->table; // 761
                                                                                         __log__ ("TSNNt422", $TSNNt422, 711);
                                                                                         $TLE140 = $TSNNt422->contains ($expr);// /* , Call: 764, Return: 765, Exception Return: 766, After: 762, Exception After: 763 */ method call
                                                                                         __log__ ("TLE140", $TLE140, 712);
                                                                                         $TLE141 = !$TLE140; // 767
                                                                                         __log__ ("TLE141", $TLE141, 717);
                                                                                         if ($TLE141){
                                                                                             $TSNNt423 = $this->table; // 769
                                                                                             __log__ ("TSNNt423", $TSNNt423, 719);
                                                                                             $TSNNt423->insert ($expr);// /* , Call: 772, Return: 773, Exception Return: 774, After: 770, Exception After: 771 */ method call
                                                                                         }
                                                                                         else {
                                                                                              // "775 skip"
                                                                                         }
                                                                                         $TSNNt424 = $this->table; // 776
                                                                                         __log__ ("TSNNt424", $TSNNt424, 726);
                                                                                         $TLE142 = $TSNNt424->lookup ($expr);// /* , Call: 779, Return: 780, Exception Return: 781, After: 777, Exception After: 778 */ method call
                                                                                         __log__ ("TLE142", $TLE142, 727);
                                                                                         return $TLE142; // 782
                                                                                     }
    public function createmin ($left, $right)/* Entry: 783, Exit: 784, Exception Exit: 785 */ 
                                                                                             {
                                                                                                 $TLE143 = new min ($left, $right);// /* , Call: 788, Return: 789, Exception Return: 790, After: 786, Exception After: 787 */ constructor call
                                                                                                 __log__ ("TLE143", $TLE143, 736);
                                                                                                 $TLE144 = $this->normalize ($TLE143);// /* , Call: 793, Return: 794, Exception Return: 795, After: 791, Exception After: 792 */ method call
                                                                                                 __log__ ("TLE144", $TLE144, 741);
                                                                                                 return $TLE144; // 796
                                                                                             }
    public function createplus ($left, $right)/* Entry: 797, Exit: 798, Exception Exit: 799 */ 
                                                                                              {
                                                                                                  $TLE145 = new plus ($left, $right);// /* , Call: 802, Return: 803, Exception Return: 804, After: 800, Exception After: 801 */ constructor call
                                                                                                  __log__ ("TLE145", $TLE145, 750);
                                                                                                  $TLE146 = $this->normalize ($TLE145);// /* , Call: 807, Return: 808, Exception Return: 809, After: 805, Exception After: 806 */ method call
                                                                                                  __log__ ("TLE146", $TLE146, 755);
                                                                                                  return $TLE146; // 810
                                                                                              }
    public function createmul ($left, $right)/* Entry: 811, Exit: 812, Exception Exit: 813 */ 
                                                                                             {
                                                                                                 $TLE147 = new mul ($left, $right);// /* , Call: 816, Return: 817, Exception Return: 818, After: 814, Exception After: 815 */ constructor call
                                                                                                 __log__ ("TLE147", $TLE147, 764);
                                                                                                 $TLE148 = $this->normalize ($TLE147);// /* , Call: 821, Return: 822, Exception Return: 823, After: 819, Exception After: 820 */ method call
                                                                                                 __log__ ("TLE148", $TLE148, 769);
                                                                                                 return $TLE148; // 824
                                                                                             }
    public function creatediv ($left, $right)/* Entry: 825, Exit: 826, Exception Exit: 827 */ 
                                                                                             {
                                                                                                 $TLE149 = new div ($left, $right);// /* , Call: 830, Return: 831, Exception Return: 832, After: 828, Exception After: 829 */ constructor call
                                                                                                 __log__ ("TLE149", $TLE149, 778);
                                                                                                 $TLE150 = $this->normalize ($TLE149);// /* , Call: 835, Return: 836, Exception Return: 837, After: 833, Exception After: 834 */ method call
                                                                                                 __log__ ("TLE150", $TLE150, 783);
                                                                                                 return $TLE150; // 838
                                                                                             }
    public function createvar ($var)/* Entry: 839, Exit: 840, Exception Exit: 841 */ 
                                                                                    {
                                                                                        $TLE151 = new variable ($var);// /* , Call: 844, Return: 845, Exception Return: 846, After: 842, Exception After: 843 */ constructor call
                                                                                        __log__ ("TLE151", $TLE151, 792);
                                                                                        $TLE152 = $this->normalize ($TLE151);// /* , Call: 849, Return: 850, Exception Return: 851, After: 847, Exception After: 848 */ method call
                                                                                        __log__ ("TLE152", $TLE152, 797);
                                                                                        return $TLE152; // 852
                                                                                    }
    public function createconst ($value)/* Entry: 853, Exit: 854, Exception Exit: 855 */ 
                                                                                        {
                                                                                            $TLE153 = new constant ($value);// /* , Call: 858, Return: 859, Exception Return: 860, After: 856, Exception After: 857 */ constructor call
                                                                                            __log__ ("TLE153", $TLE153, 806);
                                                                                            $TLE154 = $this->normalize ($TLE153);// /* , Call: 863, Return: 864, Exception Return: 865, After: 861, Exception After: 862 */ method call
                                                                                            __log__ ("TLE154", $TLE154, 811);
                                                                                            return $TLE154; // 866
                                                                                        }
    public function createfactor ($expr)/* Entry: 867, Exit: 868, Exception Exit: 869 */ 
                                                                                        {
                                                                                            $TLE155 = new factor ($expr);// /* , Call: 872, Return: 873, Exception Return: 874, After: 870, Exception After: 871 */ constructor call
                                                                                            __log__ ("TLE155", $TLE155, 820);
                                                                                            $TLE156 = $this->normalize ($TLE155);// /* , Call: 877, Return: 878, Exception Return: 879, After: 875, Exception After: 876 */ method call
                                                                                            __log__ ("TLE156", $TLE156, 825);
                                                                                            return $TLE156; // 880
                                                                                        }
}
class emptystackexception extends exception { // "881"
}
class stack { // "882"
    protected $table;
    protected $size;
    public function __construct ()/* Entry: 883, Exit: 884, Exception Exit: 885 */ 
                                                                                  {
                                                                                      $TLE157 = 0; // 886
                                                                                      __log__ ("TLE157", $TLE157, 836);
                                                                                      $TSNNt425 = $TLE157; // 887
                                                                                      __log__ ("TSNNt425", $TSNNt425, 837);
                                                                                      $this->size = $TSNNt425; // 888
                                                                                      unset ($TSa158); // 889
                                                                                      $TSa158 = (array) $TSa158; // 890
                                                                                      __log__ ("TSa158", $TSa158, 840);
                                                                                      $TSNNt426 = $TSa158; // 891
                                                                                      __log__ ("TSNNt426", $TSNNt426, 841);
                                                                                      $this->table = $TSNNt426; // 892
                                                                                  }
    public function pop ()/* Entry: 893, Exit: 894, Exception Exit: 895 */ 
                                                                          {
                                                                              $TLE159 = 0; // 896
                                                                              __log__ ("TLE159", $TLE159, 846);
                                                                              $TSNNt427 = $this->size; // 897
                                                                              __log__ ("TSNNt427", $TSNNt427, 847);
                                                                              $TLE160 = $TLE159 < $TSNNt427; // 898
                                                                              __log__ ("TLE160", $TLE160, 848);
                                                                              if ($TLE160){
                                                                                  $TLE161 = 1; // 900
                                                                                  __log__ ("TLE161", $TLE161, 850);
                                                                                  $TSNNt428 = $this->size; // 901
                                                                                  __log__ ("TSNNt428", $TSNNt428, 851);
                                                                                  $pos = $TSNNt428 - $TLE161; // 902
                                                                                  __log__ ("pos", $pos, 852);
                                                                                  $TSNNt429 = $this->size; // 903
                                                                                  __log__ ("TSNNt429", $TSNNt429, 853);
                                                                                  --$TSNNt429; // 904
                                                                                  __log__ ("TSNNt429", $TSNNt429, 854);
                                                                                  $this->size = $TSNNt429; // 905
                                                                                  $TSNNt430 = $this->table; // 906
                                                                                  __log__ ("TSNNt430", $TSNNt430, 856);
                                                                                  $TSNNi431 = $TSNNt430[$pos]; // 907
                                                                                  __log__ ("TSNNi431", $TSNNi431, 857);
                                                                                  return $TSNNi431; // 908
                                                                              }
                                                                              else {
                                                                                  $TLE162 = new emptystackexception ();// /* , Call: 911, Return: 912, Exception Return: 913, After: 909, Exception After: 910 */ constructor call
                                                                                  __log__ ("TLE162", $TLE162, 859);
                                                                                  throw $TLE162; // 914
                                                                              }
                                                                          }
    public function peek ()/* Entry: 915, Exit: 916, Exception Exit: 917 */ 
                                                                           {
                                                                               $TLE163 = 0; // 918
                                                                               __log__ ("TLE163", $TLE163, 868);
                                                                               $TSNNt432 = $this->size; // 919
                                                                               __log__ ("TSNNt432", $TSNNt432, 869);
                                                                               $TLE164 = $TLE163 < $TSNNt432; // 920
                                                                               __log__ ("TLE164", $TLE164, 870);
                                                                               if ($TLE164){
                                                                                   $TLE165 = 1; // 922
                                                                                   __log__ ("TLE165", $TLE165, 872);
                                                                                   $TSNNt433 = $this->size; // 923
                                                                                   __log__ ("TSNNt433", $TSNNt433, 873);
                                                                                   $TLE166 = $TSNNt433 - $TLE165; // 924
                                                                                   __log__ ("TLE166", $TLE166, 874);
                                                                                   $TSNNt434 = $this->table; // 925
                                                                                   __log__ ("TSNNt434", $TSNNt434, 875);
                                                                                   $TSNNi435 = $TSNNt434[$TLE166]; // 926
                                                                                   __log__ ("TSNNi435", $TSNNi435, 876);
                                                                                   return $TSNNi435; // 927
                                                                               }
                                                                               else {
                                                                                   $TLE167 = new emptystackexception ();// /* , Call: 930, Return: 931, Exception Return: 932, After: 928, Exception After: 929 */ constructor call
                                                                                   __log__ ("TLE167", $TLE167, 878);
                                                                                   throw $TLE167; // 933
                                                                               }
                                                                           }
    public function push ($value)/* Entry: 934, Exit: 935, Exception Exit: 936 */ 
                                                                                 {
                                                                                     $TSNNt436 = $this->size; // 937
                                                                                     __log__ ("TSNNt436", $TSNNt436, 887);
                                                                                     $TSNNt437 = $this->table; // 938
                                                                                     __log__ ("TSNNt437", $TSNNt437, 888);
                                                                                     $TSNNt437[$TSNNt436] = $value; // 939
                                                                                     ++$TSNNt436; // 940
                                                                                     __log__ ("TSNNt436", $TSNNt436, 890);
                                                                                     $this->table = $TSNNt437; // 941
                                                                                     $this->size = $TSNNt436; // 942
                                                                                 }
}
interface visitor {
    public function onmin ($expr)/* Entry: 943, Exit: 944, Exception Exit: 945 */ 
                                                                                 ;
    public function onplus ($expr)/* Entry: 946, Exit: 947, Exception Exit: 948 */ 
                                                                                  ;
    public function ondiv ($expr)/* Entry: 949, Exit: 950, Exception Exit: 951 */ 
                                                                                 ;
    public function onmul ($expr)/* Entry: 952, Exit: 953, Exception Exit: 954 */ 
                                                                                 ;
    public function onconst ($expr)/* Entry: 955, Exit: 956, Exception Exit: 957 */ 
                                                                                   ;
    public function onvar ($expr)/* Entry: 958, Exit: 959, Exception Exit: 960 */ 
                                                                                 ;
}
class prettyprintingvisitor implements visitor { // "961"
    public function onmin ($expr)/* Entry: 962, Exit: 963, Exception Exit: 964 */ 
                                                                                 {
                                                                                     $TLE168 = "("; // 965
                                                                                     __log__ ("TLE168", $TLE168, 915);
                                                                                     print ($TLE168); // "966native call"
                                                                                     $TLE169 = $expr->getleft ();// /* , Call: 969, Return: 970, Exception Return: 971, After: 967, Exception After: 968 */ method call
                                                                                     __log__ ("TLE169", $TLE169, 917);
                                                                                     $TLE170 = $TLE169->visit ($this);// /* , Call: 974, Return: 975, Exception Return: 976, After: 972, Exception After: 973 */ method call
                                                                                     __log__ ("TLE170", $TLE170, 922);
                                                                                     print ($TLE170); // "977native call"
                                                                                     $TLE171 = " - "; // 978
                                                                                     __log__ ("TLE171", $TLE171, 928);
                                                                                     print ($TLE171); // "979native call"
                                                                                     $TLE172 = $expr->getright ();// /* , Call: 982, Return: 983, Exception Return: 984, After: 980, Exception After: 981 */ method call
                                                                                     __log__ ("TLE172", $TLE172, 930);
                                                                                     $TLE173 = $TLE172->visit ($this);// /* , Call: 987, Return: 988, Exception Return: 989, After: 985, Exception After: 986 */ method call
                                                                                     __log__ ("TLE173", $TLE173, 935);
                                                                                     print ($TLE173); // "990native call"
                                                                                     $TLE174 = ")"; // 991
                                                                                     __log__ ("TLE174", $TLE174, 941);
                                                                                     print ($TLE174); // "992native call"
                                                                                 }
    public function onplus ($expr)/* Entry: 993, Exit: 994, Exception Exit: 995 */ 
                                                                                  {
                                                                                      $TLE175 = "("; // 996
                                                                                      __log__ ("TLE175", $TLE175, 946);
                                                                                      print ($TLE175); // "997native call"
                                                                                      $TLE176 = $expr->getleft ();// /* , Call: 1000, Return: 1001, Exception Return: 1002, After: 998, Exception After: 999 */ method call
                                                                                      __log__ ("TLE176", $TLE176, 948);
                                                                                      $TLE177 = $TLE176->visit ($this);// /* , Call: 1005, Return: 1006, Exception Return: 1007, After: 1003, Exception After: 1004 */ method call
                                                                                      __log__ ("TLE177", $TLE177, 953);
                                                                                      print ($TLE177); // "1008native call"
                                                                                      $TLE178 = " + "; // 1009
                                                                                      __log__ ("TLE178", $TLE178, 959);
                                                                                      print ($TLE178); // "1010native call"
                                                                                      $TLE179 = $expr->getright ();// /* , Call: 1013, Return: 1014, Exception Return: 1015, After: 1011, Exception After: 1012 */ method call
                                                                                      __log__ ("TLE179", $TLE179, 961);
                                                                                      $TLE180 = $TLE179->visit ($this);// /* , Call: 1018, Return: 1019, Exception Return: 1020, After: 1016, Exception After: 1017 */ method call
                                                                                      __log__ ("TLE180", $TLE180, 966);
                                                                                      print ($TLE180); // "1021native call"
                                                                                      $TLE181 = ")"; // 1022
                                                                                      __log__ ("TLE181", $TLE181, 972);
                                                                                      print ($TLE181); // "1023native call"
                                                                                  }
    public function ondiv ($expr)/* Entry: 1024, Exit: 1025, Exception Exit: 1026 */ 
                                                                                    {
                                                                                        $TLE182 = "("; // 1027
                                                                                        __log__ ("TLE182", $TLE182, 977);
                                                                                        print ($TLE182); // "1028native call"
                                                                                        $TLE183 = $expr->getleft ();// /* , Call: 1031, Return: 1032, Exception Return: 1033, After: 1029, Exception After: 1030 */ method call
                                                                                        __log__ ("TLE183", $TLE183, 979);
                                                                                        $TLE184 = $TLE183->visit ($this);// /* , Call: 1036, Return: 1037, Exception Return: 1038, After: 1034, Exception After: 1035 */ method call
                                                                                        __log__ ("TLE184", $TLE184, 984);
                                                                                        print ($TLE184); // "1039native call"
                                                                                        $TLE185 = " / "; // 1040
                                                                                        __log__ ("TLE185", $TLE185, 990);
                                                                                        print ($TLE185); // "1041native call"
                                                                                        $TLE186 = $expr->getright ();// /* , Call: 1044, Return: 1045, Exception Return: 1046, After: 1042, Exception After: 1043 */ method call
                                                                                        __log__ ("TLE186", $TLE186, 992);
                                                                                        $TLE187 = $TLE186->visit ($this);// /* , Call: 1049, Return: 1050, Exception Return: 1051, After: 1047, Exception After: 1048 */ method call
                                                                                        __log__ ("TLE187", $TLE187, 997);
                                                                                        print ($TLE187); // "1052native call"
                                                                                        $TLE188 = ")"; // 1053
                                                                                        __log__ ("TLE188", $TLE188, 1003);
                                                                                        print ($TLE188); // "1054native call"
                                                                                    }
    public function onmul ($expr)/* Entry: 1055, Exit: 1056, Exception Exit: 1057 */ 
                                                                                    {
                                                                                        $TLE189 = "("; // 1058
                                                                                        __log__ ("TLE189", $TLE189, 1008);
                                                                                        print ($TLE189); // "1059native call"
                                                                                        $TLE190 = $expr->getleft ();// /* , Call: 1062, Return: 1063, Exception Return: 1064, After: 1060, Exception After: 1061 */ method call
                                                                                        __log__ ("TLE190", $TLE190, 1010);
                                                                                        $TLE191 = $TLE190->visit ($this);// /* , Call: 1067, Return: 1068, Exception Return: 1069, After: 1065, Exception After: 1066 */ method call
                                                                                        __log__ ("TLE191", $TLE191, 1015);
                                                                                        print ($TLE191); // "1070native call"
                                                                                        $TLE192 = " * "; // 1071
                                                                                        __log__ ("TLE192", $TLE192, 1021);
                                                                                        print ($TLE192); // "1072native call"
                                                                                        $TLE193 = $expr->getright ();// /* , Call: 1075, Return: 1076, Exception Return: 1077, After: 1073, Exception After: 1074 */ method call
                                                                                        __log__ ("TLE193", $TLE193, 1023);
                                                                                        $TLE194 = $TLE193->visit ($this);// /* , Call: 1080, Return: 1081, Exception Return: 1082, After: 1078, Exception After: 1079 */ method call
                                                                                        __log__ ("TLE194", $TLE194, 1028);
                                                                                        print ($TLE194); // "1083native call"
                                                                                        $TLE195 = ")"; // 1084
                                                                                        __log__ ("TLE195", $TLE195, 1034);
                                                                                        print ($TLE195); // "1085native call"
                                                                                    }
    public function onfactor ($expr)/* Entry: 1086, Exit: 1087, Exception Exit: 1088 */ 
                                                                                       {
                                                                                           $TLE196 = "!"; // 1089
                                                                                           __log__ ("TLE196", $TLE196, 1039);
                                                                                           print ($TLE196); // "1090native call"
                                                                                           $TLE197 = $expr->getexpr ();// /* , Call: 1093, Return: 1094, Exception Return: 1095, After: 1091, Exception After: 1092 */ method call
                                                                                           __log__ ("TLE197", $TLE197, 1041);
                                                                                           $TLE198 = $TLE197->visit ($this);// /* , Call: 1098, Return: 1099, Exception Return: 1100, After: 1096, Exception After: 1097 */ method call
                                                                                           __log__ ("TLE198", $TLE198, 1046);
                                                                                           print ($TLE198); // "1101native call"
                                                                                       }
    public function onconst ($expr)/* Entry: 1102, Exit: 1103, Exception Exit: 1104 */ 
                                                                                      {
                                                                                          $TLE199 = $expr->getvalue ();// /* , Call: 1107, Return: 1108, Exception Return: 1109, After: 1105, Exception After: 1106 */ method call
                                                                                          __log__ ("TLE199", $TLE199, 1055);
                                                                                          print ($TLE199); // "1110native call"
                                                                                      }
    public function onvar ($expr)/* Entry: 1111, Exit: 1112, Exception Exit: 1113 */ 
                                                                                    {
                                                                                        $TLE200 = $expr->getvar ();// /* , Call: 1116, Return: 1117, Exception Return: 1118, After: 1114, Exception After: 1115 */ method call
                                                                                        __log__ ("TLE200", $TLE200, 1064);
                                                                                        print ($TLE200); // "1119native call"
                                                                                    }
}
class evaluationvisitor implements visitor { // "1120"
    protected $stack;
    protected $env;
    public function __construct (env $env)/* Entry: 1121, Exit: 1122, Exception Exit: 1123 */ 
                                                                                             {
                                                                                                 $TLE201 = new stack ();// /* , Call: 1126, Return: 1127, Exception Return: 1128, After: 1124, Exception After: 1125 */ constructor call
                                                                                                 __log__ ("TLE201", $TLE201, 1074);
                                                                                                 $TSNNt438 = $TLE201; // 1129
                                                                                                 __log__ ("TSNNt438", $TSNNt438, 1079);
                                                                                                 $this->stack = $TSNNt438; // 1130
                                                                                                 $TSNNt439 = $env; // 1131
                                                                                                 __log__ ("TSNNt439", $TSNNt439, 1081);
                                                                                                 $this->env = $TSNNt439; // 1132
                                                                                             }
    public function onmin ($expr)/* Entry: 1133, Exit: 1134, Exception Exit: 1135 */ 
                                                                                    {
                                                                                        $TLE202 = $expr->getleft ();// /* , Call: 1138, Return: 1139, Exception Return: 1140, After: 1136, Exception After: 1137 */ method call
                                                                                        __log__ ("TLE202", $TLE202, 1086);
                                                                                        $TLE202->visit ($this);// /* , Call: 1143, Return: 1144, Exception Return: 1145, After: 1141, Exception After: 1142 */ method call
                                                                                        $TLE203 = $expr->getright ();// /* , Call: 1148, Return: 1149, Exception Return: 1150, After: 1146, Exception After: 1147 */ method call
                                                                                        __log__ ("TLE203", $TLE203, 1096);
                                                                                        $TLE203->visit ($this);// /* , Call: 1153, Return: 1154, Exception Return: 1155, After: 1151, Exception After: 1152 */ method call
                                                                                        $TSNNt440 = $this->stack; // 1156
                                                                                        __log__ ("TSNNt440", $TSNNt440, 1106);
                                                                                        $right = $TSNNt440->pop ();// /* , Call: 1159, Return: 1160, Exception Return: 1161, After: 1157, Exception After: 1158 */ method call
                                                                                        __log__ ("right", $right, 1107);
                                                                                        $TSNNt441 = $this->stack; // 1162
                                                                                        __log__ ("TSNNt441", $TSNNt441, 1112);
                                                                                        $left = $TSNNt441->pop ();// /* , Call: 1165, Return: 1166, Exception Return: 1167, After: 1163, Exception After: 1164 */ method call
                                                                                        __log__ ("left", $left, 1113);
                                                                                        $TLE204 = $left - $right; // 1168
                                                                                        __log__ ("TLE204", $TLE204, 1118);
                                                                                        $TSNNt442 = $this->stack; // 1169
                                                                                        __log__ ("TSNNt442", $TSNNt442, 1119);
                                                                                        $TSNNt442->push ($TLE204);// /* , Call: 1172, Return: 1173, Exception Return: 1174, After: 1170, Exception After: 1171 */ method call
                                                                                    }
    public function onplus ($expr)/* Entry: 1175, Exit: 1176, Exception Exit: 1177 */ 
                                                                                     {
                                                                                         $TLE205 = $expr->getleft ();// /* , Call: 1180, Return: 1181, Exception Return: 1182, After: 1178, Exception After: 1179 */ method call
                                                                                         __log__ ("TLE205", $TLE205, 1128);
                                                                                         $TLE205->visit ($this);// /* , Call: 1185, Return: 1186, Exception Return: 1187, After: 1183, Exception After: 1184 */ method call
                                                                                         $TLE206 = $expr->getright ();// /* , Call: 1190, Return: 1191, Exception Return: 1192, After: 1188, Exception After: 1189 */ method call
                                                                                         __log__ ("TLE206", $TLE206, 1138);
                                                                                         $TLE206->visit ($this);// /* , Call: 1195, Return: 1196, Exception Return: 1197, After: 1193, Exception After: 1194 */ method call
                                                                                         $TSNNt443 = $this->stack; // 1198
                                                                                         __log__ ("TSNNt443", $TSNNt443, 1148);
                                                                                         $right = $TSNNt443->pop ();// /* , Call: 1201, Return: 1202, Exception Return: 1203, After: 1199, Exception After: 1200 */ method call
                                                                                         __log__ ("right", $right, 1149);
                                                                                         $TSNNt444 = $this->stack; // 1204
                                                                                         __log__ ("TSNNt444", $TSNNt444, 1154);
                                                                                         $left = $TSNNt444->pop ();// /* , Call: 1207, Return: 1208, Exception Return: 1209, After: 1205, Exception After: 1206 */ method call
                                                                                         __log__ ("left", $left, 1155);
                                                                                         $TLE207 = $left + $right; // 1210
                                                                                         __log__ ("TLE207", $TLE207, 1160);
                                                                                         $TSNNt445 = $this->stack; // 1211
                                                                                         __log__ ("TSNNt445", $TSNNt445, 1161);
                                                                                         $TSNNt445->push ($TLE207);// /* , Call: 1214, Return: 1215, Exception Return: 1216, After: 1212, Exception After: 1213 */ method call
                                                                                     }
    public function ondiv ($expr)/* Entry: 1217, Exit: 1218, Exception Exit: 1219 */ 
                                                                                    {
                                                                                        $TLE208 = $expr->getleft ();// /* , Call: 1222, Return: 1223, Exception Return: 1224, After: 1220, Exception After: 1221 */ method call
                                                                                        __log__ ("TLE208", $TLE208, 1170);
                                                                                        $TLE208->visit ($this);// /* , Call: 1227, Return: 1228, Exception Return: 1229, After: 1225, Exception After: 1226 */ method call
                                                                                        $TLE209 = $expr->getright ();// /* , Call: 1232, Return: 1233, Exception Return: 1234, After: 1230, Exception After: 1231 */ method call
                                                                                        __log__ ("TLE209", $TLE209, 1180);
                                                                                        $TLE209->visit ($this);// /* , Call: 1237, Return: 1238, Exception Return: 1239, After: 1235, Exception After: 1236 */ method call
                                                                                        $TSNNt446 = $this->stack; // 1240
                                                                                        __log__ ("TSNNt446", $TSNNt446, 1190);
                                                                                        $right = $TSNNt446->pop ();// /* , Call: 1243, Return: 1244, Exception Return: 1245, After: 1241, Exception After: 1242 */ method call
                                                                                        __log__ ("right", $right, 1191);
                                                                                        $TSNNt447 = $this->stack; // 1246
                                                                                        __log__ ("TSNNt447", $TSNNt447, 1196);
                                                                                        $left = $TSNNt447->pop ();// /* , Call: 1249, Return: 1250, Exception Return: 1251, After: 1247, Exception After: 1248 */ method call
                                                                                        __log__ ("left", $left, 1197);
                                                                                        $TLE210 = $left / $right; // 1252
                                                                                        __log__ ("TLE210", $TLE210, 1202);
                                                                                        $TSNNt448 = $this->stack; // 1253
                                                                                        __log__ ("TSNNt448", $TSNNt448, 1203);
                                                                                        $TSNNt448->push ($TLE210);// /* , Call: 1256, Return: 1257, Exception Return: 1258, After: 1254, Exception After: 1255 */ method call
                                                                                    }
    public function onmul ($expr)/* Entry: 1259, Exit: 1260, Exception Exit: 1261 */ 
                                                                                    {
                                                                                        $TLE211 = $expr->getleft ();// /* , Call: 1264, Return: 1265, Exception Return: 1266, After: 1262, Exception After: 1263 */ method call
                                                                                        __log__ ("TLE211", $TLE211, 1212);
                                                                                        $TLE211->visit ($this);// /* , Call: 1269, Return: 1270, Exception Return: 1271, After: 1267, Exception After: 1268 */ method call
                                                                                        $TLE212 = $expr->getright ();// /* , Call: 1274, Return: 1275, Exception Return: 1276, After: 1272, Exception After: 1273 */ method call
                                                                                        __log__ ("TLE212", $TLE212, 1222);
                                                                                        $TLE212->visit ($this);// /* , Call: 1279, Return: 1280, Exception Return: 1281, After: 1277, Exception After: 1278 */ method call
                                                                                        $TSNNt449 = $this->stack; // 1282
                                                                                        __log__ ("TSNNt449", $TSNNt449, 1232);
                                                                                        $right = $TSNNt449->pop ();// /* , Call: 1285, Return: 1286, Exception Return: 1287, After: 1283, Exception After: 1284 */ method call
                                                                                        __log__ ("right", $right, 1233);
                                                                                        $TSNNt450 = $this->stack; // 1288
                                                                                        __log__ ("TSNNt450", $TSNNt450, 1238);
                                                                                        $left = $TSNNt450->pop ();// /* , Call: 1291, Return: 1292, Exception Return: 1293, After: 1289, Exception After: 1290 */ method call
                                                                                        __log__ ("left", $left, 1239);
                                                                                        $TLE213 = $left * $right; // 1294
                                                                                        __log__ ("TLE213", $TLE213, 1244);
                                                                                        $TSNNt451 = $this->stack; // 1295
                                                                                        __log__ ("TSNNt451", $TSNNt451, 1245);
                                                                                        $TSNNt451->push ($TLE213);// /* , Call: 1298, Return: 1299, Exception Return: 1300, After: 1296, Exception After: 1297 */ method call
                                                                                    }
    public function onfactor ($expr)/* Entry: 1301, Exit: 1302, Exception Exit: 1303 */ 
                                                                                       {
                                                                                           $TLE214 = $expr->getexpr ();// /* , Call: 1306, Return: 1307, Exception Return: 1308, After: 1304, Exception After: 1305 */ method call
                                                                                           __log__ ("TLE214", $TLE214, 1254);
                                                                                           $TLE214->visit ($this);// /* , Call: 1311, Return: 1312, Exception Return: 1313, After: 1309, Exception After: 1310 */ method call
                                                                                           $TSNNt452 = $this->stack; // 1314
                                                                                           __log__ ("TSNNt452", $TSNNt452, 1264);
                                                                                           $n = $TSNNt452->pop ();// /* , Call: 1317, Return: 1318, Exception Return: 1319, After: 1315, Exception After: 1316 */ method call
                                                                                           __log__ ("n", $n, 1265);
                                                                                           $factor = 1; // 1320
                                                                                           __log__ ("factor", $factor, 1270);
                                                                                           while (True){
                                                                                               $TLE215 = 1; // 1322
                                                                                               __log__ ("TLE215", $TLE215, 1272);
                                                                                               $TLE216 = $TLE215 < $n; // 1323
                                                                                               __log__ ("TLE216", $TLE216, 1273);
                                                                                               $TLE217 = !$TLE216; // 1324
                                                                                               __log__ ("TLE217", $TLE217, 1274);
                                                                                               if ($TLE217){
                                                                                                   break; // 1326
                                                                                               }
                                                                                               else {
                                                                                                    // "1327 skip"
                                                                                               }
                                                                                               $factor = $factor * $n; // 1328
                                                                                               __log__ ("factor", $factor, 1278);
                                                                                               --$n; // 1329
                                                                                               __log__ ("n", $n, 1279);
                                                                                           }
                                                                                           $TSNNt453 = $this->stack; // 1330
                                                                                           __log__ ("TSNNt453", $TSNNt453, 1280);
                                                                                           $TSNNt453->push ($factor);// /* , Call: 1333, Return: 1334, Exception Return: 1335, After: 1331, Exception After: 1332 */ method call
                                                                                       }
    public function onvar ($expr)/* Entry: 1336, Exit: 1337, Exception Exit: 1338 */ 
                                                                                    {
                                                                                        $TLE218 = $expr->getvar ();// /* , Call: 1341, Return: 1342, Exception Return: 1343, After: 1339, Exception After: 1340 */ method call
                                                                                        __log__ ("TLE218", $TLE218, 1289);
                                                                                        $TSNNt454 = $this->env; // 1344
                                                                                        __log__ ("TSNNt454", $TSNNt454, 1294);
                                                                                        $TLE219 = $TSNNt454->lookup ($TLE218);// /* , Call: 1347, Return: 1348, Exception Return: 1349, After: 1345, Exception After: 1346 */ method call
                                                                                        __log__ ("TLE219", $TLE219, 1295);
                                                                                        $TSNNt455 = $this->stack; // 1350
                                                                                        __log__ ("TSNNt455", $TSNNt455, 1300);
                                                                                        $TSNNt455->push ($TLE219);// /* , Call: 1353, Return: 1354, Exception Return: 1355, After: 1351, Exception After: 1352 */ method call
                                                                                    }
    public function onconst ($expr)/* Entry: 1356, Exit: 1357, Exception Exit: 1358 */ 
                                                                                      {
                                                                                          $TLE220 = $expr->getvalue ();// /* , Call: 1361, Return: 1362, Exception Return: 1363, After: 1359, Exception After: 1360 */ method call
                                                                                          __log__ ("TLE220", $TLE220, 1309);
                                                                                          $TSNNt456 = $this->stack; // 1364
                                                                                          __log__ ("TSNNt456", $TSNNt456, 1314);
                                                                                          $TSNNt456->push ($TLE220);// /* , Call: 1367, Return: 1368, Exception Return: 1369, After: 1365, Exception After: 1366 */ method call
                                                                                      }
    public function getresult ()/* Entry: 1370, Exit: 1371, Exception Exit: 1372 */ 
                                                                                   {
                                                                                       $TSNNt457 = $this->stack; // 1373
                                                                                       __log__ ("TSNNt457", $TSNNt457, 1323);
                                                                                       $TLE221 = $TSNNt457->peek ();// /* , Call: 1376, Return: 1377, Exception Return: 1378, After: 1374, Exception After: 1375 */ method call
                                                                                       __log__ ("TLE221", $TLE221, 1324);
                                                                                       return $TLE221; // 1379
                                                                                   }
}
class token { // "1380"
    const MIN = 1;
    const PLUS = 2;
    const DIV = 3;
    const MUL = 4;
    const LEFTPARENT = 5;
    const RIGHTPARENT = 6;
    const VARIABLE = 7;
    const CONSTANT = 9;
    const EXCLAMATIONMARK = 10;
    const EOF = 11;
    protected $kind;
    protected $value;
    public function __construct ($kind, $value)/* Entry: 1381, Exit: 1382, Exception Exit: 1383 */ 
                                                                                                  {
                                                                                                      $TSNNt458 = $kind; // 1384
                                                                                                      __log__ ("TSNNt458", $TSNNt458, 1334);
                                                                                                      $this->kind = $TSNNt458; // 1385
                                                                                                      $TSNNt459 = $value; // 1386
                                                                                                      __log__ ("TSNNt459", $TSNNt459, 1336);
                                                                                                      $this->value = $TSNNt459; // 1387
                                                                                                  }
    public function getkind ()/* Entry: 1388, Exit: 1389, Exception Exit: 1390 */ 
                                                                                 {
                                                                                     $TSNNt460 = $this->kind; // 1391
                                                                                     __log__ ("TSNNt460", $TSNNt460, 1341);
                                                                                     return $TSNNt460; // 1392
                                                                                 }
    public function getvalue ()/* Entry: 1393, Exit: 1394, Exception Exit: 1395 */ 
                                                                                  {
                                                                                      $TSNNt461 = $this->value; // 1396
                                                                                      __log__ ("TSNNt461", $TSNNt461, 1346);
                                                                                      return $TSNNt461; // 1397
                                                                                  }
}
class tokenizeexception extends exception { // "1398"
}
class tokenizer { // "1399"
    protected $pos;
    protected $inp;
    protected $current;
    public function __construct ($inp)/* Entry: 1400, Exit: 1401, Exception Exit: 1402 */ 
                                                                                         {
                                                                                             $TSNNt462 = $inp; // 1403
                                                                                             __log__ ("TSNNt462", $TSNNt462, 1353);
                                                                                             $this->inp = $TSNNt462; // 1404
                                                                                             $TLE222 = -1; // 1405
                                                                                             __log__ ("TLE222", $TLE222, 1355);
                                                                                             $TSNNt463 = $TLE222; // 1406
                                                                                             __log__ ("TSNNt463", $TSNNt463, 1356);
                                                                                             $this->pos = $TSNNt463; // 1407
                                                                                             $this->next ();// /* , Call: 1410, Return: 1411, Exception Return: 1412, After: 1408, Exception After: 1409 */ method call
                                                                                         }
    protected function lookahead ()/* Entry: 1413, Exit: 1414, Exception Exit: 1415 */ 
                                                                                      {
                                                                                          $TLE223 = 1; // 1416
                                                                                          __log__ ("TLE223", $TLE223, 1366);
                                                                                          $TSNNt464 = $this->pos; // 1417
                                                                                          __log__ ("TSNNt464", $TSNNt464, 1367);
                                                                                          $TLE224 = $TSNNt464 + $TLE223; // 1418
                                                                                          __log__ ("TLE224", $TLE224, 1368);
                                                                                          $TLE225 = 1; // 1419
                                                                                          __log__ ("TLE225", $TLE225, 1369);
                                                                                          $TSNNt465 = $this->inp; // 1420
                                                                                          __log__ ("TSNNt465", $TSNNt465, 1370);
                                                                                          $TLE226 = substr ($TSNNt465, $TLE224, $TLE225); // "1421native call"
                                                                                          __log__ ("TLE226", $TLE226, 1371);
                                                                                          return $TLE226; // 1422
                                                                                      }
    protected function accept ()/* Entry: 1423, Exit: 1424, Exception Exit: 1425 */ 
                                                                                   {
                                                                                       $TSNNt466 = $this->pos; // 1426
                                                                                       __log__ ("TSNNt466", $TSNNt466, 1376);
                                                                                       ++$TSNNt466; // 1427
                                                                                       __log__ ("TSNNt466", $TSNNt466, 1377);
                                                                                       $this->pos = $TSNNt466; // 1428
                                                                                   }
    protected function isalpha ($char)/* Entry: 1429, Exit: 1430, Exception Exit: 1431 */ 
                                                                                         {
                                                                                             $TLE227 = ctype_alpha ($char); // "1432native call"
                                                                                             __log__ ("TLE227", $TLE227, 1382);
                                                                                             return $TLE227; // 1433
                                                                                         }
    protected function isnumeric ($char)/* Entry: 1434, Exit: 1435, Exception Exit: 1436 */ 
                                                                                           {
                                                                                               $TLE228 = ctype_digit ($char); // "1437native call"
                                                                                               __log__ ("TLE228", $TLE228, 1387);
                                                                                               return $TLE228; // 1438
                                                                                           }
    protected function parse ()/* Entry: 1439, Exit: 1440, Exception Exit: 1441 */ 
                                                                                  {
                                                                                      $char = $this->lookahead ();// /* , Call: 1444, Return: 1445, Exception Return: 1446, After: 1442, Exception After: 1443 */ method call
                                                                                      __log__ ("char", $char, 1392);
                                                                                      $TEL0 = $char; // 1447
                                                                                      __log__ ("TEL0", $TEL0, 1397);
                                                                                      $TSM1 = false; // 1448
                                                                                      __log__ ("TSM1", $TSM1, 1398);
                                                                                      $ElcfPD10 = true; // 1449
                                                                                      __log__ ("ElcfPD10", $ElcfPD10, 1399);
                                                                                      while (True){
                                                                                          if ($ElcfPD10){
                                                                                              $ElcfPD10 = false; // 1452
                                                                                              __log__ ("ElcfPD10", $ElcfPD10, 1402);
                                                                                          }
                                                                                          else {
                                                                                              $TLE229 = false; // 1453
                                                                                              __log__ ("TLE229", $TLE229, 1403);
                                                                                              $TLE230 = !$TLE229; // 1454
                                                                                              __log__ ("TLE230", $TLE230, 1404);
                                                                                              if ($TLE230){
                                                                                                  break; // 1456
                                                                                              }
                                                                                              else {
                                                                                                   // "1457 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1459 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TL2 = null; // 1460
                                                                                              __log__ ("TL2", $TL2, 1410);
                                                                                              $TLE231 = $TEL0 == $TL2; // 1461
                                                                                              __log__ ("TLE231", $TLE231, 1411);
                                                                                              if ($TLE231){
                                                                                                  $TSM1 = true; // 1463
                                                                                                  __log__ ("TSM1", $TSM1, 1413);
                                                                                              }
                                                                                              else {
                                                                                                   // "1464 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $TLE232 = token::EOF; // 1466
                                                                                              __log__ ("TLE232", $TLE232, 1416);
                                                                                              $TLE233 = new token ($TLE232, $char);// /* , Call: 1469, Return: 1470, Exception Return: 1471, After: 1467, Exception After: 1468 */ constructor call
                                                                                              __log__ ("TLE233", $TLE233, 1417);
                                                                                              return $TLE233; // 1472
                                                                                          }
                                                                                          else {
                                                                                               // "1473 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1475 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TL3 = "("; // 1476
                                                                                              __log__ ("TL3", $TL3, 1426);
                                                                                              $TLE234 = $TEL0 == $TL3; // 1477
                                                                                              __log__ ("TLE234", $TLE234, 1427);
                                                                                              if ($TLE234){
                                                                                                  $TSM1 = true; // 1479
                                                                                                  __log__ ("TSM1", $TSM1, 1429);
                                                                                              }
                                                                                              else {
                                                                                                   // "1480 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $this->accept ();// /* , Call: 1484, Return: 1485, Exception Return: 1486, After: 1482, Exception After: 1483 */ method call
                                                                                              $TLE235 = token::LEFTPARENT; // 1487
                                                                                              __log__ ("TLE235", $TLE235, 1437);
                                                                                              $TLE236 = new token ($TLE235, $char);// /* , Call: 1490, Return: 1491, Exception Return: 1492, After: 1488, Exception After: 1489 */ constructor call
                                                                                              __log__ ("TLE236", $TLE236, 1438);
                                                                                              return $TLE236; // 1493
                                                                                          }
                                                                                          else {
                                                                                               // "1494 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1496 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TL4 = ")"; // 1497
                                                                                              __log__ ("TL4", $TL4, 1447);
                                                                                              $TLE237 = $TEL0 == $TL4; // 1498
                                                                                              __log__ ("TLE237", $TLE237, 1448);
                                                                                              if ($TLE237){
                                                                                                  $TSM1 = true; // 1500
                                                                                                  __log__ ("TSM1", $TSM1, 1450);
                                                                                              }
                                                                                              else {
                                                                                                   // "1501 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $this->accept ();// /* , Call: 1505, Return: 1506, Exception Return: 1507, After: 1503, Exception After: 1504 */ method call
                                                                                              $TLE238 = token::RIGHTPARENT; // 1508
                                                                                              __log__ ("TLE238", $TLE238, 1458);
                                                                                              $TLE239 = new token ($TLE238, $char);// /* , Call: 1511, Return: 1512, Exception Return: 1513, After: 1509, Exception After: 1510 */ constructor call
                                                                                              __log__ ("TLE239", $TLE239, 1459);
                                                                                              return $TLE239; // 1514
                                                                                          }
                                                                                          else {
                                                                                               // "1515 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1517 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TL5 = "+"; // 1518
                                                                                              __log__ ("TL5", $TL5, 1468);
                                                                                              $TLE240 = $TEL0 == $TL5; // 1519
                                                                                              __log__ ("TLE240", $TLE240, 1469);
                                                                                              if ($TLE240){
                                                                                                  $TSM1 = true; // 1521
                                                                                                  __log__ ("TSM1", $TSM1, 1471);
                                                                                              }
                                                                                              else {
                                                                                                   // "1522 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $this->accept ();// /* , Call: 1526, Return: 1527, Exception Return: 1528, After: 1524, Exception After: 1525 */ method call
                                                                                              $TLE241 = token::PLUS; // 1529
                                                                                              __log__ ("TLE241", $TLE241, 1479);
                                                                                              $TLE242 = new token ($TLE241, $char);// /* , Call: 1532, Return: 1533, Exception Return: 1534, After: 1530, Exception After: 1531 */ constructor call
                                                                                              __log__ ("TLE242", $TLE242, 1480);
                                                                                              return $TLE242; // 1535
                                                                                          }
                                                                                          else {
                                                                                               // "1536 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1538 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TL6 = "-"; // 1539
                                                                                              __log__ ("TL6", $TL6, 1489);
                                                                                              $TLE243 = $TEL0 == $TL6; // 1540
                                                                                              __log__ ("TLE243", $TLE243, 1490);
                                                                                              if ($TLE243){
                                                                                                  $TSM1 = true; // 1542
                                                                                                  __log__ ("TSM1", $TSM1, 1492);
                                                                                              }
                                                                                              else {
                                                                                                   // "1543 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $this->accept ();// /* , Call: 1547, Return: 1548, Exception Return: 1549, After: 1545, Exception After: 1546 */ method call
                                                                                              $TLE244 = token::MIN; // 1550
                                                                                              __log__ ("TLE244", $TLE244, 1500);
                                                                                              $TLE245 = new token ($TLE244, $char);// /* , Call: 1553, Return: 1554, Exception Return: 1555, After: 1551, Exception After: 1552 */ constructor call
                                                                                              __log__ ("TLE245", $TLE245, 1501);
                                                                                              return $TLE245; // 1556
                                                                                          }
                                                                                          else {
                                                                                               // "1557 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1559 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TL7 = "*"; // 1560
                                                                                              __log__ ("TL7", $TL7, 1510);
                                                                                              $TLE246 = $TEL0 == $TL7; // 1561
                                                                                              __log__ ("TLE246", $TLE246, 1511);
                                                                                              if ($TLE246){
                                                                                                  $TSM1 = true; // 1563
                                                                                                  __log__ ("TSM1", $TSM1, 1513);
                                                                                              }
                                                                                              else {
                                                                                                   // "1564 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $this->accept ();// /* , Call: 1568, Return: 1569, Exception Return: 1570, After: 1566, Exception After: 1567 */ method call
                                                                                              $TLE247 = token::MUL; // 1571
                                                                                              __log__ ("TLE247", $TLE247, 1521);
                                                                                              $TLE248 = new token ($TLE247, $char);// /* , Call: 1574, Return: 1575, Exception Return: 1576, After: 1572, Exception After: 1573 */ constructor call
                                                                                              __log__ ("TLE248", $TLE248, 1522);
                                                                                              return $TLE248; // 1577
                                                                                          }
                                                                                          else {
                                                                                               // "1578 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1580 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TL8 = "/"; // 1581
                                                                                              __log__ ("TL8", $TL8, 1531);
                                                                                              $TLE249 = $TEL0 == $TL8; // 1582
                                                                                              __log__ ("TLE249", $TLE249, 1532);
                                                                                              if ($TLE249){
                                                                                                  $TSM1 = true; // 1584
                                                                                                  __log__ ("TSM1", $TSM1, 1534);
                                                                                              }
                                                                                              else {
                                                                                                   // "1585 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $this->accept ();// /* , Call: 1589, Return: 1590, Exception Return: 1591, After: 1587, Exception After: 1588 */ method call
                                                                                              $TLE250 = token::DIV; // 1592
                                                                                              __log__ ("TLE250", $TLE250, 1542);
                                                                                              $TLE251 = new token ($TLE250, $char);// /* , Call: 1595, Return: 1596, Exception Return: 1597, After: 1593, Exception After: 1594 */ constructor call
                                                                                              __log__ ("TLE251", $TLE251, 1543);
                                                                                              return $TLE251; // 1598
                                                                                          }
                                                                                          else {
                                                                                               // "1599 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1601 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TL9 = "!"; // 1602
                                                                                              __log__ ("TL9", $TL9, 1552);
                                                                                              $TLE252 = $TEL0 == $TL9; // 1603
                                                                                              __log__ ("TLE252", $TLE252, 1553);
                                                                                              if ($TLE252){
                                                                                                  $TSM1 = true; // 1605
                                                                                                  __log__ ("TSM1", $TSM1, 1555);
                                                                                              }
                                                                                              else {
                                                                                                   // "1606 skip"
                                                                                              }
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $this->accept ();// /* , Call: 1610, Return: 1611, Exception Return: 1612, After: 1608, Exception After: 1609 */ method call
                                                                                              $TLE253 = token::EXCLAMATIONMARK; // 1613
                                                                                              __log__ ("TLE253", $TLE253, 1563);
                                                                                              $TLE254 = new token ($TLE253, $char);// /* , Call: 1616, Return: 1617, Exception Return: 1618, After: 1614, Exception After: 1615 */ constructor call
                                                                                              __log__ ("TLE254", $TLE254, 1564);
                                                                                              return $TLE254; // 1619
                                                                                          }
                                                                                          else {
                                                                                               // "1620 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                              $TLE255 = $this->isalpha ($char);// /* , Call: 1624, Return: 1625, Exception Return: 1626, After: 1622, Exception After: 1623 */ method call
                                                                                              __log__ ("TLE255", $TLE255, 1572);
                                                                                              if ($TLE255){
                                                                                                  $ident = ''; // 1628
                                                                                                  __log__ ("ident", $ident, 1578);
                                                                                                  while (True){
                                                                                                      $TLE256 = $this->isalpha ($char);// /* , Call: 1632, Return: 1633, Exception Return: 1634, After: 1630, Exception After: 1631 */ method call
                                                                                                      __log__ ("TLE256", $TLE256, 1580);
                                                                                                      $TLE257 = !$TLE256; // 1635
                                                                                                      __log__ ("TLE257", $TLE257, 1585);
                                                                                                      if ($TLE257){
                                                                                                          break; // 1637
                                                                                                      }
                                                                                                      else {
                                                                                                           // "1638 skip"
                                                                                                      }
                                                                                                      $this->accept ();// /* , Call: 1641, Return: 1642, Exception Return: 1643, After: 1639, Exception After: 1640 */ method call
                                                                                                      $ident = $ident . $char; // 1644
                                                                                                      __log__ ("ident", $ident, 1594);
                                                                                                      $char = $this->lookahead ();// /* , Call: 1647, Return: 1648, Exception Return: 1649, After: 1645, Exception After: 1646 */ method call
                                                                                                      __log__ ("char", $char, 1595);
                                                                                                  }
                                                                                                  $TLE258 = token::VARIABLE; // 1650
                                                                                                  __log__ ("TLE258", $TLE258, 1600);
                                                                                                  $TLE259 = new token ($TLE258, $ident);// /* , Call: 1653, Return: 1654, Exception Return: 1655, After: 1651, Exception After: 1652 */ constructor call
                                                                                                  __log__ ("TLE259", $TLE259, 1601);
                                                                                                  return $TLE259; // 1656
                                                                                              }
                                                                                              else {
                                                                                                   // "1657 skip"
                                                                                              }
                                                                                              $TLE260 = $this->isnumeric ($char);// /* , Call: 1660, Return: 1661, Exception Return: 1662, After: 1658, Exception After: 1659 */ method call
                                                                                              __log__ ("TLE260", $TLE260, 1608);
                                                                                              if ($TLE260){
                                                                                                  $value = ''; // 1664
                                                                                                  __log__ ("value", $value, 1614);
                                                                                                  while (True){
                                                                                                      $TLE261 = $this->isnumeric ($char);// /* , Call: 1668, Return: 1669, Exception Return: 1670, After: 1666, Exception After: 1667 */ method call
                                                                                                      __log__ ("TLE261", $TLE261, 1616);
                                                                                                      $TLE262 = !$TLE261; // 1671
                                                                                                      __log__ ("TLE262", $TLE262, 1621);
                                                                                                      if ($TLE262){
                                                                                                          break; // 1673
                                                                                                      }
                                                                                                      else {
                                                                                                           // "1674 skip"
                                                                                                      }
                                                                                                      $this->accept ();// /* , Call: 1677, Return: 1678, Exception Return: 1679, After: 1675, Exception After: 1676 */ method call
                                                                                                      $value = $value . $char; // 1680
                                                                                                      __log__ ("value", $value, 1630);
                                                                                                      $char = $this->lookahead ();// /* , Call: 1683, Return: 1684, Exception Return: 1685, After: 1681, Exception After: 1682 */ method call
                                                                                                      __log__ ("char", $char, 1631);
                                                                                                  }
                                                                                                  $TLE263 = token::CONSTANT; // 1686
                                                                                                  __log__ ("TLE263", $TLE263, 1636);
                                                                                                  $TLE264 = (int) $value; // 1687
                                                                                                  __log__ ("TLE264", $TLE264, 1637);
                                                                                                  $TLE265 = new token ($TLE263, $TLE264);// /* , Call: 1690, Return: 1691, Exception Return: 1692, After: 1688, Exception After: 1689 */ constructor call
                                                                                                  __log__ ("TLE265", $TLE265, 1638);
                                                                                                  return $TLE265; // 1693
                                                                                              }
                                                                                              else {
                                                                                                   // "1694 skip"
                                                                                              }
                                                                                              $TLE266 = "Unexpected character: "; // 1695
                                                                                              __log__ ("TLE266", $TLE266, 1645);
                                                                                              $TSNNt467 = $this->pos; // 1696
                                                                                              __log__ ("TSNNt467", $TSNNt467, 1646);
                                                                                              $TLE267 = $TLE266 . $TSNNt467; // 1697
                                                                                              __log__ ("TLE267", $TLE267, 1647);
                                                                                              $TLE268 = new tokenizeexception ($TLE267);// /* , Call: 1700, Return: 1701, Exception Return: 1702, After: 1698, Exception After: 1699 */ constructor call
                                                                                              __log__ ("TLE268", $TLE268, 1648);
                                                                                              throw $TLE268; // 1703
                                                                                          }
                                                                                          else {
                                                                                               // "1704 skip"
                                                                                          }
                                                                                          if ($TSM1){
                                                                                               // "1706 skip"
                                                                                          }
                                                                                          else {
                                                                                              $TLE269 = $this->isalpha ($char);// /* , Call: 1709, Return: 1710, Exception Return: 1711, After: 1707, Exception After: 1708 */ method call
                                                                                              __log__ ("TLE269", $TLE269, 1657);
                                                                                              if ($TLE269){
                                                                                                  $ident = ''; // 1713
                                                                                                  __log__ ("ident", $ident, 1663);
                                                                                                  while (True){
                                                                                                      $TLE270 = $this->isalpha ($char);// /* , Call: 1717, Return: 1718, Exception Return: 1719, After: 1715, Exception After: 1716 */ method call
                                                                                                      __log__ ("TLE270", $TLE270, 1665);
                                                                                                      $TLE271 = !$TLE270; // 1720
                                                                                                      __log__ ("TLE271", $TLE271, 1670);
                                                                                                      if ($TLE271){
                                                                                                          break; // 1722
                                                                                                      }
                                                                                                      else {
                                                                                                           // "1723 skip"
                                                                                                      }
                                                                                                      $this->accept ();// /* , Call: 1726, Return: 1727, Exception Return: 1728, After: 1724, Exception After: 1725 */ method call
                                                                                                      $ident = $ident . $char; // 1729
                                                                                                      __log__ ("ident", $ident, 1679);
                                                                                                      $char = $this->lookahead ();// /* , Call: 1732, Return: 1733, Exception Return: 1734, After: 1730, Exception After: 1731 */ method call
                                                                                                      __log__ ("char", $char, 1680);
                                                                                                  }
                                                                                                  $TLE272 = token::VARIABLE; // 1735
                                                                                                  __log__ ("TLE272", $TLE272, 1685);
                                                                                                  $TLE273 = new token ($TLE272, $ident);// /* , Call: 1738, Return: 1739, Exception Return: 1740, After: 1736, Exception After: 1737 */ constructor call
                                                                                                  __log__ ("TLE273", $TLE273, 1686);
                                                                                                  return $TLE273; // 1741
                                                                                              }
                                                                                              else {
                                                                                                   // "1742 skip"
                                                                                              }
                                                                                              $TLE274 = $this->isnumeric ($char);// /* , Call: 1745, Return: 1746, Exception Return: 1747, After: 1743, Exception After: 1744 */ method call
                                                                                              __log__ ("TLE274", $TLE274, 1693);
                                                                                              if ($TLE274){
                                                                                                  $value = ''; // 1749
                                                                                                  __log__ ("value", $value, 1699);
                                                                                                  while (True){
                                                                                                      $TLE275 = $this->isnumeric ($char);// /* , Call: 1753, Return: 1754, Exception Return: 1755, After: 1751, Exception After: 1752 */ method call
                                                                                                      __log__ ("TLE275", $TLE275, 1701);
                                                                                                      $TLE276 = !$TLE275; // 1756
                                                                                                      __log__ ("TLE276", $TLE276, 1706);
                                                                                                      if ($TLE276){
                                                                                                          break; // 1758
                                                                                                      }
                                                                                                      else {
                                                                                                           // "1759 skip"
                                                                                                      }
                                                                                                      $this->accept ();// /* , Call: 1762, Return: 1763, Exception Return: 1764, After: 1760, Exception After: 1761 */ method call
                                                                                                      $value = $value . $char; // 1765
                                                                                                      __log__ ("value", $value, 1715);
                                                                                                      $char = $this->lookahead ();// /* , Call: 1768, Return: 1769, Exception Return: 1770, After: 1766, Exception After: 1767 */ method call
                                                                                                      __log__ ("char", $char, 1716);
                                                                                                  }
                                                                                                  $TLE277 = token::CONSTANT; // 1771
                                                                                                  __log__ ("TLE277", $TLE277, 1721);
                                                                                                  $TLE278 = (int) $value; // 1772
                                                                                                  __log__ ("TLE278", $TLE278, 1722);
                                                                                                  $TLE279 = new token ($TLE277, $TLE278);// /* , Call: 1775, Return: 1776, Exception Return: 1777, After: 1773, Exception After: 1774 */ constructor call
                                                                                                  __log__ ("TLE279", $TLE279, 1723);
                                                                                                  return $TLE279; // 1778
                                                                                              }
                                                                                              else {
                                                                                                   // "1779 skip"
                                                                                              }
                                                                                              $TLE280 = "Unexpected character: "; // 1780
                                                                                              __log__ ("TLE280", $TLE280, 1730);
                                                                                              $TSNNt468 = $this->pos; // 1781
                                                                                              __log__ ("TSNNt468", $TSNNt468, 1731);
                                                                                              $TLE281 = $TLE280 . $TSNNt468; // 1782
                                                                                              __log__ ("TLE281", $TLE281, 1732);
                                                                                              $TLE282 = new tokenizeexception ($TLE281);// /* , Call: 1785, Return: 1786, Exception Return: 1787, After: 1783, Exception After: 1784 */ constructor call
                                                                                              __log__ ("TLE282", $TLE282, 1733);
                                                                                              throw $TLE282; // 1788
                                                                                          }
                                                                                      }
                                                                                  }
    public function next ()/* Entry: 1789, Exit: 1790, Exception Exit: 1791 */ 
                                                                              {
                                                                                  $TLE283 = $this->parse ();// /* , Call: 1794, Return: 1795, Exception Return: 1796, After: 1792, Exception After: 1793 */ method call
                                                                                  __log__ ("TLE283", $TLE283, 1742);
                                                                                  $TSNNt469 = $TLE283; // 1797
                                                                                  __log__ ("TSNNt469", $TSNNt469, 1747);
                                                                                  $this->current = $TSNNt469; // 1798
                                                                              }
    public function peek ()/* Entry: 1799, Exit: 1800, Exception Exit: 1801 */ 
                                                                              {
                                                                                  $TSNNt470 = $this->current; // 1802
                                                                                  __log__ ("TSNNt470", $TSNNt470, 1752);
                                                                                  return $TSNNt470; // 1803
                                                                              }
}
class parseexception extends exception { // "1804"
}
class parser { // "1805"
    protected $builder;
    public function __construct ()/* Entry: 1806, Exit: 1807, Exception Exit: 1808 */ 
                                                                                     {
                                                                                         $TLE284 = new exprbuilder ();// /* , Call: 1811, Return: 1812, Exception Return: 1813, After: 1809, Exception After: 1810 */ constructor call
                                                                                         __log__ ("TLE284", $TLE284, 1759);
                                                                                         $TSNNt471 = $TLE284; // 1814
                                                                                         __log__ ("TSNNt471", $TSNNt471, 1764);
                                                                                         $this->builder = $TSNNt471; // 1815
                                                                                     }
    public function parse ($inp)/* Entry: 1816, Exit: 1817, Exception Exit: 1818 */ 
                                                                                   {
                                                                                       $TLE285 = new tokenizer ($inp);// /* , Call: 1821, Return: 1822, Exception Return: 1823, After: 1819, Exception After: 1820 */ constructor call
                                                                                       __log__ ("TLE285", $TLE285, 1769);
                                                                                       $TSNNt472 = $TLE285; // 1824
                                                                                       __log__ ("TSNNt472", $TSNNt472, 1774);
                                                                                       $this->tokenizer = $TSNNt472; // 1825
                                                                                       $expr = $this->parseexpr ();// /* , Call: 1828, Return: 1829, Exception Return: 1830, After: 1826, Exception After: 1827 */ method call
                                                                                       __log__ ("expr", $expr, 1776);
                                                                                       $TLE286 = token::EOF; // 1831
                                                                                       __log__ ("TLE286", $TLE286, 1781);
                                                                                       $this->match ($TLE286);// /* , Call: 1834, Return: 1835, Exception Return: 1836, After: 1832, Exception After: 1833 */ method call
                                                                                       return $expr; // 1837
                                                                                   }
    protected function lookahead ()/* Entry: 1838, Exit: 1839, Exception Exit: 1840 */ 
                                                                                      {
                                                                                          $TSNNt473 = $this->tokenizer; // 1841
                                                                                          __log__ ("TSNNt473", $TSNNt473, 1791);
                                                                                          $TLE287 = $TSNNt473->peek ();// /* , Call: 1844, Return: 1845, Exception Return: 1846, After: 1842, Exception After: 1843 */ method call
                                                                                          __log__ ("TLE287", $TLE287, 1792);
                                                                                          return $TLE287; // 1847
                                                                                      }
    protected function accept ()/* Entry: 1848, Exit: 1849, Exception Exit: 1850 */ 
                                                                                   {
                                                                                       $TSNNt474 = $this->tokenizer; // 1851
                                                                                       __log__ ("TSNNt474", $TSNNt474, 1801);
                                                                                       $TSNNt474->next ();// /* , Call: 1854, Return: 1855, Exception Return: 1856, After: 1852, Exception After: 1853 */ method call
                                                                                   }
    protected function match ($kind)/* Entry: 1857, Exit: 1858, Exception Exit: 1859 */ 
                                                                                       {
                                                                                           $TSNNt475 = $this->tokenizer; // 1860
                                                                                           __log__ ("TSNNt475", $TSNNt475, 1810);
                                                                                           $current = $TSNNt475->peek ();// /* , Call: 1863, Return: 1864, Exception Return: 1865, After: 1861, Exception After: 1862 */ method call
                                                                                           __log__ ("current", $current, 1811);
                                                                                           $TLE288 = $current->getkind ();// /* , Call: 1868, Return: 1869, Exception Return: 1870, After: 1866, Exception After: 1867 */ method call
                                                                                           __log__ ("TLE288", $TLE288, 1816);
                                                                                           $TLE289 = $TLE288 == $kind; // 1871
                                                                                           __log__ ("TLE289", $TLE289, 1821);
                                                                                           if ($TLE289){
                                                                                               $TSNNt476 = $this->tokenizer; // 1873
                                                                                               __log__ ("TSNNt476", $TSNNt476, 1823);
                                                                                               $TSNNt476->next ();// /* , Call: 1876, Return: 1877, Exception Return: 1878, After: 1874, Exception After: 1875 */ method call
                                                                                               return $current; // 1879
                                                                                           }
                                                                                           else {
                                                                                               $TLE290 = "Expecting: "; // 1880
                                                                                               __log__ ("TLE290", $TLE290, 1830);
                                                                                               $TLE291 = $TLE290 . $token; // 1881
                                                                                               __log__ ("TLE291", $TLE291, 1831);
                                                                                               $TLE292 = new parseexception ($TLE291);// /* , Call: 1884, Return: 1885, Exception Return: 1886, After: 1882, Exception After: 1883 */ constructor call
                                                                                               __log__ ("TLE292", $TLE292, 1832);
                                                                                               throw $TLE292; // 1887
                                                                                           }
                                                                                       }
    protected function parseexpr ()/* Entry: 1888, Exit: 1889, Exception Exit: 1890 */ 
                                                                                      {
                                                                                          $token = $this->lookahead ();// /* , Call: 1893, Return: 1894, Exception Return: 1895, After: 1891, Exception After: 1892 */ method call
                                                                                          __log__ ("token", $token, 1841);
                                                                                          $TEL11 = $token->getkind ();// /* , Call: 1898, Return: 1899, Exception Return: 1900, After: 1896, Exception After: 1897 */ method call
                                                                                          __log__ ("TEL11", $TEL11, 1846);
                                                                                          $TSM12 = false; // 1901
                                                                                          __log__ ("TSM12", $TSM12, 1851);
                                                                                          $ElcfPD24 = true; // 1902
                                                                                          __log__ ("ElcfPD24", $ElcfPD24, 1852);
                                                                                          while (True){
                                                                                              if ($ElcfPD24){
                                                                                                  $ElcfPD24 = false; // 1905
                                                                                                  __log__ ("ElcfPD24", $ElcfPD24, 1855);
                                                                                              }
                                                                                              else {
                                                                                                  $TLE293 = false; // 1906
                                                                                                  __log__ ("TLE293", $TLE293, 1856);
                                                                                                  $TLE294 = !$TLE293; // 1907
                                                                                                  __log__ ("TLE294", $TLE294, 1857);
                                                                                                  if ($TLE294){
                                                                                                      break; // 1909
                                                                                                  }
                                                                                                  else {
                                                                                                       // "1910 skip"
                                                                                                  }
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                   // "1912 skip"
                                                                                              }
                                                                                              else {
                                                                                                  $TL13 = token::VARIABLE; // 1913
                                                                                                  __log__ ("TL13", $TL13, 1863);
                                                                                                  $TLE295 = $TEL11 == $TL13; // 1914
                                                                                                  __log__ ("TLE295", $TLE295, 1864);
                                                                                                  if ($TLE295){
                                                                                                      $TSM12 = true; // 1916
                                                                                                      __log__ ("TSM12", $TSM12, 1866);
                                                                                                  }
                                                                                                  else {
                                                                                                       // "1917 skip"
                                                                                                  }
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                  $this->accept ();// /* , Call: 1921, Return: 1922, Exception Return: 1923, After: 1919, Exception After: 1920 */ method call
                                                                                                  $TLE296 = $token->getvalue ();// /* , Call: 1926, Return: 1927, Exception Return: 1928, After: 1924, Exception After: 1925 */ method call
                                                                                                  __log__ ("TLE296", $TLE296, 1874);
                                                                                                  $TSNNt477 = $this->builder; // 1929
                                                                                                  __log__ ("TSNNt477", $TSNNt477, 1879);
                                                                                                  $TLE297 = $TSNNt477->createvar ($TLE296);// /* , Call: 1932, Return: 1933, Exception Return: 1934, After: 1930, Exception After: 1931 */ method call
                                                                                                  __log__ ("TLE297", $TLE297, 1880);
                                                                                                  return $TLE297; // 1935
                                                                                              }
                                                                                              else {
                                                                                                   // "1936 skip"
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                   // "1938 skip"
                                                                                              }
                                                                                              else {
                                                                                                  $TL14 = token::CONSTANT; // 1939
                                                                                                  __log__ ("TL14", $TL14, 1889);
                                                                                                  $TLE298 = $TEL11 == $TL14; // 1940
                                                                                                  __log__ ("TLE298", $TLE298, 1890);
                                                                                                  if ($TLE298){
                                                                                                      $TSM12 = true; // 1942
                                                                                                      __log__ ("TSM12", $TSM12, 1892);
                                                                                                  }
                                                                                                  else {
                                                                                                       // "1943 skip"
                                                                                                  }
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                  $this->accept ();// /* , Call: 1947, Return: 1948, Exception Return: 1949, After: 1945, Exception After: 1946 */ method call
                                                                                                  $TLE299 = $token->getvalue ();// /* , Call: 1952, Return: 1953, Exception Return: 1954, After: 1950, Exception After: 1951 */ method call
                                                                                                  __log__ ("TLE299", $TLE299, 1900);
                                                                                                  $TSNNt478 = $this->builder; // 1955
                                                                                                  __log__ ("TSNNt478", $TSNNt478, 1905);
                                                                                                  $TLE300 = $TSNNt478->createconst ($TLE299);// /* , Call: 1958, Return: 1959, Exception Return: 1960, After: 1956, Exception After: 1957 */ method call
                                                                                                  __log__ ("TLE300", $TLE300, 1906);
                                                                                                  return $TLE300; // 1961
                                                                                              }
                                                                                              else {
                                                                                                   // "1962 skip"
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                   // "1964 skip"
                                                                                              }
                                                                                              else {
                                                                                                  $TL15 = token::EXCLAMATIONMARK; // 1965
                                                                                                  __log__ ("TL15", $TL15, 1915);
                                                                                                  $TLE301 = $TEL11 == $TL15; // 1966
                                                                                                  __log__ ("TLE301", $TLE301, 1916);
                                                                                                  if ($TLE301){
                                                                                                      $TSM12 = true; // 1968
                                                                                                      __log__ ("TSM12", $TSM12, 1918);
                                                                                                  }
                                                                                                  else {
                                                                                                       // "1969 skip"
                                                                                                  }
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                  $this->accept ();// /* , Call: 1973, Return: 1974, Exception Return: 1975, After: 1971, Exception After: 1972 */ method call
                                                                                                  $expr = $this->parseexpr ();// /* , Call: 1978, Return: 1979, Exception Return: 1980, After: 1976, Exception After: 1977 */ method call
                                                                                                  __log__ ("expr", $expr, 1926);
                                                                                                  $TSNNt479 = $this->builder; // 1981
                                                                                                  __log__ ("TSNNt479", $TSNNt479, 1931);
                                                                                                  $TLE302 = $TSNNt479->createfactor ($expr);// /* , Call: 1984, Return: 1985, Exception Return: 1986, After: 1982, Exception After: 1983 */ method call
                                                                                                  __log__ ("TLE302", $TLE302, 1932);
                                                                                                  return $TLE302; // 1987
                                                                                              }
                                                                                              else {
                                                                                                   // "1988 skip"
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                   // "1990 skip"
                                                                                              }
                                                                                              else {
                                                                                                  $TL16 = token::LEFTPARENT; // 1991
                                                                                                  __log__ ("TL16", $TL16, 1941);
                                                                                                  $TLE303 = $TEL11 == $TL16; // 1992
                                                                                                  __log__ ("TLE303", $TLE303, 1942);
                                                                                                  if ($TLE303){
                                                                                                      $TSM12 = true; // 1994
                                                                                                      __log__ ("TSM12", $TSM12, 1944);
                                                                                                  }
                                                                                                  else {
                                                                                                       // "1995 skip"
                                                                                                  }
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                  $this->accept ();// /* , Call: 1999, Return: 2000, Exception Return: 2001, After: 1997, Exception After: 1998 */ method call
                                                                                                  $left = $this->parseexpr ();// /* , Call: 2004, Return: 2005, Exception Return: 2006, After: 2002, Exception After: 2003 */ method call
                                                                                                  __log__ ("left", $left, 1952);
                                                                                                  $op = $this->parseoperator ();// /* , Call: 2009, Return: 2010, Exception Return: 2011, After: 2007, Exception After: 2008 */ method call
                                                                                                  __log__ ("op", $op, 1957);
                                                                                                  $right = $this->parseexpr ();// /* , Call: 2014, Return: 2015, Exception Return: 2016, After: 2012, Exception After: 2013 */ method call
                                                                                                  __log__ ("right", $right, 1962);
                                                                                                  $TLE304 = token::RIGHTPARENT; // 2017
                                                                                                  __log__ ("TLE304", $TLE304, 1967);
                                                                                                  $this->match ($TLE304);// /* , Call: 2020, Return: 2021, Exception Return: 2022, After: 2018, Exception After: 2019 */ method call
                                                                                                  $TEL17 = $op->getkind ();// /* , Call: 2025, Return: 2026, Exception Return: 2027, After: 2023, Exception After: 2024 */ method call
                                                                                                  __log__ ("TEL17", $TEL17, 1973);
                                                                                                  $TSM18 = false; // 2028
                                                                                                  __log__ ("TSM18", $TSM18, 1978);
                                                                                                  $ElcfPD23 = true; // 2029
                                                                                                  __log__ ("ElcfPD23", $ElcfPD23, 1979);
                                                                                                  while (True){
                                                                                                      if ($ElcfPD23){
                                                                                                          $ElcfPD23 = false; // 2032
                                                                                                          __log__ ("ElcfPD23", $ElcfPD23, 1982);
                                                                                                      }
                                                                                                      else {
                                                                                                          $TLE305 = false; // 2033
                                                                                                          __log__ ("TLE305", $TLE305, 1983);
                                                                                                          $TLE306 = !$TLE305; // 2034
                                                                                                          __log__ ("TLE306", $TLE306, 1984);
                                                                                                          if ($TLE306){
                                                                                                              break; // 2036
                                                                                                          }
                                                                                                          else {
                                                                                                               // "2037 skip"
                                                                                                          }
                                                                                                      }
                                                                                                      if ($TSM18){
                                                                                                           // "2039 skip"
                                                                                                      }
                                                                                                      else {
                                                                                                          $TL19 = token::PLUS; // 2040
                                                                                                          __log__ ("TL19", $TL19, 1990);
                                                                                                          $TLE307 = $TEL17 == $TL19; // 2041
                                                                                                          __log__ ("TLE307", $TLE307, 1991);
                                                                                                          if ($TLE307){
                                                                                                              $TSM18 = true; // 2043
                                                                                                              __log__ ("TSM18", $TSM18, 1993);
                                                                                                          }
                                                                                                          else {
                                                                                                               // "2044 skip"
                                                                                                          }
                                                                                                      }
                                                                                                      if ($TSM18){
                                                                                                          $TSNNt480 = $this->builder; // 2046
                                                                                                          __log__ ("TSNNt480", $TSNNt480, 1996);
                                                                                                          $TLE308 = $TSNNt480->createplus ($left, $right);// /* , Call: 2049, Return: 2050, Exception Return: 2051, After: 2047, Exception After: 2048 */ method call
                                                                                                          __log__ ("TLE308", $TLE308, 1997);
                                                                                                          return $TLE308; // 2052
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2053 skip"
                                                                                                      }
                                                                                                      if ($TSM18){
                                                                                                           // "2055 skip"
                                                                                                      }
                                                                                                      else {
                                                                                                          $TL20 = token::MIN; // 2056
                                                                                                          __log__ ("TL20", $TL20, 2006);
                                                                                                          $TLE309 = $TEL17 == $TL20; // 2057
                                                                                                          __log__ ("TLE309", $TLE309, 2007);
                                                                                                          if ($TLE309){
                                                                                                              $TSM18 = true; // 2059
                                                                                                              __log__ ("TSM18", $TSM18, 2009);
                                                                                                          }
                                                                                                          else {
                                                                                                               // "2060 skip"
                                                                                                          }
                                                                                                      }
                                                                                                      if ($TSM18){
                                                                                                          $TSNNt481 = $this->builder; // 2062
                                                                                                          __log__ ("TSNNt481", $TSNNt481, 2012);
                                                                                                          $TLE310 = $TSNNt481->createmin ($left, $right);// /* , Call: 2065, Return: 2066, Exception Return: 2067, After: 2063, Exception After: 2064 */ method call
                                                                                                          __log__ ("TLE310", $TLE310, 2013);
                                                                                                          return $TLE310; // 2068
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2069 skip"
                                                                                                      }
                                                                                                      if ($TSM18){
                                                                                                           // "2071 skip"
                                                                                                      }
                                                                                                      else {
                                                                                                          $TL21 = token::MUL; // 2072
                                                                                                          __log__ ("TL21", $TL21, 2022);
                                                                                                          $TLE311 = $TEL17 == $TL21; // 2073
                                                                                                          __log__ ("TLE311", $TLE311, 2023);
                                                                                                          if ($TLE311){
                                                                                                              $TSM18 = true; // 2075
                                                                                                              __log__ ("TSM18", $TSM18, 2025);
                                                                                                          }
                                                                                                          else {
                                                                                                               // "2076 skip"
                                                                                                          }
                                                                                                      }
                                                                                                      if ($TSM18){
                                                                                                          $TSNNt482 = $this->builder; // 2078
                                                                                                          __log__ ("TSNNt482", $TSNNt482, 2028);
                                                                                                          $TLE312 = $TSNNt482->createmul ($left, $right);// /* , Call: 2081, Return: 2082, Exception Return: 2083, After: 2079, Exception After: 2080 */ method call
                                                                                                          __log__ ("TLE312", $TLE312, 2029);
                                                                                                          return $TLE312; // 2084
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2085 skip"
                                                                                                      }
                                                                                                      if ($TSM18){
                                                                                                           // "2087 skip"
                                                                                                      }
                                                                                                      else {
                                                                                                          $TL22 = token::DIV; // 2088
                                                                                                          __log__ ("TL22", $TL22, 2038);
                                                                                                          $TLE313 = $TEL17 == $TL22; // 2089
                                                                                                          __log__ ("TLE313", $TLE313, 2039);
                                                                                                          if ($TLE313){
                                                                                                              $TSM18 = true; // 2091
                                                                                                              __log__ ("TSM18", $TSM18, 2041);
                                                                                                          }
                                                                                                          else {
                                                                                                               // "2092 skip"
                                                                                                          }
                                                                                                      }
                                                                                                      if ($TSM18){
                                                                                                          $TSNNt483 = $this->builder; // 2094
                                                                                                          __log__ ("TSNNt483", $TSNNt483, 2044);
                                                                                                          $TLE314 = $TSNNt483->creatediv ($left, $right);// /* , Call: 2097, Return: 2098, Exception Return: 2099, After: 2095, Exception After: 2096 */ method call
                                                                                                          __log__ ("TLE314", $TLE314, 2045);
                                                                                                          return $TLE314; // 2100
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2101 skip"
                                                                                                      }
                                                                                                  }
                                                                                                  break; // 2102
                                                                                              }
                                                                                              else {
                                                                                                   // "2103 skip"
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                  $TLE315 = "Unable to parse expression, expecting: variable, constant or '('"; // 2105
                                                                                                  __log__ ("TLE315", $TLE315, 2055);
                                                                                                  $TLE316 = new parseexception ($TLE315);// /* , Call: 2108, Return: 2109, Exception Return: 2110, After: 2106, Exception After: 2107 */ constructor call
                                                                                                  __log__ ("TLE316", $TLE316, 2056);
                                                                                                  throw $TLE316; // 2111
                                                                                              }
                                                                                              else {
                                                                                                   // "2112 skip"
                                                                                              }
                                                                                              if ($TSM12){
                                                                                                   // "2114 skip"
                                                                                              }
                                                                                              else {
                                                                                                  $TLE317 = "Unable to parse expression, expecting: variable, constant or '('"; // 2115
                                                                                                  __log__ ("TLE317", $TLE317, 2065);
                                                                                                  $TLE318 = new parseexception ($TLE317);// /* , Call: 2118, Return: 2119, Exception Return: 2120, After: 2116, Exception After: 2117 */ constructor call
                                                                                                  __log__ ("TLE318", $TLE318, 2066);
                                                                                                  throw $TLE318; // 2121
                                                                                              }
                                                                                          }
                                                                                      }
    protected function parseoperator ()/* Entry: 2122, Exit: 2123, Exception Exit: 2124 */ 
                                                                                          {
                                                                                              $token = $this->lookahead ();// /* , Call: 2127, Return: 2128, Exception Return: 2129, After: 2125, Exception After: 2126 */ method call
                                                                                              __log__ ("token", $token, 2075);
                                                                                              $TEL25 = $token->getkind ();// /* , Call: 2132, Return: 2133, Exception Return: 2134, After: 2130, Exception After: 2131 */ method call
                                                                                              __log__ ("TEL25", $TEL25, 2080);
                                                                                              $TSM26 = false; // 2135
                                                                                              __log__ ("TSM26", $TSM26, 2085);
                                                                                              $ElcfPD31 = true; // 2136
                                                                                              __log__ ("ElcfPD31", $ElcfPD31, 2086);
                                                                                              while (True){
                                                                                                  if ($ElcfPD31){
                                                                                                      $ElcfPD31 = false; // 2139
                                                                                                      __log__ ("ElcfPD31", $ElcfPD31, 2089);
                                                                                                  }
                                                                                                  else {
                                                                                                      $TLE319 = false; // 2140
                                                                                                      __log__ ("TLE319", $TLE319, 2090);
                                                                                                      $TLE320 = !$TLE319; // 2141
                                                                                                      __log__ ("TLE320", $TLE320, 2091);
                                                                                                      if ($TLE320){
                                                                                                          break; // 2143
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2144 skip"
                                                                                                      }
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                       // "2146 skip"
                                                                                                  }
                                                                                                  else {
                                                                                                      $TL27 = token::MIN; // 2147
                                                                                                      __log__ ("TL27", $TL27, 2097);
                                                                                                      $TLE321 = $TEL25 == $TL27; // 2148
                                                                                                      __log__ ("TLE321", $TLE321, 2098);
                                                                                                      if ($TLE321){
                                                                                                          $TSM26 = true; // 2150
                                                                                                          __log__ ("TSM26", $TSM26, 2100);
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2151 skip"
                                                                                                      }
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                       // "2153 skip"
                                                                                                  }
                                                                                                  else {
                                                                                                       // "2154 skip"
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                       // "2156 skip"
                                                                                                  }
                                                                                                  else {
                                                                                                      $TL28 = token::PLUS; // 2157
                                                                                                      __log__ ("TL28", $TL28, 2107);
                                                                                                      $TLE322 = $TEL25 == $TL28; // 2158
                                                                                                      __log__ ("TLE322", $TLE322, 2108);
                                                                                                      if ($TLE322){
                                                                                                          $TSM26 = true; // 2160
                                                                                                          __log__ ("TSM26", $TSM26, 2110);
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2161 skip"
                                                                                                      }
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                       // "2163 skip"
                                                                                                  }
                                                                                                  else {
                                                                                                       // "2164 skip"
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                       // "2166 skip"
                                                                                                  }
                                                                                                  else {
                                                                                                      $TL29 = token::MUL; // 2167
                                                                                                      __log__ ("TL29", $TL29, 2117);
                                                                                                      $TLE323 = $TEL25 == $TL29; // 2168
                                                                                                      __log__ ("TLE323", $TLE323, 2118);
                                                                                                      if ($TLE323){
                                                                                                          $TSM26 = true; // 2170
                                                                                                          __log__ ("TSM26", $TSM26, 2120);
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2171 skip"
                                                                                                      }
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                       // "2173 skip"
                                                                                                  }
                                                                                                  else {
                                                                                                       // "2174 skip"
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                       // "2176 skip"
                                                                                                  }
                                                                                                  else {
                                                                                                      $TL30 = token::DIV; // 2177
                                                                                                      __log__ ("TL30", $TL30, 2127);
                                                                                                      $TLE324 = $TEL25 == $TL30; // 2178
                                                                                                      __log__ ("TLE324", $TLE324, 2128);
                                                                                                      if ($TLE324){
                                                                                                          $TSM26 = true; // 2180
                                                                                                          __log__ ("TSM26", $TSM26, 2130);
                                                                                                      }
                                                                                                      else {
                                                                                                           // "2181 skip"
                                                                                                      }
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                      $this->accept ();// /* , Call: 2185, Return: 2186, Exception Return: 2187, After: 2183, Exception After: 2184 */ method call
                                                                                                      return $token; // 2188
                                                                                                  }
                                                                                                  else {
                                                                                                       // "2189 skip"
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                      $TLE325 = "Unable to parse operator, expecting: '+', '-', '*' or '/'"; // 2191
                                                                                                      __log__ ("TLE325", $TLE325, 2141);
                                                                                                      $TLE326 = new parseexception ($TLE325);// /* , Call: 2194, Return: 2195, Exception Return: 2196, After: 2192, Exception After: 2193 */ constructor call
                                                                                                      __log__ ("TLE326", $TLE326, 2142);
                                                                                                      throw $TLE326; // 2197
                                                                                                  }
                                                                                                  else {
                                                                                                       // "2198 skip"
                                                                                                  }
                                                                                                  if ($TSM26){
                                                                                                       // "2200 skip"
                                                                                                  }
                                                                                                  else {
                                                                                                      $TLE327 = "Unable to parse operator, expecting: '+', '-', '*' or '/'"; // 2201
                                                                                                      __log__ ("TLE327", $TLE327, 2151);
                                                                                                      $TLE328 = new parseexception ($TLE327);// /* , Call: 2204, Return: 2205, Exception Return: 2206, After: 2202, Exception After: 2203 */ constructor call
                                                                                                      __log__ ("TLE328", $TLE328, 2152);
                                                                                                      throw $TLE328; // 2207
                                                                                                  }
                                                                                              }
                                                                                          }
}
$default = new env ();// /* , Call: 2210, Return: 2211, Exception Return: 2212, After: 2208, Exception After: 2209 */ constructor call
__log__ ("default", $default, 2158);
$TLE329 = "x"; // 2213
__log__ ("TLE329", $TLE329, 2163);
$TLE330 = 2; // 2214
__log__ ("TLE330", $TLE330, 2164);
$default->store ($TLE329, $TLE330);// /* , Call: 2217, Return: 2218, Exception Return: 2219, After: 2215, Exception After: 2216 */ method call
$TLE331 = "y"; // 2220
__log__ ("TLE331", $TLE331, 2170);
$TLE332 = 5; // 2221
__log__ ("TLE332", $TLE332, 2171);
$default->store ($TLE331, $TLE332);// /* , Call: 2224, Return: 2225, Exception Return: 2226, After: 2222, Exception After: 2223 */ method call
$parser = new parser ();// /* , Call: 2229, Return: 2230, Exception Return: 2231, After: 2227, Exception After: 2228 */ constructor call
__log__ ("parser", $parser, 2177);
unset ($TSa333); // 2232
$TSa333 = (array) $TSa333; // 2233
__log__ ("TSa333", $TSa333, 2183);
$inp = $TSa333; // 2234
__log__ ("inp", $inp, 2184);
$TLE334 = "(100/2)"; // 2235
__log__ ("TLE334", $TLE334, 2185);
$TLE335 = 50; // 2236
__log__ ("TLE335", $TLE335, 2186);
unset ($TSa336); // 2237
$TSa336 = (array) $TSa336; // 2238
__log__ ("TSa336", $TSa336, 2188);
$TLE360 = 0; // 2239
__log__ ("TLE360", $TLE360, 2189);
$TSNNi484 = $TLE334; // 2240
__log__ ("TSNNi484", $TSNNi484, 2190);
$TSa336[$TLE360] = $TSNNi484; // 2241
$TLE361 = 1; // 2242
__log__ ("TLE361", $TLE361, 2192);
$TSNNi485 = $TLE335; // 2243
__log__ ("TSNNi485", $TSNNi485, 2193);
$TSa336[$TLE361] = $TSNNi485; // 2244
$inp[] = $TSa336; // 2245
$TLE337 = "(100/y)"; // 2246
__log__ ("TLE337", $TLE337, 2196);
$TLE338 = 20; // 2247
__log__ ("TLE338", $TLE338, 2197);
unset ($TSa339); // 2248
$TSa339 = (array) $TSa339; // 2249
__log__ ("TSa339", $TSa339, 2199);
$TLE362 = 0; // 2250
__log__ ("TLE362", $TLE362, 2200);
$TSNNi486 = $TLE337; // 2251
__log__ ("TSNNi486", $TSNNi486, 2201);
$TSa339[$TLE362] = $TSNNi486; // 2252
$TLE363 = 1; // 2253
__log__ ("TLE363", $TLE363, 2203);
$TSNNi487 = $TLE338; // 2254
__log__ ("TSNNi487", $TSNNi487, 2204);
$TSa339[$TLE363] = $TSNNi487; // 2255
$inp[] = $TSa339; // 2256
$TLE340 = "(10+(20+(5*x)))"; // 2257
__log__ ("TLE340", $TLE340, 2207);
$TLE341 = 40; // 2258
__log__ ("TLE341", $TLE341, 2208);
unset ($TSa342); // 2259
$TSa342 = (array) $TSa342; // 2260
__log__ ("TSa342", $TSa342, 2210);
$TLE364 = 0; // 2261
__log__ ("TLE364", $TLE364, 2211);
$TSNNi488 = $TLE340; // 2262
__log__ ("TSNNi488", $TSNNi488, 2212);
$TSa342[$TLE364] = $TSNNi488; // 2263
$TLE365 = 1; // 2264
__log__ ("TLE365", $TLE365, 2214);
$TSNNi489 = $TLE341; // 2265
__log__ ("TSNNi489", $TSNNi489, 2215);
$TSa342[$TLE365] = $TSNNi489; // 2266
$inp[] = $TSa342; // 2267
$TLE343 = "!y"; // 2268
__log__ ("TLE343", $TLE343, 2218);
$TLE344 = 120; // 2269
__log__ ("TLE344", $TLE344, 2219);
unset ($TSa345); // 2270
$TSa345 = (array) $TSa345; // 2271
__log__ ("TSa345", $TSa345, 2221);
$TLE366 = 0; // 2272
__log__ ("TLE366", $TLE366, 2222);
$TSNNi490 = $TLE343; // 2273
__log__ ("TSNNi490", $TSNNi490, 2223);
$TSa345[$TLE366] = $TSNNi490; // 2274
$TLE367 = 1; // 2275
__log__ ("TLE367", $TLE367, 2225);
$TSNNi491 = $TLE344; // 2276
__log__ ("TSNNi491", $TSNNi491, 2226);
$TSa345[$TLE367] = $TSNNi491; // 2277
$inp[] = $TSa345; // 2278
$i = 0; // 2279
__log__ ("i", $i, 2229);
$ElcfPF32 = true; // 2280
__log__ ("ElcfPF32", $ElcfPF32, 2230);
while (True){
    if ($ElcfPF32){
        $ElcfPF32 = false; // 2283
        __log__ ("ElcfPF32", $ElcfPF32, 2233);
    }
    else {
        ++$i; // 2284
        __log__ ("i", $i, 2234);
    }
    $TLE346 = sizeof ($inp); // "2285native call"
    __log__ ("TLE346", $TLE346, 2235);
    $TLE347 = $i < $TLE346; // 2286
    __log__ ("TLE347", $TLE347, 2236);
    if ($TLE347){
         // "2288 skip"
    }
    else {
        break; // 2289
    }
    $evaluator = new evaluationvisitor ($default);// /* , Call: 2292, Return: 2293, Exception Return: 2294, After: 2290, Exception After: 2291 */ constructor call
    __log__ ("evaluator", $evaluator, 2240);
    $TLE348 = 0; // 2295
    __log__ ("TLE348", $TLE348, 2245);
    $TSNNi492 = $inp[$i]; // 2296
    __log__ ("TSNNi492", $TSNNi492, 2246);
    $TSNNi493 = $TSNNi492[$TLE348]; // 2297
    __log__ ("TSNNi493", $TSNNi493, 2247);
    $expr = $parser->parse ($TSNNi493);// /* , Call: 2300, Return: 2301, Exception Return: 2302, After: 2298, Exception After: 2299 */ method call
    __log__ ("expr", $expr, 2248);
    $TLE349 = new prettyprintingvisitor ();// /* , Call: 2305, Return: 2306, Exception Return: 2307, After: 2303, Exception After: 2304 */ constructor call
    __log__ ("TLE349", $TLE349, 2253);
    $expr->visit ($TLE349);// /* , Call: 2310, Return: 2311, Exception Return: 2312, After: 2308, Exception After: 2309 */ method call
    $expr->visit ($evaluator);// /* , Call: 2315, Return: 2316, Exception Return: 2317, After: 2313, Exception After: 2314 */ method call
    $TLE350 = " = "; // 2318
    __log__ ("TLE350", $TLE350, 2268);
    print ($TLE350); // "2319native call"
    $TLE351 = $expr->evaluate ($default);// /* , Call: 2322, Return: 2323, Exception Return: 2324, After: 2320, Exception After: 2321 */ method call
    __log__ ("TLE351", $TLE351, 2270);
    print ($TLE351); // "2325native call"
    $TLE352 = "\n"; // 2326
    __log__ ("TLE352", $TLE352, 2276);
    print ($TLE352); // "2327native call"
    $TLE353 = $evaluator->getresult ();// /* , Call: 2330, Return: 2331, Exception Return: 2332, After: 2328, Exception After: 2329 */ method call
    __log__ ("TLE353", $TLE353, 2278);
    $TLE354 = 1; // 2333
    __log__ ("TLE354", $TLE354, 2283);
    $TSNNi494 = $inp[$i]; // 2334
    __log__ ("TSNNi494", $TSNNi494, 2284);
    $TSNNi495 = $TSNNi494[$TLE354]; // 2335
    __log__ ("TSNNi495", $TSNNi495, 2285);
    $TLE41 = $TLE353 == $TSNNi495; // 2336
    __log__ ("TLE41", $TLE41, 2286);
    if ($TLE41){
        $TLE355 = $expr->evaluate ($default);// /* , Call: 2340, Return: 2341, Exception Return: 2342, After: 2338, Exception After: 2339 */ method call
        __log__ ("TLE355", $TLE355, 2288);
        $TLE356 = 1; // 2343
        __log__ ("TLE356", $TLE356, 2293);
        $TSNNi496 = $inp[$i]; // 2344
        __log__ ("TSNNi496", $TSNNi496, 2294);
        $TSNNi497 = $TSNNi496[$TLE356]; // 2345
        __log__ ("TSNNi497", $TSNNi497, 2295);
        $TEF42 = $TLE355 == $TSNNi497; // 2346
        __log__ ("TEF42", $TEF42, 2296);
    }
    else {
        $TEF42 = $TLE41; // 2347
        __log__ ("TEF42", $TEF42, 2297);
    }
    $TLE357 = (bool) $TEF42; // 2348
    __log__ ("TLE357", $TLE357, 2298);
    if ($TLE357){
        $TLE358 = "\nPASS\n"; // 2350
        __log__ ("TLE358", $TLE358, 2300);
        print ($TLE358); // "2351native call"
    }
    else {
        $TLE359 = "\nFAIL\n"; // 2352
        __log__ ("TLE359", $TLE359, 2302);
        print ($TLE359); // "2353native call"
    }
}
/*
Native classes and their program labels
class directoryiterator (2355 )
class domdocument (2358 )
    load 2360 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}}})
class domelement (2363 )
class domnode (2366 )
class domnodelist (2369 )
    item 2371 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeObject "domnode"]}})
class exception (2374 )
    getmessage 2376 (TValue {value = fromList [NativeString]})
    getprevious 2378 (TValue {value = fromList [NativeObject "exception"]})
    getcode 2380 (TValue {value = fromList [NativeString,NativeInteger]})
    getfile 2382 (TValue {value = fromList [NativeString]})
    getline 2384 (TValue {value = fromList [NativeInteger]})
    gettraceasstring 2386 (TValue {value = fromList [NativeString]})
    __tostring 2388 (TValue {value = fromList [NativeString]})
    __clone 2390 (TValue {value = fromList [NativeNull]})
class filesystemiterator (2393 )
class invalidargumentexception (2396 )
class logicexception (2399 )
class outofboundsexception (2402 )
class recursivedirectoryiterator (2405 )
class recursiveiteratoriterator (2408 )
class reflectionclass (2411 )
    getname 2413 (TValue {value = fromList [NativeString]})
class runtimeexception (2416 )
class simplexmlelement (2419 )
    asxml 2421 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeString,NativeBoolean]}})
    attributes 2423 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeBoolean]}, right = TValue {value = fromList [NativeObject "simplexmlelement"]}}})
class splfileinfo (2426 )
    getatime 2428 (TValue {value = fromList [NativeInteger]})
    getbasename 2430 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeString]}})
    getctime 2432 (TValue {value = fromList [NativeInteger]})
    getextension 2434 (TValue {value = fromList [NativeString]})
    getfileinfo 2436 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeObject "splfileinfo"]}})
    getfilename 2438 (TValue {value = fromList [NativeString]})
    getgroup 2440 (TValue {value = fromList [NativeInteger]})
    getinode 2442 (TValue {value = fromList [NativeInteger]})
    getlinktarget 2444 (TValue {value = fromList [NativeString]})
    getmtime 2446 (TValue {value = fromList [NativeInteger]})
    getowner 2448 (TValue {value = fromList [NativeInteger]})
    getpath 2450 (TValue {value = fromList [NativeString]})
    getpathinfo 2452 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeObject "splfileinfo"]}})
    getpathname 2454 (TValue {value = fromList [NativeString]})
    getperms 2456 (TValue {value = fromList [NativeInteger]})
    getrealpath 2458 (TValue {value = fromList [NativeString]})
    getsize 2460 (TValue {value = fromList [NativeInteger]})
    gettype 2462 (TValue {value = fromList [NativeString]})
    isdir 2464 (TValue {value = fromList [NativeBoolean]})
    isexecutable 2466 (TValue {value = fromList [NativeBoolean]})
    isfile 2468 (TValue {value = fromList [NativeBoolean]})
    islink 2470 (TValue {value = fromList [NativeBoolean]})
    isreadable 2472 (TValue {value = fromList [NativeBoolean]})
    iswritable 2474 (TValue {value = fromList [NativeBoolean]})
    openFile 2476 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeBoolean]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeResource File]}, right = TValue {value = fromList [NativeObject "splfileobject"]}}}})
    setfileclass 2478 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeNull]}})
    setinfoclass 2480 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeNull]}})
    __toString 2482 (TValue {value = fromList [NativeString]})
class ziparchive (2485 )
    addemptydir 2487 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    addfile 2489 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}}}}})
    addfromstring 2491 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    addglob 2493 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeBoolean])]}, right = TValue {value = fromList [NativeBoolean]}}}})
    addpattern 2495 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeBoolean])]}, right = TValue {value = fromList [NativeBoolean]}}}})
    close 2497 (TValue {value = fromList [NativeBoolean]})
    deleteindex 2499 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}})
    deletename 2501 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    extractto 2503 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeString,NativeArray (fromList [NativeInteger]) (fromList [NativeString])]}, right = TValue {value = fromList [NativeBoolean]}}})
    getarchivecomment 2505 (TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}})
    getcommentindex 2507 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getcommentname 2509 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getfromindex 2511 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}}})
    getfromname 2513 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}}})
    getnameindex 2515 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeString]}}})
    getstatusstring 2517 (TValue {value = fromList [NativeString]})
    getstream 2519 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeResource File]}})
    locatename 2521 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeInteger]}}})
    open 2523 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean,NativeInteger]}}})
    renameindex 2525 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    renamename 2527 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    setarchivecomment 2529 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
    setcommentindex 2531 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    setcommentname 2533 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}}})
    statindex 2535 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeArray (fromList [NativeString]) (fromList [NativeString,NativeInteger])]}}})
    statname 2537 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TFun {output = False, optional = True, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeFalse,NativeArray (fromList [NativeString]) (fromList [NativeString,NativeInteger])]}}})
    unchangeall 2539 (TValue {value = fromList [NativeBoolean]})
    unchangearchive 2541 (TValue {value = fromList [NativeBoolean]})
    unchangeindex 2543 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeInteger]}, right = TValue {value = fromList [NativeBoolean]}})
    unchangename 2545 (TFun {output = False, optional = False, left = TValue {value = fromList [NativeString]}, right = TValue {value = fromList [NativeBoolean]}})
*/
?>
